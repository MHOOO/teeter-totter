var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.DEBUG = true;
goog.LOCALE = "en";
goog.provide = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while(namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if(goog.getObjectByName(namespace)) {
        break
      }
      goog.implicitNamespaces_[namespace] = true
    }
  }
  goog.exportPath_(name)
};
goog.setTestOnly = function(opt_message) {
  if(COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + opt_message ? ": " + opt_message : ".");
  }
};
if(!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && !!goog.getObjectByName(name)
  };
  goog.implicitNamespaces_ = {}
}
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if(!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0])
  }
  for(var part;parts.length && (part = parts.shift());) {
    if(!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object
    }else {
      if(cur[part]) {
        cur = cur[part]
      }else {
        cur = cur[part] = {}
      }
    }
  }
};
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for(var part;part = parts.shift();) {
    if(goog.isDefAndNotNull(cur[part])) {
      cur = cur[part]
    }else {
      return null
    }
  }
  return cur
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for(var x in obj) {
    global[x] = obj[x]
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if(!COMPILED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for(var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if(!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {}
      }
      deps.pathToNames[path][provide] = true
    }
    for(var j = 0;require = requires[j];j++) {
      if(!(path in deps.requires)) {
        deps.requires[path] = {}
      }
      deps.requires[path][require] = true
    }
  }
};
goog.ENABLE_DEBUG_LOADER = true;
goog.require = function(name) {
  if(!COMPILED) {
    if(goog.isProvided_(name)) {
      return
    }
    if(goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if(path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if(goog.global.console) {
      goog.global.console["error"](errorMessage)
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(var_args) {
  return arguments[0]
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    return ctor.instance_ || (ctor.instance_ = new ctor)
  }
};
if(!COMPILED && goog.ENABLE_DEBUG_LOADER) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc
  };
  goog.findBasePath_ = function() {
    if(goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return
    }else {
      if(!goog.inHtmlDocument_()) {
        return
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for(var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if(src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if(!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true
    }
  };
  goog.writeScriptTag_ = function(src) {
    if(goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      doc.write('<script type="text/javascript" src="' + src + '"></' + "script>");
      return true
    }else {
      return false
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if(path in deps.written) {
        return
      }
      if(path in deps.visited) {
        if(!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path)
        }
        return
      }
      deps.visited[path] = true;
      if(path in deps.requires) {
        for(var requireName in deps.requires[path]) {
          if(!goog.isProvided_(requireName)) {
            if(requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName])
            }else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if(!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path)
      }
    }
    for(var path in goog.included_) {
      if(!deps.written[path]) {
        visitNode(path)
      }
    }
    for(var i = 0;i < scripts.length;i++) {
      if(scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i])
      }else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if(rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule]
    }else {
      return null
    }
  };
  goog.findBasePath_();
  if(!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js")
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if(s == "object") {
    if(value) {
      if(value instanceof Array) {
        return"array"
      }else {
        if(value instanceof Object) {
          return s
        }
      }
      var className = Object.prototype.toString.call(value);
      if(className == "[object Window]") {
        return"object"
      }
      if(className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return"array"
      }
      if(className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return"function"
      }
    }else {
      return"null"
    }
  }else {
    if(s == "function" && typeof value.call == "undefined") {
      return"object"
    }
  }
  return s
};
goog.propertyIsEnumerableCustom_ = function(object, propName) {
  if(propName in object) {
    for(var key in object) {
      if(key == propName && Object.prototype.hasOwnProperty.call(object, propName)) {
        return true
      }
    }
  }
  return false
};
goog.propertyIsEnumerable_ = function(object, propName) {
  if(object instanceof Object) {
    return Object.prototype.propertyIsEnumerable.call(object, propName)
  }else {
    return goog.propertyIsEnumerableCustom_(object, propName)
  }
};
goog.isDef = function(val) {
  return val !== undefined
};
goog.isNull = function(val) {
  return val === null
};
goog.isDefAndNotNull = function(val) {
  return val != null
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array"
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number"
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function"
};
goog.isString = function(val) {
  return typeof val == "string"
};
goog.isBoolean = function(val) {
  return typeof val == "boolean"
};
goog.isNumber = function(val) {
  return typeof val == "number"
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function"
};
goog.isObject = function(val) {
  var type = goog.typeOf(val);
  return type == "object" || type == "array" || type == "function"
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_)
};
goog.removeUid = function(obj) {
  if("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_)
  }
  try {
    delete obj[goog.UID_PROPERTY_]
  }catch(ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + Math.floor(Math.random() * 2147483648).toString(36);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.cloneObject(obj[key])
    }
    return clone
  }
  return obj
};
Object.prototype.clone;
goog.bindNative_ = function(fn, selfObj, var_args) {
  return fn.call.apply(fn.bind, arguments)
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if(!fn) {
    throw new Error;
  }
  if(arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs)
    }
  }else {
    return function() {
      return fn.apply(selfObj, arguments)
    }
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if(Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_
  }else {
    goog.bind = goog.bindJs_
  }
  return goog.bind.apply(null, arguments)
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = Array.prototype.slice.call(arguments);
    newArgs.unshift.apply(newArgs, args);
    return fn.apply(this, newArgs)
  }
};
goog.mixin = function(target, source) {
  for(var x in source) {
    target[x] = source[x]
  }
};
goog.now = Date.now || function() {
  return+new Date
};
goog.globalEval = function(script) {
  if(goog.global.execScript) {
    goog.global.execScript(script, "JavaScript")
  }else {
    if(goog.global.eval) {
      if(goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ = 1;");
        if(typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true
        }else {
          goog.evalWorksForGlobals_ = false
        }
      }
      if(goog.evalWorksForGlobals_) {
        goog.global.eval(script)
      }else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt)
      }
    }else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for(var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]))
    }
    return mapped.join("-")
  };
  var rename;
  if(goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts
  }else {
    rename = function(a) {
      return a
    }
  }
  if(opt_modifier) {
    return className + "-" + rename(opt_modifier)
  }else {
    return rename(className)
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if(!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING
}
goog.getMsg = function(str, opt_values) {
  var values = opt_values || {};
  for(var key in values) {
    var value = ("" + values[key]).replace(/\$/g, "$$$$");
    str = str.replace(new RegExp("\\{\\$" + key + "\\}", "gi"), value)
  }
  return str
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo)
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if(caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1))
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for(var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if(ctor.prototype[opt_methodName] === caller) {
      foundCaller = true
    }else {
      if(foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args)
      }
    }
  }
  if(me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args)
  }else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global)
};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0
};
goog.string.subs = function(str, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var replacement = String(arguments[i]).replace(/\$/g, "$$$$");
    str = str.replace(/\%s/, replacement)
  }
  return str
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "")
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str)
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str))
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str)
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str)
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str)
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str)
};
goog.string.isSpace = function(ch) {
  return ch == " "
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd"
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ")
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n")
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ")
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ")
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "")
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "")
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "")
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "")
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if(test1 < test2) {
    return-1
  }else {
    if(test1 == test2) {
      return 0
    }else {
      return 1
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if(str1 == str2) {
    return 0
  }
  if(!str1) {
    return-1
  }
  if(!str2) {
    return 1
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for(var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if(a != b) {
      var num1 = parseInt(a, 10);
      if(!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if(!isNaN(num2) && num1 - num2) {
          return num1 - num2
        }
      }
      return a < b ? -1 : 1
    }
  }
  if(tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length
  }
  return str1 < str2 ? -1 : 1
};
goog.string.encodeUriRegExp_ = /^[a-zA-Z0-9\-_.!~*'()]*$/;
goog.string.urlEncode = function(str) {
  str = String(str);
  if(!goog.string.encodeUriRegExp_.test(str)) {
    return encodeURIComponent(str)
  }
  return str
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "))
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "<br />" : "<br>")
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if(opt_isLikelyToContainHtmlChars) {
    return str.replace(goog.string.amperRe_, "&amp;").replace(goog.string.ltRe_, "&lt;").replace(goog.string.gtRe_, "&gt;").replace(goog.string.quotRe_, "&quot;")
  }else {
    if(!goog.string.allRe_.test(str)) {
      return str
    }
    if(str.indexOf("&") != -1) {
      str = str.replace(goog.string.amperRe_, "&amp;")
    }
    if(str.indexOf("<") != -1) {
      str = str.replace(goog.string.ltRe_, "&lt;")
    }
    if(str.indexOf(">") != -1) {
      str = str.replace(goog.string.gtRe_, "&gt;")
    }
    if(str.indexOf('"') != -1) {
      str = str.replace(goog.string.quotRe_, "&quot;")
    }
    return str
  }
};
goog.string.amperRe_ = /&/g;
goog.string.ltRe_ = /</g;
goog.string.gtRe_ = />/g;
goog.string.quotRe_ = /\"/g;
goog.string.allRe_ = /[&<>\"]/;
goog.string.unescapeEntities = function(str) {
  if(goog.string.contains(str, "&")) {
    if("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str)
    }else {
      return goog.string.unescapePureXmlEntities_(str)
    }
  }
  return str
};
goog.string.unescapeEntitiesUsingDom_ = function(str) {
  var seen = {"&amp;":"&", "&lt;":"<", "&gt;":">", "&quot;":'"'};
  var div = document.createElement("div");
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if(value) {
      return value
    }
    if(entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if(!isNaN(n)) {
        value = String.fromCharCode(n)
      }
    }
    if(!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1)
    }
    return seen[s] = value
  })
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return"&";
      case "lt":
        return"<";
      case "gt":
        return">";
      case "quot":
        return'"';
      default:
        if(entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if(!isNaN(n)) {
            return String.fromCharCode(n)
          }
        }
        return s
    }
  })
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " &#160;"), opt_xml)
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for(var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if(str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1)
    }
  }
  return str
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(str.length > chars) {
    str = str.substring(0, chars - 3) + "..."
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if(opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str)
  }
  if(opt_trailingChars && str.length > chars) {
    if(opt_trailingChars > chars) {
      opt_trailingChars = chars
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint)
  }else {
    if(str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos)
    }
  }
  if(opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str)
  }
  return str
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if(s.quote) {
    return s.quote()
  }else {
    var sb = ['"'];
    for(var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch))
    }
    sb.push('"');
    return sb.join("")
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for(var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i))
  }
  return sb.join("")
};
goog.string.escapeChar = function(c) {
  if(c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c]
  }
  if(c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c]
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if(cc > 31 && cc < 127) {
    rv = c
  }else {
    if(cc < 256) {
      rv = "\\x";
      if(cc < 16 || cc > 256) {
        rv += "0"
      }
    }else {
      rv = "\\u";
      if(cc < 4096) {
        rv += "0"
      }
    }
    rv += cc.toString(16).toUpperCase()
  }
  return goog.string.jsEscapeCache_[c] = rv
};
goog.string.toMap = function(s) {
  var rv = {};
  for(var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true
  }
  return rv
};
goog.string.contains = function(s, ss) {
  return s.indexOf(ss) != -1
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if(index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength)
  }
  return resultStr
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "")
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "")
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08")
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string)
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if(index == -1) {
    index = s.length
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj)
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "")
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36)
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for(var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if(v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2])
    }while(order == 0)
  }
  return order
};
goog.string.compareElements_ = function(left, right) {
  if(left < right) {
    return-1
  }else {
    if(left > right) {
      return 1
    }
  }
  return 0
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for(var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_
  }
  return result
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return"goog_" + goog.string.uniqueStringCounter_++
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if(num == 0 && goog.string.isEmpty(str)) {
    return NaN
  }
  return num
};
goog.string.toCamelCaseCache_ = {};
goog.string.toCamelCase = function(str) {
  return goog.string.toCamelCaseCache_[str] || (goog.string.toCamelCaseCache_[str] = String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase()
  }))
};
goog.string.toSelectorCaseCache_ = {};
goog.string.toSelectorCase = function(str) {
  return goog.string.toSelectorCaseCache_[str] || (goog.string.toSelectorCaseCache_[str] = String(str).replace(/([A-Z])/g, "-$1").toLowerCase())
};
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  this.stack = (new Error).stack || "";
  if(opt_msg) {
    this.message = String(opt_msg)
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.string");
goog.asserts.ENABLE_ASSERTS = goog.DEBUG;
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if(givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs
  }else {
    if(defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs
    }
  }
  throw new goog.asserts.AssertionError("" + message, args || []);
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return condition
};
goog.asserts.fail = function(opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS) {
    throw new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2))
  }
  return value
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if(goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3))
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.NATIVE_ARRAY_PROTOTYPES = true;
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1]
};
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.indexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.indexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i < arr.length;i++) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.lastIndexOf ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex)
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if(fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex)
  }
  if(goog.isString(arr)) {
    if(!goog.isString(obj) || obj.length != 1) {
      return-1
    }
    return arr.lastIndexOf(obj, fromIndex)
  }
  for(var i = fromIndex;i >= 0;i--) {
    if(i in arr && arr[i] === obj) {
      return i
    }
  }
  return-1
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.forEach ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;--i) {
    if(i in arr2) {
      f.call(opt_obj, arr2[i], i, arr)
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.filter ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      var val = arr2[i];
      if(f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val
      }
    }
  }
  return res
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.map ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr)
    }
  }
  return res
};
goog.array.reduce = function(arr, f, val, opt_obj) {
  if(arr.reduce) {
    if(opt_obj) {
      return arr.reduce(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduce(f, val)
    }
  }
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.reduceRight = function(arr, f, val, opt_obj) {
  if(arr.reduceRight) {
    if(opt_obj) {
      return arr.reduceRight(goog.bind(f, opt_obj), val)
    }else {
      return arr.reduceRight(f, val)
    }
  }
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr)
  });
  return rval
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.some ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true
    }
  }
  return false
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && goog.array.ARRAY_PROTOTYPE_.every ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj)
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false
    }
  }
  return true
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = 0;i < l;i++) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i]
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for(var i = l - 1;i >= 0;i--) {
    if(i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i
    }
  }
  return-1
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0
};
goog.array.clear = function(arr) {
  if(!goog.isArray(arr)) {
    for(var i = arr.length - 1;i >= 0;i--) {
      delete arr[i]
    }
  }
  arr.length = 0
};
goog.array.insert = function(arr, obj) {
  if(!goog.array.contains(arr, obj)) {
    arr.push(obj)
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj)
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd)
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if(arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj)
  }else {
    goog.array.insertAt(arr, obj, i)
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if(rv = i >= 0) {
    goog.array.removeAt(arr, i)
  }
  return rv
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if(i >= 0) {
    goog.array.removeAt(arr, i);
    return true
  }
  return false
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments)
};
goog.array.clone = function(arr) {
  if(goog.isArray(arr)) {
    return goog.array.concat(arr)
  }else {
    var rv = [];
    for(var i = 0, len = arr.length;i < len;i++) {
      rv[i] = arr[i]
    }
    return rv
  }
};
goog.array.toArray = function(object) {
  if(goog.isArray(object)) {
    return goog.array.concat(object)
  }
  return goog.array.clone(object)
};
goog.array.extend = function(arr1, var_args) {
  for(var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if(goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && arr2.hasOwnProperty("callee")) {
      arr1.push.apply(arr1, arr2)
    }else {
      if(isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for(var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j]
        }
      }else {
        arr1.push(arr2)
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1))
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if(arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start)
  }else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end)
  }
};
goog.array.removeDuplicates = function(arr, opt_rv) {
  var returnArray = opt_rv || arr;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while(cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
    if(!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current
    }
  }
  returnArray.length = cursorInsert
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target)
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj)
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while(left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if(isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr)
    }else {
      compareResult = compareFn(opt_target, arr[middle])
    }
    if(compareResult > 0) {
      left = middle + 1
    }else {
      right = middle;
      found = !compareResult
    }
  }
  return found ? left : ~left
};
goog.array.sort = function(arr, opt_compareFn) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.sort.call(arr, opt_compareFn || goog.array.defaultCompare)
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for(var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]}
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index
  }
  goog.array.sort(arr, stableCompareFn);
  for(var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key])
  })
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for(var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if(compareResult > 0 || compareResult == 0 && opt_strict) {
      return false
    }
  }
  return true
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if(!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for(var i = 0;i < l;i++) {
    if(!equalsFn(arr1[i], arr2[i])) {
      return false
    }
  }
  return true
};
goog.array.compare = function(arr1, arr2, opt_equalsFn) {
  return goog.array.equals(arr1, arr2, opt_equalsFn)
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for(var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if(result != 0) {
      return result
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length)
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if(index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true
  }
  return false
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false
};
goog.array.bucket = function(array, sorter) {
  var buckets = {};
  for(var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter(value, i, array);
    if(goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value)
    }
  }
  return buckets
};
goog.array.repeat = function(value, n) {
  var array = [];
  for(var i = 0;i < n;i++) {
    array[i] = value
  }
  return array
};
goog.array.flatten = function(var_args) {
  var result = [];
  for(var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if(goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element))
    }else {
      result.push(element)
    }
  }
  return result
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if(array.length) {
    n %= array.length;
    if(n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n))
    }else {
      if(n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n))
      }
    }
  }
  return array
};
goog.array.zip = function(var_args) {
  if(!arguments.length) {
    return[]
  }
  var result = [];
  for(var i = 0;true;i++) {
    var value = [];
    for(var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if(i >= arr.length) {
        return result
      }
      value.push(arr[i])
    }
    result.push(value)
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for(var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for(var key in obj) {
    f.call(opt_obj, obj[key], key, obj)
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key]
    }
  }
  return res
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for(var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj)
  }
  return res
};
goog.object.some = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(f.call(opt_obj, obj[key], key, obj)) {
      return true
    }
  }
  return false
};
goog.object.every = function(obj, f, opt_obj) {
  for(var key in obj) {
    if(!f.call(opt_obj, obj[key], key, obj)) {
      return false
    }
  }
  return true
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for(var key in obj) {
    rv++
  }
  return rv
};
goog.object.getAnyKey = function(obj) {
  for(var key in obj) {
    return key
  }
};
goog.object.getAnyValue = function(obj) {
  for(var key in obj) {
    return obj[key]
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val)
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = obj[key]
  }
  return res
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for(var key in obj) {
    res[i++] = key
  }
  return res
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for(var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if(!goog.isDef(obj)) {
      break
    }
  }
  return obj
};
goog.object.containsKey = function(obj, key) {
  return key in obj
};
goog.object.containsValue = function(obj, val) {
  for(var key in obj) {
    if(obj[key] == val) {
      return true
    }
  }
  return false
};
goog.object.findKey = function(obj, f, opt_this) {
  for(var key in obj) {
    if(f.call(opt_this, obj[key], key, obj)) {
      return key
    }
  }
  return undefined
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key]
};
goog.object.isEmpty = function(obj) {
  for(var key in obj) {
    return false
  }
  return true
};
goog.object.clear = function(obj) {
  for(var i in obj) {
    delete obj[i]
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if(rv = key in obj) {
    delete obj[key]
  }
  return rv
};
goog.object.add = function(obj, key, val) {
  if(key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val)
};
goog.object.get = function(obj, key, opt_val) {
  if(key in obj) {
    return obj[key]
  }
  return opt_val
};
goog.object.set = function(obj, key, value) {
  obj[key] = value
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value
};
goog.object.clone = function(obj) {
  var res = {};
  for(var key in obj) {
    res[key] = obj[key]
  }
  return res
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if(type == "object" || type == "array") {
    if(obj.clone) {
      return obj.clone()
    }
    var clone = type == "array" ? [] : {};
    for(var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key])
    }
    return clone
  }
  return obj
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for(var key in obj) {
    transposed[obj[key]] = key
  }
  return transposed
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for(var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for(key in source) {
      target[key] = source[key]
    }
    for(var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if(Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key]
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0])
  }
  if(argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for(var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1]
  }
  return rv
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if(argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0])
  }
  var rv = {};
  for(var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true
  }
  return rv
};
goog.provide("goog.string.format");
goog.require("goog.string");
goog.string.format = function(formatString, var_args) {
  var args = Array.prototype.slice.call(arguments);
  var template = args.shift();
  if(typeof template == "undefined") {
    throw Error("[goog.string.format] Template required");
  }
  var formatRe = /%([0\-\ \+]*)(\d+)?(\.(\d+))?([%sfdiu])/g;
  function replacerDemuxer(match, flags, width, dotp, precision, type, offset, wholeString) {
    if(type == "%") {
      return"%"
    }
    var value = args.shift();
    if(typeof value == "undefined") {
      throw Error("[goog.string.format] Not enough arguments");
    }
    arguments[0] = value;
    return goog.string.format.demuxes_[type].apply(null, arguments)
  }
  return template.replace(formatRe, replacerDemuxer)
};
goog.string.format.demuxes_ = {};
goog.string.format.demuxes_["s"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value;
  if(isNaN(width) || width == "" || replacement.length >= width) {
    return replacement
  }
  if(flags.indexOf("-", 0) > -1) {
    replacement = replacement + goog.string.repeat(" ", width - replacement.length)
  }else {
    replacement = goog.string.repeat(" ", width - replacement.length) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["f"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  var replacement = value.toString();
  if(!(isNaN(precision) || precision == "")) {
    replacement = value.toFixed(precision)
  }
  var sign;
  if(value < 0) {
    sign = "-"
  }else {
    if(flags.indexOf("+") >= 0) {
      sign = "+"
    }else {
      if(flags.indexOf(" ") >= 0) {
        sign = " "
      }else {
        sign = ""
      }
    }
  }
  if(value >= 0) {
    replacement = sign + replacement
  }
  if(isNaN(width) || replacement.length >= width) {
    return replacement
  }
  replacement = isNaN(precision) ? Math.abs(value).toString() : Math.abs(value).toFixed(precision);
  var padCount = width - replacement.length - sign.length;
  if(flags.indexOf("-", 0) >= 0) {
    replacement = sign + replacement + goog.string.repeat(" ", padCount)
  }else {
    var paddingChar = flags.indexOf("0", 0) >= 0 ? "0" : " ";
    replacement = sign + goog.string.repeat(paddingChar, padCount) + replacement
  }
  return replacement
};
goog.string.format.demuxes_["d"] = function(value, flags, width, dotp, precision, type, offset, wholeString) {
  return goog.string.format.demuxes_["f"](parseInt(value, 10), flags, width, dotp, 0, type, offset, wholeString)
};
goog.string.format.demuxes_["i"] = goog.string.format.demuxes_["d"];
goog.string.format.demuxes_["u"] = goog.string.format.demuxes_["d"];
goog.provide("goog.userAgent.jscript");
goog.require("goog.string");
goog.userAgent.jscript.ASSUME_NO_JSCRIPT = false;
goog.userAgent.jscript.init_ = function() {
  var hasScriptEngine = "ScriptEngine" in goog.global;
  goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ = hasScriptEngine && goog.global["ScriptEngine"]() == "JScript";
  goog.userAgent.jscript.DETECTED_VERSION_ = goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_ ? goog.global["ScriptEngineMajorVersion"]() + "." + goog.global["ScriptEngineMinorVersion"]() + "." + goog.global["ScriptEngineBuildVersion"]() : "0"
};
if(!goog.userAgent.jscript.ASSUME_NO_JSCRIPT) {
  goog.userAgent.jscript.init_()
}
goog.userAgent.jscript.HAS_JSCRIPT = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? false : goog.userAgent.jscript.DETECTED_HAS_JSCRIPT_;
goog.userAgent.jscript.VERSION = goog.userAgent.jscript.ASSUME_NO_JSCRIPT ? "0" : goog.userAgent.jscript.DETECTED_VERSION_;
goog.userAgent.jscript.isVersion = function(version) {
  return goog.string.compareVersions(goog.userAgent.jscript.VERSION, version) >= 0
};
goog.provide("goog.string.StringBuffer");
goog.require("goog.userAgent.jscript");
goog.string.StringBuffer = function(opt_a1, var_args) {
  this.buffer_ = goog.userAgent.jscript.HAS_JSCRIPT ? [] : "";
  if(opt_a1 != null) {
    this.append.apply(this, arguments)
  }
};
goog.string.StringBuffer.prototype.set = function(s) {
  this.clear();
  this.append(s)
};
if(goog.userAgent.jscript.HAS_JSCRIPT) {
  goog.string.StringBuffer.prototype.bufferLength_ = 0;
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    if(opt_a2 == null) {
      this.buffer_[this.bufferLength_++] = a1
    }else {
      this.buffer_.push.apply(this.buffer_, arguments);
      this.bufferLength_ = this.buffer_.length
    }
    return this
  }
}else {
  goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
    this.buffer_ += a1;
    if(opt_a2 != null) {
      for(var i = 1;i < arguments.length;i++) {
        this.buffer_ += arguments[i]
      }
    }
    return this
  }
}
goog.string.StringBuffer.prototype.clear = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    this.buffer_.length = 0;
    this.bufferLength_ = 0
  }else {
    this.buffer_ = ""
  }
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.toString().length
};
goog.string.StringBuffer.prototype.toString = function() {
  if(goog.userAgent.jscript.HAS_JSCRIPT) {
    var str = this.buffer_.join("");
    this.clear();
    if(str) {
      this.append(str)
    }
    return str
  }else {
    return this.buffer_
  }
};
goog.provide("cljs.core");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string.format");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
cljs.core._STAR_unchecked_if_STAR_ = false;
cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
  throw new Error("No *print-fn* fn set for evaluation environment");
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false
};
cljs.core.type_satisfies_ = function type_satisfies_(p, x) {
  var x__156036 = x == null ? null : x;
  if(p[goog.typeOf(x__156036)]) {
    return true
  }else {
    if(p["_"]) {
      return true
    }else {
      if("\ufdd0'else") {
        return false
      }else {
        return null
      }
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  return Error(["No protocol method ", proto, " defined for type ", goog.typeOf(obj), ": ", obj].join(""))
};
cljs.core.aclone = function aclone(array_like) {
  return array_like.slice()
};
cljs.core.array = function array(var_args) {
  return Array.prototype.slice.call(arguments)
};
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size)
  };
  var make_array__2 = function(type, size) {
    return make_array.call(null, size)
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size)
    }
    throw"Invalid arity: " + arguments.length;
  };
  make_array.cljs$lang$arity$1 = make_array__1;
  make_array.cljs$lang$arity$2 = make_array__2;
  return make_array
}();
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i]
  };
  var aget__3 = function() {
    var G__156037__delegate = function(array, i, idxs) {
      return cljs.core.apply.call(null, aget, aget.call(null, array, i), idxs)
    };
    var G__156037 = function(array, i, var_args) {
      var idxs = null;
      if(goog.isDef(var_args)) {
        idxs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156037__delegate.call(this, array, i, idxs)
    };
    G__156037.cljs$lang$maxFixedArity = 2;
    G__156037.cljs$lang$applyTo = function(arglist__156038) {
      var array = cljs.core.first(arglist__156038);
      var i = cljs.core.first(cljs.core.next(arglist__156038));
      var idxs = cljs.core.rest(cljs.core.next(arglist__156038));
      return G__156037__delegate(array, i, idxs)
    };
    G__156037.cljs$lang$arity$variadic = G__156037__delegate;
    return G__156037
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        return aget__3.cljs$lang$arity$variadic(array, i, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$lang$arity$2 = aget__2;
  aget.cljs$lang$arity$variadic = aget__3.cljs$lang$arity$variadic;
  return aget
}();
cljs.core.aset = function aset(array, i, val) {
  return array[i] = val
};
cljs.core.alength = function alength(array) {
  return array.length
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.call(null, null, aseq)
  };
  var into_array__2 = function(type, aseq) {
    return cljs.core.reduce.call(null, function(a, x) {
      a.push(x);
      return a
    }, [], aseq)
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  into_array.cljs$lang$arity$1 = into_array__1;
  into_array.cljs$lang$arity$2 = into_array__2;
  return into_array
}();
cljs.core.IFn = {};
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if(function() {
      var and__3860__auto____156123 = this$;
      if(and__3860__auto____156123) {
        return this$.cljs$core$IFn$_invoke$arity$1
      }else {
        return and__3860__auto____156123
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$)
    }else {
      var x__2400__auto____156124 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156125 = cljs.core._invoke[goog.typeOf(x__2400__auto____156124)];
        if(or__3862__auto____156125) {
          return or__3862__auto____156125
        }else {
          var or__3862__auto____156126 = cljs.core._invoke["_"];
          if(or__3862__auto____156126) {
            return or__3862__auto____156126
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$)
    }
  };
  var _invoke__2 = function(this$, a) {
    if(function() {
      var and__3860__auto____156127 = this$;
      if(and__3860__auto____156127) {
        return this$.cljs$core$IFn$_invoke$arity$2
      }else {
        return and__3860__auto____156127
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a)
    }else {
      var x__2400__auto____156128 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156129 = cljs.core._invoke[goog.typeOf(x__2400__auto____156128)];
        if(or__3862__auto____156129) {
          return or__3862__auto____156129
        }else {
          var or__3862__auto____156130 = cljs.core._invoke["_"];
          if(or__3862__auto____156130) {
            return or__3862__auto____156130
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a)
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if(function() {
      var and__3860__auto____156131 = this$;
      if(and__3860__auto____156131) {
        return this$.cljs$core$IFn$_invoke$arity$3
      }else {
        return and__3860__auto____156131
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b)
    }else {
      var x__2400__auto____156132 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156133 = cljs.core._invoke[goog.typeOf(x__2400__auto____156132)];
        if(or__3862__auto____156133) {
          return or__3862__auto____156133
        }else {
          var or__3862__auto____156134 = cljs.core._invoke["_"];
          if(or__3862__auto____156134) {
            return or__3862__auto____156134
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b)
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if(function() {
      var and__3860__auto____156135 = this$;
      if(and__3860__auto____156135) {
        return this$.cljs$core$IFn$_invoke$arity$4
      }else {
        return and__3860__auto____156135
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c)
    }else {
      var x__2400__auto____156136 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156137 = cljs.core._invoke[goog.typeOf(x__2400__auto____156136)];
        if(or__3862__auto____156137) {
          return or__3862__auto____156137
        }else {
          var or__3862__auto____156138 = cljs.core._invoke["_"];
          if(or__3862__auto____156138) {
            return or__3862__auto____156138
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c)
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if(function() {
      var and__3860__auto____156139 = this$;
      if(and__3860__auto____156139) {
        return this$.cljs$core$IFn$_invoke$arity$5
      }else {
        return and__3860__auto____156139
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d)
    }else {
      var x__2400__auto____156140 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156141 = cljs.core._invoke[goog.typeOf(x__2400__auto____156140)];
        if(or__3862__auto____156141) {
          return or__3862__auto____156141
        }else {
          var or__3862__auto____156142 = cljs.core._invoke["_"];
          if(or__3862__auto____156142) {
            return or__3862__auto____156142
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d)
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if(function() {
      var and__3860__auto____156143 = this$;
      if(and__3860__auto____156143) {
        return this$.cljs$core$IFn$_invoke$arity$6
      }else {
        return and__3860__auto____156143
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e)
    }else {
      var x__2400__auto____156144 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156145 = cljs.core._invoke[goog.typeOf(x__2400__auto____156144)];
        if(or__3862__auto____156145) {
          return or__3862__auto____156145
        }else {
          var or__3862__auto____156146 = cljs.core._invoke["_"];
          if(or__3862__auto____156146) {
            return or__3862__auto____156146
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e)
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if(function() {
      var and__3860__auto____156147 = this$;
      if(and__3860__auto____156147) {
        return this$.cljs$core$IFn$_invoke$arity$7
      }else {
        return and__3860__auto____156147
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f)
    }else {
      var x__2400__auto____156148 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156149 = cljs.core._invoke[goog.typeOf(x__2400__auto____156148)];
        if(or__3862__auto____156149) {
          return or__3862__auto____156149
        }else {
          var or__3862__auto____156150 = cljs.core._invoke["_"];
          if(or__3862__auto____156150) {
            return or__3862__auto____156150
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f)
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if(function() {
      var and__3860__auto____156151 = this$;
      if(and__3860__auto____156151) {
        return this$.cljs$core$IFn$_invoke$arity$8
      }else {
        return and__3860__auto____156151
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g)
    }else {
      var x__2400__auto____156152 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156153 = cljs.core._invoke[goog.typeOf(x__2400__auto____156152)];
        if(or__3862__auto____156153) {
          return or__3862__auto____156153
        }else {
          var or__3862__auto____156154 = cljs.core._invoke["_"];
          if(or__3862__auto____156154) {
            return or__3862__auto____156154
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g)
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if(function() {
      var and__3860__auto____156155 = this$;
      if(and__3860__auto____156155) {
        return this$.cljs$core$IFn$_invoke$arity$9
      }else {
        return and__3860__auto____156155
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h)
    }else {
      var x__2400__auto____156156 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156157 = cljs.core._invoke[goog.typeOf(x__2400__auto____156156)];
        if(or__3862__auto____156157) {
          return or__3862__auto____156157
        }else {
          var or__3862__auto____156158 = cljs.core._invoke["_"];
          if(or__3862__auto____156158) {
            return or__3862__auto____156158
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h)
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if(function() {
      var and__3860__auto____156159 = this$;
      if(and__3860__auto____156159) {
        return this$.cljs$core$IFn$_invoke$arity$10
      }else {
        return and__3860__auto____156159
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i)
    }else {
      var x__2400__auto____156160 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156161 = cljs.core._invoke[goog.typeOf(x__2400__auto____156160)];
        if(or__3862__auto____156161) {
          return or__3862__auto____156161
        }else {
          var or__3862__auto____156162 = cljs.core._invoke["_"];
          if(or__3862__auto____156162) {
            return or__3862__auto____156162
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i)
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if(function() {
      var and__3860__auto____156163 = this$;
      if(and__3860__auto____156163) {
        return this$.cljs$core$IFn$_invoke$arity$11
      }else {
        return and__3860__auto____156163
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j)
    }else {
      var x__2400__auto____156164 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156165 = cljs.core._invoke[goog.typeOf(x__2400__auto____156164)];
        if(or__3862__auto____156165) {
          return or__3862__auto____156165
        }else {
          var or__3862__auto____156166 = cljs.core._invoke["_"];
          if(or__3862__auto____156166) {
            return or__3862__auto____156166
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j)
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if(function() {
      var and__3860__auto____156167 = this$;
      if(and__3860__auto____156167) {
        return this$.cljs$core$IFn$_invoke$arity$12
      }else {
        return and__3860__auto____156167
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k)
    }else {
      var x__2400__auto____156168 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156169 = cljs.core._invoke[goog.typeOf(x__2400__auto____156168)];
        if(or__3862__auto____156169) {
          return or__3862__auto____156169
        }else {
          var or__3862__auto____156170 = cljs.core._invoke["_"];
          if(or__3862__auto____156170) {
            return or__3862__auto____156170
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k)
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if(function() {
      var and__3860__auto____156171 = this$;
      if(and__3860__auto____156171) {
        return this$.cljs$core$IFn$_invoke$arity$13
      }else {
        return and__3860__auto____156171
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }else {
      var x__2400__auto____156172 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156173 = cljs.core._invoke[goog.typeOf(x__2400__auto____156172)];
        if(or__3862__auto____156173) {
          return or__3862__auto____156173
        }else {
          var or__3862__auto____156174 = cljs.core._invoke["_"];
          if(or__3862__auto____156174) {
            return or__3862__auto____156174
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l)
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if(function() {
      var and__3860__auto____156175 = this$;
      if(and__3860__auto____156175) {
        return this$.cljs$core$IFn$_invoke$arity$14
      }else {
        return and__3860__auto____156175
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }else {
      var x__2400__auto____156176 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156177 = cljs.core._invoke[goog.typeOf(x__2400__auto____156176)];
        if(or__3862__auto____156177) {
          return or__3862__auto____156177
        }else {
          var or__3862__auto____156178 = cljs.core._invoke["_"];
          if(or__3862__auto____156178) {
            return or__3862__auto____156178
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m)
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if(function() {
      var and__3860__auto____156179 = this$;
      if(and__3860__auto____156179) {
        return this$.cljs$core$IFn$_invoke$arity$15
      }else {
        return and__3860__auto____156179
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }else {
      var x__2400__auto____156180 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156181 = cljs.core._invoke[goog.typeOf(x__2400__auto____156180)];
        if(or__3862__auto____156181) {
          return or__3862__auto____156181
        }else {
          var or__3862__auto____156182 = cljs.core._invoke["_"];
          if(or__3862__auto____156182) {
            return or__3862__auto____156182
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n)
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if(function() {
      var and__3860__auto____156183 = this$;
      if(and__3860__auto____156183) {
        return this$.cljs$core$IFn$_invoke$arity$16
      }else {
        return and__3860__auto____156183
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }else {
      var x__2400__auto____156184 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156185 = cljs.core._invoke[goog.typeOf(x__2400__auto____156184)];
        if(or__3862__auto____156185) {
          return or__3862__auto____156185
        }else {
          var or__3862__auto____156186 = cljs.core._invoke["_"];
          if(or__3862__auto____156186) {
            return or__3862__auto____156186
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o)
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if(function() {
      var and__3860__auto____156187 = this$;
      if(and__3860__auto____156187) {
        return this$.cljs$core$IFn$_invoke$arity$17
      }else {
        return and__3860__auto____156187
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }else {
      var x__2400__auto____156188 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156189 = cljs.core._invoke[goog.typeOf(x__2400__auto____156188)];
        if(or__3862__auto____156189) {
          return or__3862__auto____156189
        }else {
          var or__3862__auto____156190 = cljs.core._invoke["_"];
          if(or__3862__auto____156190) {
            return or__3862__auto____156190
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p)
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if(function() {
      var and__3860__auto____156191 = this$;
      if(and__3860__auto____156191) {
        return this$.cljs$core$IFn$_invoke$arity$18
      }else {
        return and__3860__auto____156191
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }else {
      var x__2400__auto____156192 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156193 = cljs.core._invoke[goog.typeOf(x__2400__auto____156192)];
        if(or__3862__auto____156193) {
          return or__3862__auto____156193
        }else {
          var or__3862__auto____156194 = cljs.core._invoke["_"];
          if(or__3862__auto____156194) {
            return or__3862__auto____156194
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q)
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s) {
    if(function() {
      var and__3860__auto____156195 = this$;
      if(and__3860__auto____156195) {
        return this$.cljs$core$IFn$_invoke$arity$19
      }else {
        return and__3860__auto____156195
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }else {
      var x__2400__auto____156196 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156197 = cljs.core._invoke[goog.typeOf(x__2400__auto____156196)];
        if(or__3862__auto____156197) {
          return or__3862__auto____156197
        }else {
          var or__3862__auto____156198 = cljs.core._invoke["_"];
          if(or__3862__auto____156198) {
            return or__3862__auto____156198
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s)
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t) {
    if(function() {
      var and__3860__auto____156199 = this$;
      if(and__3860__auto____156199) {
        return this$.cljs$core$IFn$_invoke$arity$20
      }else {
        return and__3860__auto____156199
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }else {
      var x__2400__auto____156200 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156201 = cljs.core._invoke[goog.typeOf(x__2400__auto____156200)];
        if(or__3862__auto____156201) {
          return or__3862__auto____156201
        }else {
          var or__3862__auto____156202 = cljs.core._invoke["_"];
          if(or__3862__auto____156202) {
            return or__3862__auto____156202
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t)
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    if(function() {
      var and__3860__auto____156203 = this$;
      if(and__3860__auto____156203) {
        return this$.cljs$core$IFn$_invoke$arity$21
      }else {
        return and__3860__auto____156203
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }else {
      var x__2400__auto____156204 = this$ == null ? null : this$;
      return function() {
        var or__3862__auto____156205 = cljs.core._invoke[goog.typeOf(x__2400__auto____156204)];
        if(or__3862__auto____156205) {
          return or__3862__auto____156205
        }else {
          var or__3862__auto____156206 = cljs.core._invoke["_"];
          if(or__3862__auto____156206) {
            return or__3862__auto____156206
          }else {
            throw cljs.core.missing_protocol.call(null, "IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, s, t, rest)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _invoke.cljs$lang$arity$1 = _invoke__1;
  _invoke.cljs$lang$arity$2 = _invoke__2;
  _invoke.cljs$lang$arity$3 = _invoke__3;
  _invoke.cljs$lang$arity$4 = _invoke__4;
  _invoke.cljs$lang$arity$5 = _invoke__5;
  _invoke.cljs$lang$arity$6 = _invoke__6;
  _invoke.cljs$lang$arity$7 = _invoke__7;
  _invoke.cljs$lang$arity$8 = _invoke__8;
  _invoke.cljs$lang$arity$9 = _invoke__9;
  _invoke.cljs$lang$arity$10 = _invoke__10;
  _invoke.cljs$lang$arity$11 = _invoke__11;
  _invoke.cljs$lang$arity$12 = _invoke__12;
  _invoke.cljs$lang$arity$13 = _invoke__13;
  _invoke.cljs$lang$arity$14 = _invoke__14;
  _invoke.cljs$lang$arity$15 = _invoke__15;
  _invoke.cljs$lang$arity$16 = _invoke__16;
  _invoke.cljs$lang$arity$17 = _invoke__17;
  _invoke.cljs$lang$arity$18 = _invoke__18;
  _invoke.cljs$lang$arity$19 = _invoke__19;
  _invoke.cljs$lang$arity$20 = _invoke__20;
  _invoke.cljs$lang$arity$21 = _invoke__21;
  return _invoke
}();
cljs.core.ICounted = {};
cljs.core._count = function _count(coll) {
  if(function() {
    var and__3860__auto____156211 = coll;
    if(and__3860__auto____156211) {
      return coll.cljs$core$ICounted$_count$arity$1
    }else {
      return and__3860__auto____156211
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll)
  }else {
    var x__2400__auto____156212 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156213 = cljs.core._count[goog.typeOf(x__2400__auto____156212)];
      if(or__3862__auto____156213) {
        return or__3862__auto____156213
      }else {
        var or__3862__auto____156214 = cljs.core._count["_"];
        if(or__3862__auto____156214) {
          return or__3862__auto____156214
        }else {
          throw cljs.core.missing_protocol.call(null, "ICounted.-count", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IEmptyableCollection = {};
cljs.core._empty = function _empty(coll) {
  if(function() {
    var and__3860__auto____156219 = coll;
    if(and__3860__auto____156219) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1
    }else {
      return and__3860__auto____156219
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
  }else {
    var x__2400__auto____156220 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156221 = cljs.core._empty[goog.typeOf(x__2400__auto____156220)];
      if(or__3862__auto____156221) {
        return or__3862__auto____156221
      }else {
        var or__3862__auto____156222 = cljs.core._empty["_"];
        if(or__3862__auto____156222) {
          return or__3862__auto____156222
        }else {
          throw cljs.core.missing_protocol.call(null, "IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ICollection = {};
cljs.core._conj = function _conj(coll, o) {
  if(function() {
    var and__3860__auto____156227 = coll;
    if(and__3860__auto____156227) {
      return coll.cljs$core$ICollection$_conj$arity$2
    }else {
      return and__3860__auto____156227
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o)
  }else {
    var x__2400__auto____156228 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156229 = cljs.core._conj[goog.typeOf(x__2400__auto____156228)];
      if(or__3862__auto____156229) {
        return or__3862__auto____156229
      }else {
        var or__3862__auto____156230 = cljs.core._conj["_"];
        if(or__3862__auto____156230) {
          return or__3862__auto____156230
        }else {
          throw cljs.core.missing_protocol.call(null, "ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o)
  }
};
cljs.core.IIndexed = {};
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if(function() {
      var and__3860__auto____156239 = coll;
      if(and__3860__auto____156239) {
        return coll.cljs$core$IIndexed$_nth$arity$2
      }else {
        return and__3860__auto____156239
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
    }else {
      var x__2400__auto____156240 = coll == null ? null : coll;
      return function() {
        var or__3862__auto____156241 = cljs.core._nth[goog.typeOf(x__2400__auto____156240)];
        if(or__3862__auto____156241) {
          return or__3862__auto____156241
        }else {
          var or__3862__auto____156242 = cljs.core._nth["_"];
          if(or__3862__auto____156242) {
            return or__3862__auto____156242
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n)
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if(function() {
      var and__3860__auto____156243 = coll;
      if(and__3860__auto____156243) {
        return coll.cljs$core$IIndexed$_nth$arity$3
      }else {
        return and__3860__auto____156243
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found)
    }else {
      var x__2400__auto____156244 = coll == null ? null : coll;
      return function() {
        var or__3862__auto____156245 = cljs.core._nth[goog.typeOf(x__2400__auto____156244)];
        if(or__3862__auto____156245) {
          return or__3862__auto____156245
        }else {
          var or__3862__auto____156246 = cljs.core._nth["_"];
          if(or__3862__auto____156246) {
            return or__3862__auto____156246
          }else {
            throw cljs.core.missing_protocol.call(null, "IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found)
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _nth.cljs$lang$arity$2 = _nth__2;
  _nth.cljs$lang$arity$3 = _nth__3;
  return _nth
}();
cljs.core.ASeq = {};
cljs.core.ISeq = {};
cljs.core._first = function _first(coll) {
  if(function() {
    var and__3860__auto____156251 = coll;
    if(and__3860__auto____156251) {
      return coll.cljs$core$ISeq$_first$arity$1
    }else {
      return and__3860__auto____156251
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll)
  }else {
    var x__2400__auto____156252 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156253 = cljs.core._first[goog.typeOf(x__2400__auto____156252)];
      if(or__3862__auto____156253) {
        return or__3862__auto____156253
      }else {
        var or__3862__auto____156254 = cljs.core._first["_"];
        if(or__3862__auto____156254) {
          return or__3862__auto____156254
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._rest = function _rest(coll) {
  if(function() {
    var and__3860__auto____156259 = coll;
    if(and__3860__auto____156259) {
      return coll.cljs$core$ISeq$_rest$arity$1
    }else {
      return and__3860__auto____156259
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll)
  }else {
    var x__2400__auto____156260 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156261 = cljs.core._rest[goog.typeOf(x__2400__auto____156260)];
      if(or__3862__auto____156261) {
        return or__3862__auto____156261
      }else {
        var or__3862__auto____156262 = cljs.core._rest["_"];
        if(or__3862__auto____156262) {
          return or__3862__auto____156262
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeq.-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.INext = {};
cljs.core._next = function _next(coll) {
  if(function() {
    var and__3860__auto____156267 = coll;
    if(and__3860__auto____156267) {
      return coll.cljs$core$INext$_next$arity$1
    }else {
      return and__3860__auto____156267
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll)
  }else {
    var x__2400__auto____156268 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156269 = cljs.core._next[goog.typeOf(x__2400__auto____156268)];
      if(or__3862__auto____156269) {
        return or__3862__auto____156269
      }else {
        var or__3862__auto____156270 = cljs.core._next["_"];
        if(or__3862__auto____156270) {
          return or__3862__auto____156270
        }else {
          throw cljs.core.missing_protocol.call(null, "INext.-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ILookup = {};
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if(function() {
      var and__3860__auto____156279 = o;
      if(and__3860__auto____156279) {
        return o.cljs$core$ILookup$_lookup$arity$2
      }else {
        return and__3860__auto____156279
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k)
    }else {
      var x__2400__auto____156280 = o == null ? null : o;
      return function() {
        var or__3862__auto____156281 = cljs.core._lookup[goog.typeOf(x__2400__auto____156280)];
        if(or__3862__auto____156281) {
          return or__3862__auto____156281
        }else {
          var or__3862__auto____156282 = cljs.core._lookup["_"];
          if(or__3862__auto____156282) {
            return or__3862__auto____156282
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k)
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if(function() {
      var and__3860__auto____156283 = o;
      if(and__3860__auto____156283) {
        return o.cljs$core$ILookup$_lookup$arity$3
      }else {
        return and__3860__auto____156283
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found)
    }else {
      var x__2400__auto____156284 = o == null ? null : o;
      return function() {
        var or__3862__auto____156285 = cljs.core._lookup[goog.typeOf(x__2400__auto____156284)];
        if(or__3862__auto____156285) {
          return or__3862__auto____156285
        }else {
          var or__3862__auto____156286 = cljs.core._lookup["_"];
          if(or__3862__auto____156286) {
            return or__3862__auto____156286
          }else {
            throw cljs.core.missing_protocol.call(null, "ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found)
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _lookup.cljs$lang$arity$2 = _lookup__2;
  _lookup.cljs$lang$arity$3 = _lookup__3;
  return _lookup
}();
cljs.core.IAssociative = {};
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if(function() {
    var and__3860__auto____156291 = coll;
    if(and__3860__auto____156291) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2
    }else {
      return and__3860__auto____156291
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k)
  }else {
    var x__2400__auto____156292 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156293 = cljs.core._contains_key_QMARK_[goog.typeOf(x__2400__auto____156292)];
      if(or__3862__auto____156293) {
        return or__3862__auto____156293
      }else {
        var or__3862__auto____156294 = cljs.core._contains_key_QMARK_["_"];
        if(or__3862__auto____156294) {
          return or__3862__auto____156294
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if(function() {
    var and__3860__auto____156299 = coll;
    if(and__3860__auto____156299) {
      return coll.cljs$core$IAssociative$_assoc$arity$3
    }else {
      return and__3860__auto____156299
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v)
  }else {
    var x__2400__auto____156300 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156301 = cljs.core._assoc[goog.typeOf(x__2400__auto____156300)];
      if(or__3862__auto____156301) {
        return or__3862__auto____156301
      }else {
        var or__3862__auto____156302 = cljs.core._assoc["_"];
        if(or__3862__auto____156302) {
          return or__3862__auto____156302
        }else {
          throw cljs.core.missing_protocol.call(null, "IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v)
  }
};
cljs.core.IMap = {};
cljs.core._dissoc = function _dissoc(coll, k) {
  if(function() {
    var and__3860__auto____156307 = coll;
    if(and__3860__auto____156307) {
      return coll.cljs$core$IMap$_dissoc$arity$2
    }else {
      return and__3860__auto____156307
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k)
  }else {
    var x__2400__auto____156308 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156309 = cljs.core._dissoc[goog.typeOf(x__2400__auto____156308)];
      if(or__3862__auto____156309) {
        return or__3862__auto____156309
      }else {
        var or__3862__auto____156310 = cljs.core._dissoc["_"];
        if(or__3862__auto____156310) {
          return or__3862__auto____156310
        }else {
          throw cljs.core.missing_protocol.call(null, "IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k)
  }
};
cljs.core.IMapEntry = {};
cljs.core._key = function _key(coll) {
  if(function() {
    var and__3860__auto____156315 = coll;
    if(and__3860__auto____156315) {
      return coll.cljs$core$IMapEntry$_key$arity$1
    }else {
      return and__3860__auto____156315
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll)
  }else {
    var x__2400__auto____156316 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156317 = cljs.core._key[goog.typeOf(x__2400__auto____156316)];
      if(or__3862__auto____156317) {
        return or__3862__auto____156317
      }else {
        var or__3862__auto____156318 = cljs.core._key["_"];
        if(or__3862__auto____156318) {
          return or__3862__auto____156318
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-key", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._val = function _val(coll) {
  if(function() {
    var and__3860__auto____156323 = coll;
    if(and__3860__auto____156323) {
      return coll.cljs$core$IMapEntry$_val$arity$1
    }else {
      return and__3860__auto____156323
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll)
  }else {
    var x__2400__auto____156324 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156325 = cljs.core._val[goog.typeOf(x__2400__auto____156324)];
      if(or__3862__auto____156325) {
        return or__3862__auto____156325
      }else {
        var or__3862__auto____156326 = cljs.core._val["_"];
        if(or__3862__auto____156326) {
          return or__3862__auto____156326
        }else {
          throw cljs.core.missing_protocol.call(null, "IMapEntry.-val", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISet = {};
cljs.core._disjoin = function _disjoin(coll, v) {
  if(function() {
    var and__3860__auto____156331 = coll;
    if(and__3860__auto____156331) {
      return coll.cljs$core$ISet$_disjoin$arity$2
    }else {
      return and__3860__auto____156331
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v)
  }else {
    var x__2400__auto____156332 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156333 = cljs.core._disjoin[goog.typeOf(x__2400__auto____156332)];
      if(or__3862__auto____156333) {
        return or__3862__auto____156333
      }else {
        var or__3862__auto____156334 = cljs.core._disjoin["_"];
        if(or__3862__auto____156334) {
          return or__3862__auto____156334
        }else {
          throw cljs.core.missing_protocol.call(null, "ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v)
  }
};
cljs.core.IStack = {};
cljs.core._peek = function _peek(coll) {
  if(function() {
    var and__3860__auto____156339 = coll;
    if(and__3860__auto____156339) {
      return coll.cljs$core$IStack$_peek$arity$1
    }else {
      return and__3860__auto____156339
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll)
  }else {
    var x__2400__auto____156340 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156341 = cljs.core._peek[goog.typeOf(x__2400__auto____156340)];
      if(or__3862__auto____156341) {
        return or__3862__auto____156341
      }else {
        var or__3862__auto____156342 = cljs.core._peek["_"];
        if(or__3862__auto____156342) {
          return or__3862__auto____156342
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-peek", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._pop = function _pop(coll) {
  if(function() {
    var and__3860__auto____156347 = coll;
    if(and__3860__auto____156347) {
      return coll.cljs$core$IStack$_pop$arity$1
    }else {
      return and__3860__auto____156347
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll)
  }else {
    var x__2400__auto____156348 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156349 = cljs.core._pop[goog.typeOf(x__2400__auto____156348)];
      if(or__3862__auto____156349) {
        return or__3862__auto____156349
      }else {
        var or__3862__auto____156350 = cljs.core._pop["_"];
        if(or__3862__auto____156350) {
          return or__3862__auto____156350
        }else {
          throw cljs.core.missing_protocol.call(null, "IStack.-pop", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IVector = {};
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if(function() {
    var and__3860__auto____156355 = coll;
    if(and__3860__auto____156355) {
      return coll.cljs$core$IVector$_assoc_n$arity$3
    }else {
      return and__3860__auto____156355
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val)
  }else {
    var x__2400__auto____156356 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156357 = cljs.core._assoc_n[goog.typeOf(x__2400__auto____156356)];
      if(or__3862__auto____156357) {
        return or__3862__auto____156357
      }else {
        var or__3862__auto____156358 = cljs.core._assoc_n["_"];
        if(or__3862__auto____156358) {
          return or__3862__auto____156358
        }else {
          throw cljs.core.missing_protocol.call(null, "IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val)
  }
};
cljs.core.IDeref = {};
cljs.core._deref = function _deref(o) {
  if(function() {
    var and__3860__auto____156363 = o;
    if(and__3860__auto____156363) {
      return o.cljs$core$IDeref$_deref$arity$1
    }else {
      return and__3860__auto____156363
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o)
  }else {
    var x__2400__auto____156364 = o == null ? null : o;
    return function() {
      var or__3862__auto____156365 = cljs.core._deref[goog.typeOf(x__2400__auto____156364)];
      if(or__3862__auto____156365) {
        return or__3862__auto____156365
      }else {
        var or__3862__auto____156366 = cljs.core._deref["_"];
        if(or__3862__auto____156366) {
          return or__3862__auto____156366
        }else {
          throw cljs.core.missing_protocol.call(null, "IDeref.-deref", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IDerefWithTimeout = {};
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if(function() {
    var and__3860__auto____156371 = o;
    if(and__3860__auto____156371) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3
    }else {
      return and__3860__auto____156371
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val)
  }else {
    var x__2400__auto____156372 = o == null ? null : o;
    return function() {
      var or__3862__auto____156373 = cljs.core._deref_with_timeout[goog.typeOf(x__2400__auto____156372)];
      if(or__3862__auto____156373) {
        return or__3862__auto____156373
      }else {
        var or__3862__auto____156374 = cljs.core._deref_with_timeout["_"];
        if(or__3862__auto____156374) {
          return or__3862__auto____156374
        }else {
          throw cljs.core.missing_protocol.call(null, "IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val)
  }
};
cljs.core.IMeta = {};
cljs.core._meta = function _meta(o) {
  if(function() {
    var and__3860__auto____156379 = o;
    if(and__3860__auto____156379) {
      return o.cljs$core$IMeta$_meta$arity$1
    }else {
      return and__3860__auto____156379
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o)
  }else {
    var x__2400__auto____156380 = o == null ? null : o;
    return function() {
      var or__3862__auto____156381 = cljs.core._meta[goog.typeOf(x__2400__auto____156380)];
      if(or__3862__auto____156381) {
        return or__3862__auto____156381
      }else {
        var or__3862__auto____156382 = cljs.core._meta["_"];
        if(or__3862__auto____156382) {
          return or__3862__auto____156382
        }else {
          throw cljs.core.missing_protocol.call(null, "IMeta.-meta", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.IWithMeta = {};
cljs.core._with_meta = function _with_meta(o, meta) {
  if(function() {
    var and__3860__auto____156387 = o;
    if(and__3860__auto____156387) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2
    }else {
      return and__3860__auto____156387
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta)
  }else {
    var x__2400__auto____156388 = o == null ? null : o;
    return function() {
      var or__3862__auto____156389 = cljs.core._with_meta[goog.typeOf(x__2400__auto____156388)];
      if(or__3862__auto____156389) {
        return or__3862__auto____156389
      }else {
        var or__3862__auto____156390 = cljs.core._with_meta["_"];
        if(or__3862__auto____156390) {
          return or__3862__auto____156390
        }else {
          throw cljs.core.missing_protocol.call(null, "IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta)
  }
};
cljs.core.IReduce = {};
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if(function() {
      var and__3860__auto____156399 = coll;
      if(and__3860__auto____156399) {
        return coll.cljs$core$IReduce$_reduce$arity$2
      }else {
        return and__3860__auto____156399
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f)
    }else {
      var x__2400__auto____156400 = coll == null ? null : coll;
      return function() {
        var or__3862__auto____156401 = cljs.core._reduce[goog.typeOf(x__2400__auto____156400)];
        if(or__3862__auto____156401) {
          return or__3862__auto____156401
        }else {
          var or__3862__auto____156402 = cljs.core._reduce["_"];
          if(or__3862__auto____156402) {
            return or__3862__auto____156402
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f)
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if(function() {
      var and__3860__auto____156403 = coll;
      if(and__3860__auto____156403) {
        return coll.cljs$core$IReduce$_reduce$arity$3
      }else {
        return and__3860__auto____156403
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start)
    }else {
      var x__2400__auto____156404 = coll == null ? null : coll;
      return function() {
        var or__3862__auto____156405 = cljs.core._reduce[goog.typeOf(x__2400__auto____156404)];
        if(or__3862__auto____156405) {
          return or__3862__auto____156405
        }else {
          var or__3862__auto____156406 = cljs.core._reduce["_"];
          if(or__3862__auto____156406) {
            return or__3862__auto____156406
          }else {
            throw cljs.core.missing_protocol.call(null, "IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start)
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _reduce.cljs$lang$arity$2 = _reduce__2;
  _reduce.cljs$lang$arity$3 = _reduce__3;
  return _reduce
}();
cljs.core.IKVReduce = {};
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if(function() {
    var and__3860__auto____156411 = coll;
    if(and__3860__auto____156411) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3
    }else {
      return and__3860__auto____156411
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init)
  }else {
    var x__2400__auto____156412 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156413 = cljs.core._kv_reduce[goog.typeOf(x__2400__auto____156412)];
      if(or__3862__auto____156413) {
        return or__3862__auto____156413
      }else {
        var or__3862__auto____156414 = cljs.core._kv_reduce["_"];
        if(or__3862__auto____156414) {
          return or__3862__auto____156414
        }else {
          throw cljs.core.missing_protocol.call(null, "IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init)
  }
};
cljs.core.IEquiv = {};
cljs.core._equiv = function _equiv(o, other) {
  if(function() {
    var and__3860__auto____156419 = o;
    if(and__3860__auto____156419) {
      return o.cljs$core$IEquiv$_equiv$arity$2
    }else {
      return and__3860__auto____156419
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other)
  }else {
    var x__2400__auto____156420 = o == null ? null : o;
    return function() {
      var or__3862__auto____156421 = cljs.core._equiv[goog.typeOf(x__2400__auto____156420)];
      if(or__3862__auto____156421) {
        return or__3862__auto____156421
      }else {
        var or__3862__auto____156422 = cljs.core._equiv["_"];
        if(or__3862__auto____156422) {
          return or__3862__auto____156422
        }else {
          throw cljs.core.missing_protocol.call(null, "IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other)
  }
};
cljs.core.IHash = {};
cljs.core._hash = function _hash(o) {
  if(function() {
    var and__3860__auto____156427 = o;
    if(and__3860__auto____156427) {
      return o.cljs$core$IHash$_hash$arity$1
    }else {
      return and__3860__auto____156427
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o)
  }else {
    var x__2400__auto____156428 = o == null ? null : o;
    return function() {
      var or__3862__auto____156429 = cljs.core._hash[goog.typeOf(x__2400__auto____156428)];
      if(or__3862__auto____156429) {
        return or__3862__auto____156429
      }else {
        var or__3862__auto____156430 = cljs.core._hash["_"];
        if(or__3862__auto____156430) {
          return or__3862__auto____156430
        }else {
          throw cljs.core.missing_protocol.call(null, "IHash.-hash", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISeqable = {};
cljs.core._seq = function _seq(o) {
  if(function() {
    var and__3860__auto____156435 = o;
    if(and__3860__auto____156435) {
      return o.cljs$core$ISeqable$_seq$arity$1
    }else {
      return and__3860__auto____156435
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o)
  }else {
    var x__2400__auto____156436 = o == null ? null : o;
    return function() {
      var or__3862__auto____156437 = cljs.core._seq[goog.typeOf(x__2400__auto____156436)];
      if(or__3862__auto____156437) {
        return or__3862__auto____156437
      }else {
        var or__3862__auto____156438 = cljs.core._seq["_"];
        if(or__3862__auto____156438) {
          return or__3862__auto____156438
        }else {
          throw cljs.core.missing_protocol.call(null, "ISeqable.-seq", o);
        }
      }
    }().call(null, o)
  }
};
cljs.core.ISequential = {};
cljs.core.IList = {};
cljs.core.IRecord = {};
cljs.core.IReversible = {};
cljs.core._rseq = function _rseq(coll) {
  if(function() {
    var and__3860__auto____156443 = coll;
    if(and__3860__auto____156443) {
      return coll.cljs$core$IReversible$_rseq$arity$1
    }else {
      return and__3860__auto____156443
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll)
  }else {
    var x__2400__auto____156444 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156445 = cljs.core._rseq[goog.typeOf(x__2400__auto____156444)];
      if(or__3862__auto____156445) {
        return or__3862__auto____156445
      }else {
        var or__3862__auto____156446 = cljs.core._rseq["_"];
        if(or__3862__auto____156446) {
          return or__3862__auto____156446
        }else {
          throw cljs.core.missing_protocol.call(null, "IReversible.-rseq", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ISorted = {};
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if(function() {
    var and__3860__auto____156451 = coll;
    if(and__3860__auto____156451) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2
    }else {
      return and__3860__auto____156451
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_)
  }else {
    var x__2400__auto____156452 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156453 = cljs.core._sorted_seq[goog.typeOf(x__2400__auto____156452)];
      if(or__3862__auto____156453) {
        return or__3862__auto____156453
      }else {
        var or__3862__auto____156454 = cljs.core._sorted_seq["_"];
        if(or__3862__auto____156454) {
          return or__3862__auto____156454
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_)
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if(function() {
    var and__3860__auto____156459 = coll;
    if(and__3860__auto____156459) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3
    }else {
      return and__3860__auto____156459
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_)
  }else {
    var x__2400__auto____156460 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156461 = cljs.core._sorted_seq_from[goog.typeOf(x__2400__auto____156460)];
      if(or__3862__auto____156461) {
        return or__3862__auto____156461
      }else {
        var or__3862__auto____156462 = cljs.core._sorted_seq_from["_"];
        if(or__3862__auto____156462) {
          return or__3862__auto____156462
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_)
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if(function() {
    var and__3860__auto____156467 = coll;
    if(and__3860__auto____156467) {
      return coll.cljs$core$ISorted$_entry_key$arity$2
    }else {
      return and__3860__auto____156467
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry)
  }else {
    var x__2400__auto____156468 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156469 = cljs.core._entry_key[goog.typeOf(x__2400__auto____156468)];
      if(or__3862__auto____156469) {
        return or__3862__auto____156469
      }else {
        var or__3862__auto____156470 = cljs.core._entry_key["_"];
        if(or__3862__auto____156470) {
          return or__3862__auto____156470
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry)
  }
};
cljs.core._comparator = function _comparator(coll) {
  if(function() {
    var and__3860__auto____156475 = coll;
    if(and__3860__auto____156475) {
      return coll.cljs$core$ISorted$_comparator$arity$1
    }else {
      return and__3860__auto____156475
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll)
  }else {
    var x__2400__auto____156476 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156477 = cljs.core._comparator[goog.typeOf(x__2400__auto____156476)];
      if(or__3862__auto____156477) {
        return or__3862__auto____156477
      }else {
        var or__3862__auto____156478 = cljs.core._comparator["_"];
        if(or__3862__auto____156478) {
          return or__3862__auto____156478
        }else {
          throw cljs.core.missing_protocol.call(null, "ISorted.-comparator", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IPrintable = {};
cljs.core._pr_seq = function _pr_seq(o, opts) {
  if(function() {
    var and__3860__auto____156483 = o;
    if(and__3860__auto____156483) {
      return o.cljs$core$IPrintable$_pr_seq$arity$2
    }else {
      return and__3860__auto____156483
    }
  }()) {
    return o.cljs$core$IPrintable$_pr_seq$arity$2(o, opts)
  }else {
    var x__2400__auto____156484 = o == null ? null : o;
    return function() {
      var or__3862__auto____156485 = cljs.core._pr_seq[goog.typeOf(x__2400__auto____156484)];
      if(or__3862__auto____156485) {
        return or__3862__auto____156485
      }else {
        var or__3862__auto____156486 = cljs.core._pr_seq["_"];
        if(or__3862__auto____156486) {
          return or__3862__auto____156486
        }else {
          throw cljs.core.missing_protocol.call(null, "IPrintable.-pr-seq", o);
        }
      }
    }().call(null, o, opts)
  }
};
cljs.core.IPending = {};
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if(function() {
    var and__3860__auto____156491 = d;
    if(and__3860__auto____156491) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1
    }else {
      return and__3860__auto____156491
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d)
  }else {
    var x__2400__auto____156492 = d == null ? null : d;
    return function() {
      var or__3862__auto____156493 = cljs.core._realized_QMARK_[goog.typeOf(x__2400__auto____156492)];
      if(or__3862__auto____156493) {
        return or__3862__auto____156493
      }else {
        var or__3862__auto____156494 = cljs.core._realized_QMARK_["_"];
        if(or__3862__auto____156494) {
          return or__3862__auto____156494
        }else {
          throw cljs.core.missing_protocol.call(null, "IPending.-realized?", d);
        }
      }
    }().call(null, d)
  }
};
cljs.core.IWatchable = {};
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if(function() {
    var and__3860__auto____156499 = this$;
    if(and__3860__auto____156499) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3
    }else {
      return and__3860__auto____156499
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval)
  }else {
    var x__2400__auto____156500 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____156501 = cljs.core._notify_watches[goog.typeOf(x__2400__auto____156500)];
      if(or__3862__auto____156501) {
        return or__3862__auto____156501
      }else {
        var or__3862__auto____156502 = cljs.core._notify_watches["_"];
        if(or__3862__auto____156502) {
          return or__3862__auto____156502
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval)
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if(function() {
    var and__3860__auto____156507 = this$;
    if(and__3860__auto____156507) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3
    }else {
      return and__3860__auto____156507
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f)
  }else {
    var x__2400__auto____156508 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____156509 = cljs.core._add_watch[goog.typeOf(x__2400__auto____156508)];
      if(or__3862__auto____156509) {
        return or__3862__auto____156509
      }else {
        var or__3862__auto____156510 = cljs.core._add_watch["_"];
        if(or__3862__auto____156510) {
          return or__3862__auto____156510
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f)
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if(function() {
    var and__3860__auto____156515 = this$;
    if(and__3860__auto____156515) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2
    }else {
      return and__3860__auto____156515
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key)
  }else {
    var x__2400__auto____156516 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____156517 = cljs.core._remove_watch[goog.typeOf(x__2400__auto____156516)];
      if(or__3862__auto____156517) {
        return or__3862__auto____156517
      }else {
        var or__3862__auto____156518 = cljs.core._remove_watch["_"];
        if(or__3862__auto____156518) {
          return or__3862__auto____156518
        }else {
          throw cljs.core.missing_protocol.call(null, "IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key)
  }
};
cljs.core.IEditableCollection = {};
cljs.core._as_transient = function _as_transient(coll) {
  if(function() {
    var and__3860__auto____156523 = coll;
    if(and__3860__auto____156523) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1
    }else {
      return and__3860__auto____156523
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll)
  }else {
    var x__2400__auto____156524 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156525 = cljs.core._as_transient[goog.typeOf(x__2400__auto____156524)];
      if(or__3862__auto____156525) {
        return or__3862__auto____156525
      }else {
        var or__3862__auto____156526 = cljs.core._as_transient["_"];
        if(or__3862__auto____156526) {
          return or__3862__auto____156526
        }else {
          throw cljs.core.missing_protocol.call(null, "IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.ITransientCollection = {};
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if(function() {
    var and__3860__auto____156531 = tcoll;
    if(and__3860__auto____156531) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2
    }else {
      return and__3860__auto____156531
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
  }else {
    var x__2400__auto____156532 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156533 = cljs.core._conj_BANG_[goog.typeOf(x__2400__auto____156532)];
      if(or__3862__auto____156533) {
        return or__3862__auto____156533
      }else {
        var or__3862__auto____156534 = cljs.core._conj_BANG_["_"];
        if(or__3862__auto____156534) {
          return or__3862__auto____156534
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val)
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if(function() {
    var and__3860__auto____156539 = tcoll;
    if(and__3860__auto____156539) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1
    }else {
      return and__3860__auto____156539
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll)
  }else {
    var x__2400__auto____156540 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156541 = cljs.core._persistent_BANG_[goog.typeOf(x__2400__auto____156540)];
      if(or__3862__auto____156541) {
        return or__3862__auto____156541
      }else {
        var or__3862__auto____156542 = cljs.core._persistent_BANG_["_"];
        if(or__3862__auto____156542) {
          return or__3862__auto____156542
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientAssociative = {};
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if(function() {
    var and__3860__auto____156547 = tcoll;
    if(and__3860__auto____156547) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3
    }else {
      return and__3860__auto____156547
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val)
  }else {
    var x__2400__auto____156548 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156549 = cljs.core._assoc_BANG_[goog.typeOf(x__2400__auto____156548)];
      if(or__3862__auto____156549) {
        return or__3862__auto____156549
      }else {
        var or__3862__auto____156550 = cljs.core._assoc_BANG_["_"];
        if(or__3862__auto____156550) {
          return or__3862__auto____156550
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val)
  }
};
cljs.core.ITransientMap = {};
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if(function() {
    var and__3860__auto____156555 = tcoll;
    if(and__3860__auto____156555) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2
    }else {
      return and__3860__auto____156555
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key)
  }else {
    var x__2400__auto____156556 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156557 = cljs.core._dissoc_BANG_[goog.typeOf(x__2400__auto____156556)];
      if(or__3862__auto____156557) {
        return or__3862__auto____156557
      }else {
        var or__3862__auto____156558 = cljs.core._dissoc_BANG_["_"];
        if(or__3862__auto____156558) {
          return or__3862__auto____156558
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key)
  }
};
cljs.core.ITransientVector = {};
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if(function() {
    var and__3860__auto____156563 = tcoll;
    if(and__3860__auto____156563) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3
    }else {
      return and__3860__auto____156563
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val)
  }else {
    var x__2400__auto____156564 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156565 = cljs.core._assoc_n_BANG_[goog.typeOf(x__2400__auto____156564)];
      if(or__3862__auto____156565) {
        return or__3862__auto____156565
      }else {
        var or__3862__auto____156566 = cljs.core._assoc_n_BANG_["_"];
        if(or__3862__auto____156566) {
          return or__3862__auto____156566
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val)
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if(function() {
    var and__3860__auto____156571 = tcoll;
    if(and__3860__auto____156571) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1
    }else {
      return and__3860__auto____156571
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll)
  }else {
    var x__2400__auto____156572 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156573 = cljs.core._pop_BANG_[goog.typeOf(x__2400__auto____156572)];
      if(or__3862__auto____156573) {
        return or__3862__auto____156573
      }else {
        var or__3862__auto____156574 = cljs.core._pop_BANG_["_"];
        if(or__3862__auto____156574) {
          return or__3862__auto____156574
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll)
  }
};
cljs.core.ITransientSet = {};
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if(function() {
    var and__3860__auto____156579 = tcoll;
    if(and__3860__auto____156579) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2
    }else {
      return and__3860__auto____156579
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v)
  }else {
    var x__2400__auto____156580 = tcoll == null ? null : tcoll;
    return function() {
      var or__3862__auto____156581 = cljs.core._disjoin_BANG_[goog.typeOf(x__2400__auto____156580)];
      if(or__3862__auto____156581) {
        return or__3862__auto____156581
      }else {
        var or__3862__auto____156582 = cljs.core._disjoin_BANG_["_"];
        if(or__3862__auto____156582) {
          return or__3862__auto____156582
        }else {
          throw cljs.core.missing_protocol.call(null, "ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v)
  }
};
cljs.core.IComparable = {};
cljs.core._compare = function _compare(x, y) {
  if(function() {
    var and__3860__auto____156587 = x;
    if(and__3860__auto____156587) {
      return x.cljs$core$IComparable$_compare$arity$2
    }else {
      return and__3860__auto____156587
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y)
  }else {
    var x__2400__auto____156588 = x == null ? null : x;
    return function() {
      var or__3862__auto____156589 = cljs.core._compare[goog.typeOf(x__2400__auto____156588)];
      if(or__3862__auto____156589) {
        return or__3862__auto____156589
      }else {
        var or__3862__auto____156590 = cljs.core._compare["_"];
        if(or__3862__auto____156590) {
          return or__3862__auto____156590
        }else {
          throw cljs.core.missing_protocol.call(null, "IComparable.-compare", x);
        }
      }
    }().call(null, x, y)
  }
};
cljs.core.IChunk = {};
cljs.core._drop_first = function _drop_first(coll) {
  if(function() {
    var and__3860__auto____156595 = coll;
    if(and__3860__auto____156595) {
      return coll.cljs$core$IChunk$_drop_first$arity$1
    }else {
      return and__3860__auto____156595
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll)
  }else {
    var x__2400__auto____156596 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156597 = cljs.core._drop_first[goog.typeOf(x__2400__auto____156596)];
      if(or__3862__auto____156597) {
        return or__3862__auto____156597
      }else {
        var or__3862__auto____156598 = cljs.core._drop_first["_"];
        if(or__3862__auto____156598) {
          return or__3862__auto____156598
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedSeq = {};
cljs.core._chunked_first = function _chunked_first(coll) {
  if(function() {
    var and__3860__auto____156603 = coll;
    if(and__3860__auto____156603) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1
    }else {
      return and__3860__auto____156603
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll)
  }else {
    var x__2400__auto____156604 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156605 = cljs.core._chunked_first[goog.typeOf(x__2400__auto____156604)];
      if(or__3862__auto____156605) {
        return or__3862__auto____156605
      }else {
        var or__3862__auto____156606 = cljs.core._chunked_first["_"];
        if(or__3862__auto____156606) {
          return or__3862__auto____156606
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if(function() {
    var and__3860__auto____156611 = coll;
    if(and__3860__auto____156611) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1
    }else {
      return and__3860__auto____156611
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }else {
    var x__2400__auto____156612 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156613 = cljs.core._chunked_rest[goog.typeOf(x__2400__auto____156612)];
      if(or__3862__auto____156613) {
        return or__3862__auto____156613
      }else {
        var or__3862__auto____156614 = cljs.core._chunked_rest["_"];
        if(or__3862__auto____156614) {
          return or__3862__auto____156614
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.IChunkedNext = {};
cljs.core._chunked_next = function _chunked_next(coll) {
  if(function() {
    var and__3860__auto____156619 = coll;
    if(and__3860__auto____156619) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1
    }else {
      return and__3860__auto____156619
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }else {
    var x__2400__auto____156620 = coll == null ? null : coll;
    return function() {
      var or__3862__auto____156621 = cljs.core._chunked_next[goog.typeOf(x__2400__auto____156620)];
      if(or__3862__auto____156621) {
        return or__3862__auto____156621
      }else {
        var or__3862__auto____156622 = cljs.core._chunked_next["_"];
        if(or__3862__auto____156622) {
          return or__3862__auto____156622
        }else {
          throw cljs.core.missing_protocol.call(null, "IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll)
  }
};
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true
  };
  var _EQ___2 = function(x, y) {
    var or__3862__auto____156624 = x === y;
    if(or__3862__auto____156624) {
      return or__3862__auto____156624
    }else {
      return cljs.core._equiv.call(null, x, y)
    }
  };
  var _EQ___3 = function() {
    var G__156625__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__156626 = y;
            var G__156627 = cljs.core.first.call(null, more);
            var G__156628 = cljs.core.next.call(null, more);
            x = G__156626;
            y = G__156627;
            more = G__156628;
            continue
          }else {
            return _EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__156625 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156625__delegate.call(this, x, y, more)
    };
    G__156625.cljs$lang$maxFixedArity = 2;
    G__156625.cljs$lang$applyTo = function(arglist__156629) {
      var x = cljs.core.first(arglist__156629);
      var y = cljs.core.first(cljs.core.next(arglist__156629));
      var more = cljs.core.rest(cljs.core.next(arglist__156629));
      return G__156625__delegate(x, y, more)
    };
    G__156625.cljs$lang$arity$variadic = G__156625__delegate;
    return G__156625
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        return _EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$lang$arity$1 = _EQ___1;
  _EQ_.cljs$lang$arity$2 = _EQ___2;
  _EQ_.cljs$lang$arity$variadic = _EQ___3.cljs$lang$arity$variadic;
  return _EQ_
}();
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null
};
cljs.core.type = function type(x) {
  if(x == null) {
    return null
  }else {
    return x.constructor
  }
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t
};
cljs.core.IHash["null"] = true;
cljs.core._hash["null"] = function(o) {
  return 0
};
cljs.core.ILookup["null"] = true;
cljs.core._lookup["null"] = function() {
  var G__156630 = null;
  var G__156630__2 = function(o, k) {
    return null
  };
  var G__156630__3 = function(o, k, not_found) {
    return not_found
  };
  G__156630 = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__156630__2.call(this, o, k);
      case 3:
        return G__156630__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__156630
}();
cljs.core.IAssociative["null"] = true;
cljs.core._assoc["null"] = function(_, k, v) {
  return cljs.core.hash_map.call(null, k, v)
};
cljs.core.INext["null"] = true;
cljs.core._next["null"] = function(_) {
  return null
};
cljs.core.ICollection["null"] = true;
cljs.core._conj["null"] = function(_, o) {
  return cljs.core.list.call(null, o)
};
cljs.core.IReduce["null"] = true;
cljs.core._reduce["null"] = function() {
  var G__156631 = null;
  var G__156631__2 = function(_, f) {
    return f.call(null)
  };
  var G__156631__3 = function(_, f, start) {
    return start
  };
  G__156631 = function(_, f, start) {
    switch(arguments.length) {
      case 2:
        return G__156631__2.call(this, _, f);
      case 3:
        return G__156631__3.call(this, _, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__156631
}();
cljs.core.IPrintable["null"] = true;
cljs.core._pr_seq["null"] = function(o) {
  return cljs.core.list.call(null, "nil")
};
cljs.core.ISet["null"] = true;
cljs.core._disjoin["null"] = function(_, v) {
  return null
};
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0
};
cljs.core.IStack["null"] = true;
cljs.core._peek["null"] = function(_) {
  return null
};
cljs.core._pop["null"] = function(_) {
  return null
};
cljs.core.ISeq["null"] = true;
cljs.core._first["null"] = function(_) {
  return null
};
cljs.core._rest["null"] = function(_) {
  return cljs.core.list.call(null)
};
cljs.core.IEquiv["null"] = true;
cljs.core._equiv["null"] = function(_, o) {
  return o == null
};
cljs.core.IWithMeta["null"] = true;
cljs.core._with_meta["null"] = function(_, meta) {
  return null
};
cljs.core.IMeta["null"] = true;
cljs.core._meta["null"] = function(_) {
  return null
};
cljs.core.IIndexed["null"] = true;
cljs.core._nth["null"] = function() {
  var G__156632 = null;
  var G__156632__2 = function(_, n) {
    return null
  };
  var G__156632__3 = function(_, n, not_found) {
    return not_found
  };
  G__156632 = function(_, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__156632__2.call(this, _, n);
      case 3:
        return G__156632__3.call(this, _, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__156632
}();
cljs.core.IEmptyableCollection["null"] = true;
cljs.core._empty["null"] = function(_) {
  return null
};
cljs.core.IMap["null"] = true;
cljs.core._dissoc["null"] = function(_, k) {
  return null
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var and__3860__auto____156633 = cljs.core.instance_QMARK_.call(null, Date, other);
  if(and__3860__auto____156633) {
    return o.toString() === other.toString()
  }else {
    return and__3860__auto____156633
  }
};
cljs.core.IHash["number"] = true;
cljs.core._hash["number"] = function(o) {
  return o
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o
};
cljs.core.IHash["boolean"] = true;
cljs.core._hash["boolean"] = function(o) {
  if(o === true) {
    return 1
  }else {
    return 0
  }
};
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  return goog.getUid(o)
};
cljs.core.inc = function inc(x) {
  return x + 1
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt__156646 = cljs.core._count.call(null, cicoll);
    if(cnt__156646 === 0) {
      return f.call(null)
    }else {
      var val__156647 = cljs.core._nth.call(null, cicoll, 0);
      var n__156648 = 1;
      while(true) {
        if(n__156648 < cnt__156646) {
          var nval__156649 = f.call(null, val__156647, cljs.core._nth.call(null, cicoll, n__156648));
          if(cljs.core.reduced_QMARK_.call(null, nval__156649)) {
            return cljs.core.deref.call(null, nval__156649)
          }else {
            var G__156658 = nval__156649;
            var G__156659 = n__156648 + 1;
            val__156647 = G__156658;
            n__156648 = G__156659;
            continue
          }
        }else {
          return val__156647
        }
        break
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt__156650 = cljs.core._count.call(null, cicoll);
    var val__156651 = val;
    var n__156652 = 0;
    while(true) {
      if(n__156652 < cnt__156650) {
        var nval__156653 = f.call(null, val__156651, cljs.core._nth.call(null, cicoll, n__156652));
        if(cljs.core.reduced_QMARK_.call(null, nval__156653)) {
          return cljs.core.deref.call(null, nval__156653)
        }else {
          var G__156660 = nval__156653;
          var G__156661 = n__156652 + 1;
          val__156651 = G__156660;
          n__156652 = G__156661;
          continue
        }
      }else {
        return val__156651
      }
      break
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt__156654 = cljs.core._count.call(null, cicoll);
    var val__156655 = val;
    var n__156656 = idx;
    while(true) {
      if(n__156656 < cnt__156654) {
        var nval__156657 = f.call(null, val__156655, cljs.core._nth.call(null, cicoll, n__156656));
        if(cljs.core.reduced_QMARK_.call(null, nval__156657)) {
          return cljs.core.deref.call(null, nval__156657)
        }else {
          var G__156662 = nval__156657;
          var G__156663 = n__156656 + 1;
          val__156655 = G__156662;
          n__156656 = G__156663;
          continue
        }
      }else {
        return val__156655
      }
      break
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ci_reduce.cljs$lang$arity$2 = ci_reduce__2;
  ci_reduce.cljs$lang$arity$3 = ci_reduce__3;
  ci_reduce.cljs$lang$arity$4 = ci_reduce__4;
  return ci_reduce
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt__156676 = arr.length;
    if(arr.length === 0) {
      return f.call(null)
    }else {
      var val__156677 = arr[0];
      var n__156678 = 1;
      while(true) {
        if(n__156678 < cnt__156676) {
          var nval__156679 = f.call(null, val__156677, arr[n__156678]);
          if(cljs.core.reduced_QMARK_.call(null, nval__156679)) {
            return cljs.core.deref.call(null, nval__156679)
          }else {
            var G__156688 = nval__156679;
            var G__156689 = n__156678 + 1;
            val__156677 = G__156688;
            n__156678 = G__156689;
            continue
          }
        }else {
          return val__156677
        }
        break
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt__156680 = arr.length;
    var val__156681 = val;
    var n__156682 = 0;
    while(true) {
      if(n__156682 < cnt__156680) {
        var nval__156683 = f.call(null, val__156681, arr[n__156682]);
        if(cljs.core.reduced_QMARK_.call(null, nval__156683)) {
          return cljs.core.deref.call(null, nval__156683)
        }else {
          var G__156690 = nval__156683;
          var G__156691 = n__156682 + 1;
          val__156681 = G__156690;
          n__156682 = G__156691;
          continue
        }
      }else {
        return val__156681
      }
      break
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt__156684 = arr.length;
    var val__156685 = val;
    var n__156686 = idx;
    while(true) {
      if(n__156686 < cnt__156684) {
        var nval__156687 = f.call(null, val__156685, arr[n__156686]);
        if(cljs.core.reduced_QMARK_.call(null, nval__156687)) {
          return cljs.core.deref.call(null, nval__156687)
        }else {
          var G__156692 = nval__156687;
          var G__156693 = n__156686 + 1;
          val__156685 = G__156692;
          n__156686 = G__156693;
          continue
        }
      }else {
        return val__156685
      }
      break
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_reduce.cljs$lang$arity$2 = array_reduce__2;
  array_reduce.cljs$lang$arity$3 = array_reduce__3;
  array_reduce.cljs$lang$arity$4 = array_reduce__4;
  return array_reduce
}();
cljs.core.IndexedSeq = function(a, i) {
  this.a = a;
  this.i = i;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 166199546
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/IndexedSeq")
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__156694 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var this__156695 = this;
  if(this__156695.i + 1 < this__156695.a.length) {
    return new cljs.core.IndexedSeq(this__156695.a, this__156695.i + 1)
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__156696 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__156697 = this;
  var c__156698 = coll.cljs$core$ICounted$_count$arity$1(coll);
  if(c__156698 > 0) {
    return new cljs.core.RSeq(coll, c__156698 - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var this__156699 = this;
  var this__156700 = this;
  return cljs.core.pr_str.call(null, this__156700)
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__156701 = this;
  if(cljs.core.counted_QMARK_.call(null, this__156701.a)) {
    return cljs.core.ci_reduce.call(null, this__156701.a, f, this__156701.a[this__156701.i], this__156701.i + 1)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, this__156701.a[this__156701.i], 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__156702 = this;
  if(cljs.core.counted_QMARK_.call(null, this__156702.a)) {
    return cljs.core.ci_reduce.call(null, this__156702.a, f, start, this__156702.i)
  }else {
    return cljs.core.ci_reduce.call(null, coll, f, start, 0)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__156703 = this;
  return this$
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__156704 = this;
  return this__156704.a.length - this__156704.i
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var this__156705 = this;
  return this__156705.a[this__156705.i]
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var this__156706 = this;
  if(this__156706.i + 1 < this__156706.a.length) {
    return new cljs.core.IndexedSeq(this__156706.a, this__156706.i + 1)
  }else {
    return cljs.core.list.call(null)
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__156707 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__156708 = this;
  var i__156709 = n + this__156708.i;
  if(i__156709 < this__156708.a.length) {
    return this__156708.a[i__156709]
  }else {
    return null
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__156710 = this;
  var i__156711 = n + this__156710.i;
  if(i__156711 < this__156710.a.length) {
    return this__156710.a[i__156711]
  }else {
    return not_found
  }
};
cljs.core.IndexedSeq;
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.call(null, prim, 0)
  };
  var prim_seq__2 = function(prim, i) {
    if(prim.length === 0) {
      return null
    }else {
      return new cljs.core.IndexedSeq(prim, i)
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  prim_seq.cljs$lang$arity$1 = prim_seq__1;
  prim_seq.cljs$lang$arity$2 = prim_seq__2;
  return prim_seq
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.call(null, array, 0)
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.call(null, array, i)
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_seq.cljs$lang$arity$1 = array_seq__1;
  array_seq.cljs$lang$arity$2 = array_seq__2;
  return array_seq
}();
cljs.core.IReduce["array"] = true;
cljs.core._reduce["array"] = function() {
  var G__156712 = null;
  var G__156712__2 = function(array, f) {
    return cljs.core.ci_reduce.call(null, array, f)
  };
  var G__156712__3 = function(array, f, start) {
    return cljs.core.ci_reduce.call(null, array, f, start)
  };
  G__156712 = function(array, f, start) {
    switch(arguments.length) {
      case 2:
        return G__156712__2.call(this, array, f);
      case 3:
        return G__156712__3.call(this, array, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__156712
}();
cljs.core.ILookup["array"] = true;
cljs.core._lookup["array"] = function() {
  var G__156713 = null;
  var G__156713__2 = function(array, k) {
    return array[k]
  };
  var G__156713__3 = function(array, k, not_found) {
    return cljs.core._nth.call(null, array, k, not_found)
  };
  G__156713 = function(array, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__156713__2.call(this, array, k);
      case 3:
        return G__156713__3.call(this, array, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__156713
}();
cljs.core.IIndexed["array"] = true;
cljs.core._nth["array"] = function() {
  var G__156714 = null;
  var G__156714__2 = function(array, n) {
    if(n < array.length) {
      return array[n]
    }else {
      return null
    }
  };
  var G__156714__3 = function(array, n, not_found) {
    if(n < array.length) {
      return array[n]
    }else {
      return not_found
    }
  };
  G__156714 = function(array, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__156714__2.call(this, array, n);
      case 3:
        return G__156714__3.call(this, array, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__156714
}();
cljs.core.ICounted["array"] = true;
cljs.core._count["array"] = function(a) {
  return a.length
};
cljs.core.ISeqable["array"] = true;
cljs.core._seq["array"] = function(array) {
  return cljs.core.array_seq.call(null, array, 0)
};
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/RSeq")
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__156715 = this;
  return cljs.core.hash_coll.call(null, coll)
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__156716 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.RSeq.prototype.toString = function() {
  var this__156717 = this;
  var this__156718 = this;
  return cljs.core.pr_str.call(null, this__156718)
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__156719 = this;
  return coll
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__156720 = this;
  return this__156720.i + 1
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__156721 = this;
  return cljs.core._nth.call(null, this__156721.ci, this__156721.i)
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__156722 = this;
  if(this__156722.i > 0) {
    return new cljs.core.RSeq(this__156722.ci, this__156722.i - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__156723 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var this__156724 = this;
  return new cljs.core.RSeq(this__156724.ci, this__156724.i, new_meta)
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__156725 = this;
  return this__156725.meta
};
cljs.core.RSeq;
cljs.core.seq = function seq(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__156729__156730 = coll;
      if(G__156729__156730) {
        if(function() {
          var or__3862__auto____156731 = G__156729__156730.cljs$lang$protocol_mask$partition0$ & 32;
          if(or__3862__auto____156731) {
            return or__3862__auto____156731
          }else {
            return G__156729__156730.cljs$core$ASeq$
          }
        }()) {
          return true
        }else {
          if(!G__156729__156730.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__156729__156730)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ASeq, G__156729__156730)
      }
    }()) {
      return coll
    }else {
      return cljs.core._seq.call(null, coll)
    }
  }
};
cljs.core.first = function first(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__156736__156737 = coll;
      if(G__156736__156737) {
        if(function() {
          var or__3862__auto____156738 = G__156736__156737.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3862__auto____156738) {
            return or__3862__auto____156738
          }else {
            return G__156736__156737.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__156736__156737.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__156736__156737)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__156736__156737)
      }
    }()) {
      return cljs.core._first.call(null, coll)
    }else {
      var s__156739 = cljs.core.seq.call(null, coll);
      if(s__156739 == null) {
        return null
      }else {
        return cljs.core._first.call(null, s__156739)
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if(!(coll == null)) {
    if(function() {
      var G__156744__156745 = coll;
      if(G__156744__156745) {
        if(function() {
          var or__3862__auto____156746 = G__156744__156745.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3862__auto____156746) {
            return or__3862__auto____156746
          }else {
            return G__156744__156745.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__156744__156745.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__156744__156745)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__156744__156745)
      }
    }()) {
      return cljs.core._rest.call(null, coll)
    }else {
      var s__156747 = cljs.core.seq.call(null, coll);
      if(!(s__156747 == null)) {
        return cljs.core._rest.call(null, s__156747)
      }else {
        return cljs.core.List.EMPTY
      }
    }
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.next = function next(coll) {
  if(coll == null) {
    return null
  }else {
    if(function() {
      var G__156751__156752 = coll;
      if(G__156751__156752) {
        if(function() {
          var or__3862__auto____156753 = G__156751__156752.cljs$lang$protocol_mask$partition0$ & 128;
          if(or__3862__auto____156753) {
            return or__3862__auto____156753
          }else {
            return G__156751__156752.cljs$core$INext$
          }
        }()) {
          return true
        }else {
          if(!G__156751__156752.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__156751__156752)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.INext, G__156751__156752)
      }
    }()) {
      return cljs.core._next.call(null, coll)
    }else {
      return cljs.core.seq.call(null, cljs.core.rest.call(null, coll))
    }
  }
};
cljs.core.second = function second(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first.call(null, cljs.core.first.call(null, coll))
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next.call(null, cljs.core.first.call(null, coll))
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first.call(null, cljs.core.next.call(null, coll))
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next.call(null, cljs.core.next.call(null, coll))
};
cljs.core.last = function last(s) {
  while(true) {
    var sn__156755 = cljs.core.next.call(null, s);
    if(!(sn__156755 == null)) {
      var G__156756 = sn__156755;
      s = G__156756;
      continue
    }else {
      return cljs.core.first.call(null, s)
    }
    break
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o
};
cljs.core.not = function not(x) {
  if(cljs.core.truth_(x)) {
    return false
  }else {
    return true
  }
};
cljs.core.conj = function() {
  var conj = null;
  var conj__2 = function(coll, x) {
    return cljs.core._conj.call(null, coll, x)
  };
  var conj__3 = function() {
    var G__156757__delegate = function(coll, x, xs) {
      while(true) {
        if(cljs.core.truth_(xs)) {
          var G__156758 = conj.call(null, coll, x);
          var G__156759 = cljs.core.first.call(null, xs);
          var G__156760 = cljs.core.next.call(null, xs);
          coll = G__156758;
          x = G__156759;
          xs = G__156760;
          continue
        }else {
          return conj.call(null, coll, x)
        }
        break
      }
    };
    var G__156757 = function(coll, x, var_args) {
      var xs = null;
      if(goog.isDef(var_args)) {
        xs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156757__delegate.call(this, coll, x, xs)
    };
    G__156757.cljs$lang$maxFixedArity = 2;
    G__156757.cljs$lang$applyTo = function(arglist__156761) {
      var coll = cljs.core.first(arglist__156761);
      var x = cljs.core.first(cljs.core.next(arglist__156761));
      var xs = cljs.core.rest(cljs.core.next(arglist__156761));
      return G__156757__delegate(coll, x, xs)
    };
    G__156757.cljs$lang$arity$variadic = G__156757__delegate;
    return G__156757
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 2:
        return conj__2.call(this, coll, x);
      default:
        return conj__3.cljs$lang$arity$variadic(coll, x, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$lang$arity$2 = conj__2;
  conj.cljs$lang$arity$variadic = conj__3.cljs$lang$arity$variadic;
  return conj
}();
cljs.core.empty = function empty(coll) {
  return cljs.core._empty.call(null, coll)
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s__156764 = cljs.core.seq.call(null, coll);
  var acc__156765 = 0;
  while(true) {
    if(cljs.core.counted_QMARK_.call(null, s__156764)) {
      return acc__156765 + cljs.core._count.call(null, s__156764)
    }else {
      var G__156766 = cljs.core.next.call(null, s__156764);
      var G__156767 = acc__156765 + 1;
      s__156764 = G__156766;
      acc__156765 = G__156767;
      continue
    }
    break
  }
};
cljs.core.count = function count(coll) {
  if(cljs.core.counted_QMARK_.call(null, coll)) {
    return cljs.core._count.call(null, coll)
  }else {
    return cljs.core.accumulating_seq_count.call(null, coll)
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    if(coll == null) {
      throw new Error("Index out of bounds");
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          throw new Error("Index out of bounds");
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1)
          }else {
            if("\ufdd0'else") {
              throw new Error("Index out of bounds");
            }else {
              return null
            }
          }
        }
      }
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    if(coll == null) {
      return not_found
    }else {
      if(n === 0) {
        if(cljs.core.seq.call(null, coll)) {
          return cljs.core.first.call(null, coll)
        }else {
          return not_found
        }
      }else {
        if(cljs.core.indexed_QMARK_.call(null, coll)) {
          return cljs.core._nth.call(null, coll, n, not_found)
        }else {
          if(cljs.core.seq.call(null, coll)) {
            return linear_traversal_nth.call(null, cljs.core.next.call(null, coll), n - 1, not_found)
          }else {
            if("\ufdd0'else") {
              return not_found
            }else {
              return null
            }
          }
        }
      }
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  linear_traversal_nth.cljs$lang$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$lang$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if(coll == null) {
      return null
    }else {
      if(function() {
        var G__156774__156775 = coll;
        if(G__156774__156775) {
          if(function() {
            var or__3862__auto____156776 = G__156774__156775.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3862__auto____156776) {
              return or__3862__auto____156776
            }else {
              return G__156774__156775.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__156774__156775.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__156774__156775)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__156774__156775)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n))
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n))
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if(!(coll == null)) {
      if(function() {
        var G__156777__156778 = coll;
        if(G__156777__156778) {
          if(function() {
            var or__3862__auto____156779 = G__156777__156778.cljs$lang$protocol_mask$partition0$ & 16;
            if(or__3862__auto____156779) {
              return or__3862__auto____156779
            }else {
              return G__156777__156778.cljs$core$IIndexed$
            }
          }()) {
            return true
          }else {
            if(!G__156777__156778.cljs$lang$protocol_mask$partition0$) {
              return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__156777__156778)
            }else {
              return false
            }
          }
        }else {
          return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__156777__156778)
        }
      }()) {
        return cljs.core._nth.call(null, coll, Math.floor(n), not_found)
      }else {
        return cljs.core.linear_traversal_nth.call(null, coll, Math.floor(n), not_found)
      }
    }else {
      return not_found
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth.cljs$lang$arity$2 = nth__2;
  nth.cljs$lang$arity$3 = nth__3;
  return nth
}();
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    return cljs.core._lookup.call(null, o, k)
  };
  var get__3 = function(o, k, not_found) {
    return cljs.core._lookup.call(null, o, k, not_found)
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get.cljs$lang$arity$2 = get__2;
  get.cljs$lang$arity$3 = get__3;
  return get
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    return cljs.core._assoc.call(null, coll, k, v)
  };
  var assoc__4 = function() {
    var G__156782__delegate = function(coll, k, v, kvs) {
      while(true) {
        var ret__156781 = assoc.call(null, coll, k, v);
        if(cljs.core.truth_(kvs)) {
          var G__156783 = ret__156781;
          var G__156784 = cljs.core.first.call(null, kvs);
          var G__156785 = cljs.core.second.call(null, kvs);
          var G__156786 = cljs.core.nnext.call(null, kvs);
          coll = G__156783;
          k = G__156784;
          v = G__156785;
          kvs = G__156786;
          continue
        }else {
          return ret__156781
        }
        break
      }
    };
    var G__156782 = function(coll, k, v, var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__156782__delegate.call(this, coll, k, v, kvs)
    };
    G__156782.cljs$lang$maxFixedArity = 3;
    G__156782.cljs$lang$applyTo = function(arglist__156787) {
      var coll = cljs.core.first(arglist__156787);
      var k = cljs.core.first(cljs.core.next(arglist__156787));
      var v = cljs.core.first(cljs.core.next(cljs.core.next(arglist__156787)));
      var kvs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__156787)));
      return G__156782__delegate(coll, k, v, kvs)
    };
    G__156782.cljs$lang$arity$variadic = G__156782__delegate;
    return G__156782
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        return assoc__4.cljs$lang$arity$variadic(coll, k, v, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$lang$arity$3 = assoc__3;
  assoc.cljs$lang$arity$variadic = assoc__4.cljs$lang$arity$variadic;
  return assoc
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll
  };
  var dissoc__2 = function(coll, k) {
    return cljs.core._dissoc.call(null, coll, k)
  };
  var dissoc__3 = function() {
    var G__156790__delegate = function(coll, k, ks) {
      while(true) {
        var ret__156789 = dissoc.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__156791 = ret__156789;
          var G__156792 = cljs.core.first.call(null, ks);
          var G__156793 = cljs.core.next.call(null, ks);
          coll = G__156791;
          k = G__156792;
          ks = G__156793;
          continue
        }else {
          return ret__156789
        }
        break
      }
    };
    var G__156790 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156790__delegate.call(this, coll, k, ks)
    };
    G__156790.cljs$lang$maxFixedArity = 2;
    G__156790.cljs$lang$applyTo = function(arglist__156794) {
      var coll = cljs.core.first(arglist__156794);
      var k = cljs.core.first(cljs.core.next(arglist__156794));
      var ks = cljs.core.rest(cljs.core.next(arglist__156794));
      return G__156790__delegate(coll, k, ks)
    };
    G__156790.cljs$lang$arity$variadic = G__156790__delegate;
    return G__156790
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        return dissoc__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$lang$arity$1 = dissoc__1;
  dissoc.cljs$lang$arity$2 = dissoc__2;
  dissoc.cljs$lang$arity$variadic = dissoc__3.cljs$lang$arity$variadic;
  return dissoc
}();
cljs.core.with_meta = function with_meta(o, meta) {
  return cljs.core._with_meta.call(null, o, meta)
};
cljs.core.meta = function meta(o) {
  if(function() {
    var G__156798__156799 = o;
    if(G__156798__156799) {
      if(function() {
        var or__3862__auto____156800 = G__156798__156799.cljs$lang$protocol_mask$partition0$ & 131072;
        if(or__3862__auto____156800) {
          return or__3862__auto____156800
        }else {
          return G__156798__156799.cljs$core$IMeta$
        }
      }()) {
        return true
      }else {
        if(!G__156798__156799.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__156798__156799)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__156798__156799)
    }
  }()) {
    return cljs.core._meta.call(null, o)
  }else {
    return null
  }
};
cljs.core.peek = function peek(coll) {
  return cljs.core._peek.call(null, coll)
};
cljs.core.pop = function pop(coll) {
  return cljs.core._pop.call(null, coll)
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll
  };
  var disj__2 = function(coll, k) {
    return cljs.core._disjoin.call(null, coll, k)
  };
  var disj__3 = function() {
    var G__156803__delegate = function(coll, k, ks) {
      while(true) {
        var ret__156802 = disj.call(null, coll, k);
        if(cljs.core.truth_(ks)) {
          var G__156804 = ret__156802;
          var G__156805 = cljs.core.first.call(null, ks);
          var G__156806 = cljs.core.next.call(null, ks);
          coll = G__156804;
          k = G__156805;
          ks = G__156806;
          continue
        }else {
          return ret__156802
        }
        break
      }
    };
    var G__156803 = function(coll, k, var_args) {
      var ks = null;
      if(goog.isDef(var_args)) {
        ks = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156803__delegate.call(this, coll, k, ks)
    };
    G__156803.cljs$lang$maxFixedArity = 2;
    G__156803.cljs$lang$applyTo = function(arglist__156807) {
      var coll = cljs.core.first(arglist__156807);
      var k = cljs.core.first(cljs.core.next(arglist__156807));
      var ks = cljs.core.rest(cljs.core.next(arglist__156807));
      return G__156803__delegate(coll, k, ks)
    };
    G__156803.cljs$lang$arity$variadic = G__156803__delegate;
    return G__156803
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        return disj__3.cljs$lang$arity$variadic(coll, k, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$lang$arity$1 = disj__1;
  disj.cljs$lang$arity$2 = disj__2;
  disj.cljs$lang$arity$variadic = disj__3.cljs$lang$arity$variadic;
  return disj
}();
cljs.core.string_hash_cache = {};
cljs.core.string_hash_cache_count = 0;
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h__156809 = goog.string.hashCode(k);
  cljs.core.string_hash_cache[k] = h__156809;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h__156809
};
cljs.core.check_string_hash_cache = function check_string_hash_cache(k) {
  if(cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = {};
    cljs.core.string_hash_cache_count = 0
  }else {
  }
  var h__156811 = cljs.core.string_hash_cache[k];
  if(!(h__156811 == null)) {
    return h__156811
  }else {
    return cljs.core.add_to_string_hash_cache.call(null, k)
  }
};
cljs.core.hash = function() {
  var hash = null;
  var hash__1 = function(o) {
    return hash.call(null, o, true)
  };
  var hash__2 = function(o, check_cache) {
    if(function() {
      var and__3860__auto____156813 = goog.isString(o);
      if(and__3860__auto____156813) {
        return check_cache
      }else {
        return and__3860__auto____156813
      }
    }()) {
      return cljs.core.check_string_hash_cache.call(null, o)
    }else {
      return cljs.core._hash.call(null, o)
    }
  };
  hash = function(o, check_cache) {
    switch(arguments.length) {
      case 1:
        return hash__1.call(this, o);
      case 2:
        return hash__2.call(this, o, check_cache)
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash.cljs$lang$arity$1 = hash__1;
  hash.cljs$lang$arity$2 = hash__2;
  return hash
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return cljs.core.not.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__156817__156818 = x;
    if(G__156817__156818) {
      if(function() {
        var or__3862__auto____156819 = G__156817__156818.cljs$lang$protocol_mask$partition0$ & 8;
        if(or__3862__auto____156819) {
          return or__3862__auto____156819
        }else {
          return G__156817__156818.cljs$core$ICollection$
        }
      }()) {
        return true
      }else {
        if(!G__156817__156818.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__156817__156818)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ICollection, G__156817__156818)
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__156823__156824 = x;
    if(G__156823__156824) {
      if(function() {
        var or__3862__auto____156825 = G__156823__156824.cljs$lang$protocol_mask$partition0$ & 4096;
        if(or__3862__auto____156825) {
          return or__3862__auto____156825
        }else {
          return G__156823__156824.cljs$core$ISet$
        }
      }()) {
        return true
      }else {
        if(!G__156823__156824.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__156823__156824)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISet, G__156823__156824)
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__156829__156830 = x;
  if(G__156829__156830) {
    if(function() {
      var or__3862__auto____156831 = G__156829__156830.cljs$lang$protocol_mask$partition0$ & 512;
      if(or__3862__auto____156831) {
        return or__3862__auto____156831
      }else {
        return G__156829__156830.cljs$core$IAssociative$
      }
    }()) {
      return true
    }else {
      if(!G__156829__156830.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__156829__156830)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IAssociative, G__156829__156830)
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__156835__156836 = x;
  if(G__156835__156836) {
    if(function() {
      var or__3862__auto____156837 = G__156835__156836.cljs$lang$protocol_mask$partition0$ & 16777216;
      if(or__3862__auto____156837) {
        return or__3862__auto____156837
      }else {
        return G__156835__156836.cljs$core$ISequential$
      }
    }()) {
      return true
    }else {
      if(!G__156835__156836.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__156835__156836)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISequential, G__156835__156836)
  }
};
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__156841__156842 = x;
  if(G__156841__156842) {
    if(function() {
      var or__3862__auto____156843 = G__156841__156842.cljs$lang$protocol_mask$partition0$ & 2;
      if(or__3862__auto____156843) {
        return or__3862__auto____156843
      }else {
        return G__156841__156842.cljs$core$ICounted$
      }
    }()) {
      return true
    }else {
      if(!G__156841__156842.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__156841__156842)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ICounted, G__156841__156842)
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__156847__156848 = x;
  if(G__156847__156848) {
    if(function() {
      var or__3862__auto____156849 = G__156847__156848.cljs$lang$protocol_mask$partition0$ & 16;
      if(or__3862__auto____156849) {
        return or__3862__auto____156849
      }else {
        return G__156847__156848.cljs$core$IIndexed$
      }
    }()) {
      return true
    }else {
      if(!G__156847__156848.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__156847__156848)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IIndexed, G__156847__156848)
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__156853__156854 = x;
  if(G__156853__156854) {
    if(function() {
      var or__3862__auto____156855 = G__156853__156854.cljs$lang$protocol_mask$partition0$ & 524288;
      if(or__3862__auto____156855) {
        return or__3862__auto____156855
      }else {
        return G__156853__156854.cljs$core$IReduce$
      }
    }()) {
      return true
    }else {
      if(!G__156853__156854.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__156853__156854)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__156853__156854)
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if(x == null) {
    return false
  }else {
    var G__156859__156860 = x;
    if(G__156859__156860) {
      if(function() {
        var or__3862__auto____156861 = G__156859__156860.cljs$lang$protocol_mask$partition0$ & 1024;
        if(or__3862__auto____156861) {
          return or__3862__auto____156861
        }else {
          return G__156859__156860.cljs$core$IMap$
        }
      }()) {
        return true
      }else {
        if(!G__156859__156860.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__156859__156860)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IMap, G__156859__156860)
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__156865__156866 = x;
  if(G__156865__156866) {
    if(function() {
      var or__3862__auto____156867 = G__156865__156866.cljs$lang$protocol_mask$partition0$ & 16384;
      if(or__3862__auto____156867) {
        return or__3862__auto____156867
      }else {
        return G__156865__156866.cljs$core$IVector$
      }
    }()) {
      return true
    }else {
      if(!G__156865__156866.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__156865__156866)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IVector, G__156865__156866)
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__156871__156872 = x;
  if(G__156871__156872) {
    if(cljs.core.truth_(function() {
      var or__3862__auto____156873 = null;
      if(cljs.core.truth_(or__3862__auto____156873)) {
        return or__3862__auto____156873
      }else {
        return G__156871__156872.cljs$core$IChunkedSeq$
      }
    }())) {
      return true
    }else {
      if(!G__156871__156872.cljs$lang$protocol_mask$partition$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__156871__156872)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedSeq, G__156871__156872)
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    return{}
  };
  var js_obj__1 = function() {
    var G__156874__delegate = function(keyvals) {
      return cljs.core.apply.call(null, goog.object.create, keyvals)
    };
    var G__156874 = function(var_args) {
      var keyvals = null;
      if(goog.isDef(var_args)) {
        keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__156874__delegate.call(this, keyvals)
    };
    G__156874.cljs$lang$maxFixedArity = 0;
    G__156874.cljs$lang$applyTo = function(arglist__156875) {
      var keyvals = cljs.core.seq(arglist__156875);
      return G__156874__delegate(keyvals)
    };
    G__156874.cljs$lang$arity$variadic = G__156874__delegate;
    return G__156874
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        return js_obj__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$lang$arity$0 = js_obj__0;
  js_obj.cljs$lang$arity$variadic = js_obj__1.cljs$lang$arity$variadic;
  return js_obj
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys__156877 = [];
  goog.object.forEach(obj, function(val, key, obj) {
    return keys__156877.push(key)
  });
  return keys__156877
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key]
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__156881 = i;
  var j__156882 = j;
  var len__156883 = len;
  while(true) {
    if(len__156883 === 0) {
      return to
    }else {
      to[j__156882] = from[i__156881];
      var G__156884 = i__156881 + 1;
      var G__156885 = j__156882 + 1;
      var G__156886 = len__156883 - 1;
      i__156881 = G__156884;
      j__156882 = G__156885;
      len__156883 = G__156886;
      continue
    }
    break
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__156890 = i + (len - 1);
  var j__156891 = j + (len - 1);
  var len__156892 = len;
  while(true) {
    if(len__156892 === 0) {
      return to
    }else {
      to[j__156891] = from[i__156890];
      var G__156893 = i__156890 - 1;
      var G__156894 = j__156891 - 1;
      var G__156895 = len__156892 - 1;
      i__156890 = G__156893;
      j__156891 = G__156894;
      len__156892 = G__156895;
      continue
    }
    break
  }
};
cljs.core.lookup_sentinel = {};
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if(s == null) {
    return false
  }else {
    var G__156899__156900 = s;
    if(G__156899__156900) {
      if(function() {
        var or__3862__auto____156901 = G__156899__156900.cljs$lang$protocol_mask$partition0$ & 64;
        if(or__3862__auto____156901) {
          return or__3862__auto____156901
        }else {
          return G__156899__156900.cljs$core$ISeq$
        }
      }()) {
        return true
      }else {
        if(!G__156899__156900.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__156899__156900)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__156899__156900)
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__156905__156906 = s;
  if(G__156905__156906) {
    if(function() {
      var or__3862__auto____156907 = G__156905__156906.cljs$lang$protocol_mask$partition0$ & 8388608;
      if(or__3862__auto____156907) {
        return or__3862__auto____156907
      }else {
        return G__156905__156906.cljs$core$ISeqable$
      }
    }()) {
      return true
    }else {
      if(!G__156905__156906.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__156905__156906)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.ISeqable, G__156905__156906)
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if(cljs.core.truth_(x)) {
    return true
  }else {
    return false
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var and__3860__auto____156910 = goog.isString(x);
  if(and__3860__auto____156910) {
    return!function() {
      var or__3862__auto____156911 = x.charAt(0) === "\ufdd0";
      if(or__3862__auto____156911) {
        return or__3862__auto____156911
      }else {
        return x.charAt(0) === "\ufdd1"
      }
    }()
  }else {
    return and__3860__auto____156910
  }
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  var and__3860__auto____156913 = goog.isString(x);
  if(and__3860__auto____156913) {
    return x.charAt(0) === "\ufdd0"
  }else {
    return and__3860__auto____156913
  }
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  var and__3860__auto____156915 = goog.isString(x);
  if(and__3860__auto____156915) {
    return x.charAt(0) === "\ufdd1"
  }else {
    return and__3860__auto____156915
  }
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return goog.isNumber(n)
};
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  return goog.isFunction(f)
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3862__auto____156920 = cljs.core.fn_QMARK_.call(null, f);
  if(or__3862__auto____156920) {
    return or__3862__auto____156920
  }else {
    var G__156921__156922 = f;
    if(G__156921__156922) {
      if(function() {
        var or__3862__auto____156923 = G__156921__156922.cljs$lang$protocol_mask$partition0$ & 1;
        if(or__3862__auto____156923) {
          return or__3862__auto____156923
        }else {
          return G__156921__156922.cljs$core$IFn$
        }
      }()) {
        return true
      }else {
        if(!G__156921__156922.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__156921__156922)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IFn, G__156921__156922)
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  var and__3860__auto____156925 = cljs.core.number_QMARK_.call(null, n);
  if(and__3860__auto____156925) {
    return n == n.toFixed()
  }else {
    return and__3860__auto____156925
  }
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if(cljs.core._lookup.call(null, coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false
  }else {
    return true
  }
};
cljs.core.find = function find(coll, k) {
  if(cljs.core.truth_(function() {
    var and__3860__auto____156928 = coll;
    if(cljs.core.truth_(and__3860__auto____156928)) {
      var and__3860__auto____156929 = cljs.core.associative_QMARK_.call(null, coll);
      if(and__3860__auto____156929) {
        return cljs.core.contains_QMARK_.call(null, coll, k)
      }else {
        return and__3860__auto____156929
      }
    }else {
      return and__3860__auto____156928
    }
  }())) {
    return cljs.core.PersistentVector.fromArray([k, cljs.core._lookup.call(null, coll, k)], true)
  }else {
    return null
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var distinct_QMARK___3 = function() {
    var G__156938__delegate = function(x, y, more) {
      if(!cljs.core._EQ_.call(null, x, y)) {
        var s__156934 = cljs.core.PersistentHashSet.fromArray([y, x]);
        var xs__156935 = more;
        while(true) {
          var x__156936 = cljs.core.first.call(null, xs__156935);
          var etc__156937 = cljs.core.next.call(null, xs__156935);
          if(cljs.core.truth_(xs__156935)) {
            if(cljs.core.contains_QMARK_.call(null, s__156934, x__156936)) {
              return false
            }else {
              var G__156939 = cljs.core.conj.call(null, s__156934, x__156936);
              var G__156940 = etc__156937;
              s__156934 = G__156939;
              xs__156935 = G__156940;
              continue
            }
          }else {
            return true
          }
          break
        }
      }else {
        return false
      }
    };
    var G__156938 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156938__delegate.call(this, x, y, more)
    };
    G__156938.cljs$lang$maxFixedArity = 2;
    G__156938.cljs$lang$applyTo = function(arglist__156941) {
      var x = cljs.core.first(arglist__156941);
      var y = cljs.core.first(cljs.core.next(arglist__156941));
      var more = cljs.core.rest(cljs.core.next(arglist__156941));
      return G__156938__delegate(x, y, more)
    };
    G__156938.cljs$lang$arity$variadic = G__156938__delegate;
    return G__156938
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        return distinct_QMARK___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$lang$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$lang$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$lang$arity$variadic = distinct_QMARK___3.cljs$lang$arity$variadic;
  return distinct_QMARK_
}();
cljs.core.compare = function compare(x, y) {
  if(x === y) {
    return 0
  }else {
    if(x == null) {
      return-1
    }else {
      if(y == null) {
        return 1
      }else {
        if(cljs.core.type.call(null, x) === cljs.core.type.call(null, y)) {
          if(function() {
            var G__156945__156946 = x;
            if(G__156945__156946) {
              if(cljs.core.truth_(function() {
                var or__3862__auto____156947 = null;
                if(cljs.core.truth_(or__3862__auto____156947)) {
                  return or__3862__auto____156947
                }else {
                  return G__156945__156946.cljs$core$IComparable$
                }
              }())) {
                return true
              }else {
                if(!G__156945__156946.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__156945__156946)
                }else {
                  return false
                }
              }
            }else {
              return cljs.core.type_satisfies_.call(null, cljs.core.IComparable, G__156945__156946)
            }
          }()) {
            return cljs.core._compare.call(null, x, y)
          }else {
            return goog.array.defaultCompare(x, y)
          }
        }else {
          if("\ufdd0'else") {
            throw new Error("compare on non-nil objects of different types");
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl__156952 = cljs.core.count.call(null, xs);
    var yl__156953 = cljs.core.count.call(null, ys);
    if(xl__156952 < yl__156953) {
      return-1
    }else {
      if(xl__156952 > yl__156953) {
        return 1
      }else {
        if("\ufdd0'else") {
          return compare_indexed.call(null, xs, ys, xl__156952, 0)
        }else {
          return null
        }
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while(true) {
      var d__156954 = cljs.core.compare.call(null, cljs.core.nth.call(null, xs, n), cljs.core.nth.call(null, ys, n));
      if(function() {
        var and__3860__auto____156955 = d__156954 === 0;
        if(and__3860__auto____156955) {
          return n + 1 < len
        }else {
          return and__3860__auto____156955
        }
      }()) {
        var G__156956 = xs;
        var G__156957 = ys;
        var G__156958 = len;
        var G__156959 = n + 1;
        xs = G__156956;
        ys = G__156957;
        len = G__156958;
        n = G__156959;
        continue
      }else {
        return d__156954
      }
      break
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  compare_indexed.cljs$lang$arity$2 = compare_indexed__2;
  compare_indexed.cljs$lang$arity$4 = compare_indexed__4;
  return compare_indexed
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if(cljs.core._EQ_.call(null, f, cljs.core.compare)) {
    return cljs.core.compare
  }else {
    return function(x, y) {
      var r__156961 = f.call(null, x, y);
      if(cljs.core.number_QMARK_.call(null, r__156961)) {
        return r__156961
      }else {
        if(cljs.core.truth_(r__156961)) {
          return-1
        }else {
          if(cljs.core.truth_(f.call(null, y, x))) {
            return 1
          }else {
            return 0
          }
        }
      }
    }
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.call(null, cljs.core.compare, coll)
  };
  var sort__2 = function(comp, coll) {
    if(cljs.core.seq.call(null, coll)) {
      var a__156963 = cljs.core.to_array.call(null, coll);
      goog.array.stableSort(a__156963, cljs.core.fn__GT_comparator.call(null, comp));
      return cljs.core.seq.call(null, a__156963)
    }else {
      return cljs.core.List.EMPTY
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort.cljs$lang$arity$1 = sort__1;
  sort.cljs$lang$arity$2 = sort__2;
  return sort
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.call(null, keyfn, cljs.core.compare, coll)
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.call(null, function(x, y) {
      return cljs.core.fn__GT_comparator.call(null, comp).call(null, keyfn.call(null, x), keyfn.call(null, y))
    }, coll)
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  sort_by.cljs$lang$arity$2 = sort_by__2;
  sort_by.cljs$lang$arity$3 = sort_by__3;
  return sort_by
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4009__auto____156969 = cljs.core.seq.call(null, coll);
    if(temp__4009__auto____156969) {
      var s__156970 = temp__4009__auto____156969;
      return cljs.core.reduce.call(null, f, cljs.core.first.call(null, s__156970), cljs.core.next.call(null, s__156970))
    }else {
      return f.call(null)
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__156971 = val;
    var coll__156972 = cljs.core.seq.call(null, coll);
    while(true) {
      if(coll__156972) {
        var nval__156973 = f.call(null, val__156971, cljs.core.first.call(null, coll__156972));
        if(cljs.core.reduced_QMARK_.call(null, nval__156973)) {
          return cljs.core.deref.call(null, nval__156973)
        }else {
          var G__156974 = nval__156973;
          var G__156975 = cljs.core.next.call(null, coll__156972);
          val__156971 = G__156974;
          coll__156972 = G__156975;
          continue
        }
      }else {
        return val__156971
      }
      break
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  seq_reduce.cljs$lang$arity$2 = seq_reduce__2;
  seq_reduce.cljs$lang$arity$3 = seq_reduce__3;
  return seq_reduce
}();
cljs.core.shuffle = function shuffle(coll) {
  var a__156977 = cljs.core.to_array.call(null, coll);
  goog.array.shuffle(a__156977);
  return cljs.core.vec.call(null, a__156977)
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if(function() {
      var G__156984__156985 = coll;
      if(G__156984__156985) {
        if(function() {
          var or__3862__auto____156986 = G__156984__156985.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3862__auto____156986) {
            return or__3862__auto____156986
          }else {
            return G__156984__156985.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__156984__156985.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__156984__156985)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__156984__156985)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f)
    }else {
      return cljs.core.seq_reduce.call(null, f, coll)
    }
  };
  var reduce__3 = function(f, val, coll) {
    if(function() {
      var G__156987__156988 = coll;
      if(G__156987__156988) {
        if(function() {
          var or__3862__auto____156989 = G__156987__156988.cljs$lang$protocol_mask$partition0$ & 524288;
          if(or__3862__auto____156989) {
            return or__3862__auto____156989
          }else {
            return G__156987__156988.cljs$core$IReduce$
          }
        }()) {
          return true
        }else {
          if(!G__156987__156988.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__156987__156988)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReduce, G__156987__156988)
      }
    }()) {
      return cljs.core._reduce.call(null, coll, f, val)
    }else {
      return cljs.core.seq_reduce.call(null, f, val, coll)
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reduce.cljs$lang$arity$2 = reduce__2;
  reduce.cljs$lang$arity$3 = reduce__3;
  return reduce
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  return cljs.core._kv_reduce.call(null, coll, f, init)
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Reduced")
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var this__156990 = this;
  return this__156990.val
};
cljs.core.Reduced;
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Reduced, r)
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x)
};
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0
  };
  var _PLUS___1 = function(x) {
    return x
  };
  var _PLUS___2 = function(x, y) {
    return x + y
  };
  var _PLUS___3 = function() {
    var G__156991__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _PLUS_, x + y, more)
    };
    var G__156991 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156991__delegate.call(this, x, y, more)
    };
    G__156991.cljs$lang$maxFixedArity = 2;
    G__156991.cljs$lang$applyTo = function(arglist__156992) {
      var x = cljs.core.first(arglist__156992);
      var y = cljs.core.first(cljs.core.next(arglist__156992));
      var more = cljs.core.rest(cljs.core.next(arglist__156992));
      return G__156991__delegate(x, y, more)
    };
    G__156991.cljs$lang$arity$variadic = G__156991__delegate;
    return G__156991
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        return _PLUS___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$lang$arity$0 = _PLUS___0;
  _PLUS_.cljs$lang$arity$1 = _PLUS___1;
  _PLUS_.cljs$lang$arity$2 = _PLUS___2;
  _PLUS_.cljs$lang$arity$variadic = _PLUS___3.cljs$lang$arity$variadic;
  return _PLUS_
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x
  };
  var ___2 = function(x, y) {
    return x - y
  };
  var ___3 = function() {
    var G__156993__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _, x - y, more)
    };
    var G__156993 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156993__delegate.call(this, x, y, more)
    };
    G__156993.cljs$lang$maxFixedArity = 2;
    G__156993.cljs$lang$applyTo = function(arglist__156994) {
      var x = cljs.core.first(arglist__156994);
      var y = cljs.core.first(cljs.core.next(arglist__156994));
      var more = cljs.core.rest(cljs.core.next(arglist__156994));
      return G__156993__delegate(x, y, more)
    };
    G__156993.cljs$lang$arity$variadic = G__156993__delegate;
    return G__156993
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        return ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$lang$arity$1 = ___1;
  _.cljs$lang$arity$2 = ___2;
  _.cljs$lang$arity$variadic = ___3.cljs$lang$arity$variadic;
  return _
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1
  };
  var _STAR___1 = function(x) {
    return x
  };
  var _STAR___2 = function(x, y) {
    return x * y
  };
  var _STAR___3 = function() {
    var G__156995__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _STAR_, x * y, more)
    };
    var G__156995 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156995__delegate.call(this, x, y, more)
    };
    G__156995.cljs$lang$maxFixedArity = 2;
    G__156995.cljs$lang$applyTo = function(arglist__156996) {
      var x = cljs.core.first(arglist__156996);
      var y = cljs.core.first(cljs.core.next(arglist__156996));
      var more = cljs.core.rest(cljs.core.next(arglist__156996));
      return G__156995__delegate(x, y, more)
    };
    G__156995.cljs$lang$arity$variadic = G__156995__delegate;
    return G__156995
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        return _STAR___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$lang$arity$0 = _STAR___0;
  _STAR_.cljs$lang$arity$1 = _STAR___1;
  _STAR_.cljs$lang$arity$2 = _STAR___2;
  _STAR_.cljs$lang$arity$variadic = _STAR___3.cljs$lang$arity$variadic;
  return _STAR_
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.call(null, 1, x)
  };
  var _SLASH___2 = function(x, y) {
    return x / y
  };
  var _SLASH___3 = function() {
    var G__156997__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, _SLASH_, _SLASH_.call(null, x, y), more)
    };
    var G__156997 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156997__delegate.call(this, x, y, more)
    };
    G__156997.cljs$lang$maxFixedArity = 2;
    G__156997.cljs$lang$applyTo = function(arglist__156998) {
      var x = cljs.core.first(arglist__156998);
      var y = cljs.core.first(cljs.core.next(arglist__156998));
      var more = cljs.core.rest(cljs.core.next(arglist__156998));
      return G__156997__delegate(x, y, more)
    };
    G__156997.cljs$lang$arity$variadic = G__156997__delegate;
    return G__156997
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        return _SLASH___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$lang$arity$1 = _SLASH___1;
  _SLASH_.cljs$lang$arity$2 = _SLASH___2;
  _SLASH_.cljs$lang$arity$variadic = _SLASH___3.cljs$lang$arity$variadic;
  return _SLASH_
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true
  };
  var _LT___2 = function(x, y) {
    return x < y
  };
  var _LT___3 = function() {
    var G__156999__delegate = function(x, y, more) {
      while(true) {
        if(x < y) {
          if(cljs.core.next.call(null, more)) {
            var G__157000 = y;
            var G__157001 = cljs.core.first.call(null, more);
            var G__157002 = cljs.core.next.call(null, more);
            x = G__157000;
            y = G__157001;
            more = G__157002;
            continue
          }else {
            return y < cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__156999 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__156999__delegate.call(this, x, y, more)
    };
    G__156999.cljs$lang$maxFixedArity = 2;
    G__156999.cljs$lang$applyTo = function(arglist__157003) {
      var x = cljs.core.first(arglist__157003);
      var y = cljs.core.first(cljs.core.next(arglist__157003));
      var more = cljs.core.rest(cljs.core.next(arglist__157003));
      return G__156999__delegate(x, y, more)
    };
    G__156999.cljs$lang$arity$variadic = G__156999__delegate;
    return G__156999
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        return _LT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$lang$arity$1 = _LT___1;
  _LT_.cljs$lang$arity$2 = _LT___2;
  _LT_.cljs$lang$arity$variadic = _LT___3.cljs$lang$arity$variadic;
  return _LT_
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y
  };
  var _LT__EQ___3 = function() {
    var G__157004__delegate = function(x, y, more) {
      while(true) {
        if(x <= y) {
          if(cljs.core.next.call(null, more)) {
            var G__157005 = y;
            var G__157006 = cljs.core.first.call(null, more);
            var G__157007 = cljs.core.next.call(null, more);
            x = G__157005;
            y = G__157006;
            more = G__157007;
            continue
          }else {
            return y <= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__157004 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157004__delegate.call(this, x, y, more)
    };
    G__157004.cljs$lang$maxFixedArity = 2;
    G__157004.cljs$lang$applyTo = function(arglist__157008) {
      var x = cljs.core.first(arglist__157008);
      var y = cljs.core.first(cljs.core.next(arglist__157008));
      var more = cljs.core.rest(cljs.core.next(arglist__157008));
      return G__157004__delegate(x, y, more)
    };
    G__157004.cljs$lang$arity$variadic = G__157004__delegate;
    return G__157004
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        return _LT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$lang$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$lang$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$lang$arity$variadic = _LT__EQ___3.cljs$lang$arity$variadic;
  return _LT__EQ_
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true
  };
  var _GT___2 = function(x, y) {
    return x > y
  };
  var _GT___3 = function() {
    var G__157009__delegate = function(x, y, more) {
      while(true) {
        if(x > y) {
          if(cljs.core.next.call(null, more)) {
            var G__157010 = y;
            var G__157011 = cljs.core.first.call(null, more);
            var G__157012 = cljs.core.next.call(null, more);
            x = G__157010;
            y = G__157011;
            more = G__157012;
            continue
          }else {
            return y > cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__157009 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157009__delegate.call(this, x, y, more)
    };
    G__157009.cljs$lang$maxFixedArity = 2;
    G__157009.cljs$lang$applyTo = function(arglist__157013) {
      var x = cljs.core.first(arglist__157013);
      var y = cljs.core.first(cljs.core.next(arglist__157013));
      var more = cljs.core.rest(cljs.core.next(arglist__157013));
      return G__157009__delegate(x, y, more)
    };
    G__157009.cljs$lang$arity$variadic = G__157009__delegate;
    return G__157009
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        return _GT___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$lang$arity$1 = _GT___1;
  _GT_.cljs$lang$arity$2 = _GT___2;
  _GT_.cljs$lang$arity$variadic = _GT___3.cljs$lang$arity$variadic;
  return _GT_
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y
  };
  var _GT__EQ___3 = function() {
    var G__157014__delegate = function(x, y, more) {
      while(true) {
        if(x >= y) {
          if(cljs.core.next.call(null, more)) {
            var G__157015 = y;
            var G__157016 = cljs.core.first.call(null, more);
            var G__157017 = cljs.core.next.call(null, more);
            x = G__157015;
            y = G__157016;
            more = G__157017;
            continue
          }else {
            return y >= cljs.core.first.call(null, more)
          }
        }else {
          return false
        }
        break
      }
    };
    var G__157014 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157014__delegate.call(this, x, y, more)
    };
    G__157014.cljs$lang$maxFixedArity = 2;
    G__157014.cljs$lang$applyTo = function(arglist__157018) {
      var x = cljs.core.first(arglist__157018);
      var y = cljs.core.first(cljs.core.next(arglist__157018));
      var more = cljs.core.rest(cljs.core.next(arglist__157018));
      return G__157014__delegate(x, y, more)
    };
    G__157014.cljs$lang$arity$variadic = G__157014__delegate;
    return G__157014
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        return _GT__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$lang$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$lang$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$lang$arity$variadic = _GT__EQ___3.cljs$lang$arity$variadic;
  return _GT__EQ_
}();
cljs.core.dec = function dec(x) {
  return x - 1
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x
  };
  var max__2 = function(x, y) {
    return x > y ? x : y
  };
  var max__3 = function() {
    var G__157019__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, max, x > y ? x : y, more)
    };
    var G__157019 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157019__delegate.call(this, x, y, more)
    };
    G__157019.cljs$lang$maxFixedArity = 2;
    G__157019.cljs$lang$applyTo = function(arglist__157020) {
      var x = cljs.core.first(arglist__157020);
      var y = cljs.core.first(cljs.core.next(arglist__157020));
      var more = cljs.core.rest(cljs.core.next(arglist__157020));
      return G__157019__delegate(x, y, more)
    };
    G__157019.cljs$lang$arity$variadic = G__157019__delegate;
    return G__157019
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        return max__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$lang$arity$1 = max__1;
  max.cljs$lang$arity$2 = max__2;
  max.cljs$lang$arity$variadic = max__3.cljs$lang$arity$variadic;
  return max
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x
  };
  var min__2 = function(x, y) {
    return x < y ? x : y
  };
  var min__3 = function() {
    var G__157021__delegate = function(x, y, more) {
      return cljs.core.reduce.call(null, min, x < y ? x : y, more)
    };
    var G__157021 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157021__delegate.call(this, x, y, more)
    };
    G__157021.cljs$lang$maxFixedArity = 2;
    G__157021.cljs$lang$applyTo = function(arglist__157022) {
      var x = cljs.core.first(arglist__157022);
      var y = cljs.core.first(cljs.core.next(arglist__157022));
      var more = cljs.core.rest(cljs.core.next(arglist__157022));
      return G__157021__delegate(x, y, more)
    };
    G__157021.cljs$lang$arity$variadic = G__157021__delegate;
    return G__157021
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        return min__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$lang$arity$1 = min__1;
  min.cljs$lang$arity$2 = min__2;
  min.cljs$lang$arity$variadic = min__3.cljs$lang$arity$variadic;
  return min
}();
cljs.core.fix = function fix(q) {
  if(q >= 0) {
    return Math.floor.call(null, q)
  }else {
    return Math.ceil.call(null, q)
  }
};
cljs.core.int$ = function int$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix.call(null, x)
};
cljs.core.mod = function mod(n, d) {
  return n % d
};
cljs.core.quot = function quot(n, d) {
  var rem__157024 = n % d;
  return cljs.core.fix.call(null, (n - rem__157024) / d)
};
cljs.core.rem = function rem(n, d) {
  var q__157026 = cljs.core.quot.call(null, n, d);
  return n - d * q__157026
};
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return Math.random.call(null)
  };
  var rand__1 = function(n) {
    return n * rand.call(null)
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return cljs.core.fix.call(null, cljs.core.rand.call(null, n))
};
cljs.core.bit_xor = function bit_xor(x, y) {
  return x ^ y
};
cljs.core.bit_and = function bit_and(x, y) {
  return x & y
};
cljs.core.bit_or = function bit_or(x, y) {
  return x | y
};
cljs.core.bit_and_not = function bit_and_not(x, y) {
  return x & ~y
};
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n)
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n
};
cljs.core.bit_not = function bit_not(x) {
  return~x
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n
};
cljs.core.bit_count = function bit_count(v) {
  var v__157029 = v - (v >> 1 & 1431655765);
  var v__157030 = (v__157029 & 858993459) + (v__157029 >> 2 & 858993459);
  return(v__157030 + (v__157030 >> 4) & 252645135) * 16843009 >> 24
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv.call(null, x, y)
  };
  var _EQ__EQ___3 = function() {
    var G__157031__delegate = function(x, y, more) {
      while(true) {
        if(cljs.core.truth_(_EQ__EQ_.call(null, x, y))) {
          if(cljs.core.next.call(null, more)) {
            var G__157032 = y;
            var G__157033 = cljs.core.first.call(null, more);
            var G__157034 = cljs.core.next.call(null, more);
            x = G__157032;
            y = G__157033;
            more = G__157034;
            continue
          }else {
            return _EQ__EQ_.call(null, y, cljs.core.first.call(null, more))
          }
        }else {
          return false
        }
        break
      }
    };
    var G__157031 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157031__delegate.call(this, x, y, more)
    };
    G__157031.cljs$lang$maxFixedArity = 2;
    G__157031.cljs$lang$applyTo = function(arglist__157035) {
      var x = cljs.core.first(arglist__157035);
      var y = cljs.core.first(cljs.core.next(arglist__157035));
      var more = cljs.core.rest(cljs.core.next(arglist__157035));
      return G__157031__delegate(x, y, more)
    };
    G__157031.cljs$lang$arity$variadic = G__157031__delegate;
    return G__157031
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        return _EQ__EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$lang$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$lang$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$lang$arity$variadic = _EQ__EQ___3.cljs$lang$arity$variadic;
  return _EQ__EQ_
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__157039 = n;
  var xs__157040 = cljs.core.seq.call(null, coll);
  while(true) {
    if(cljs.core.truth_(function() {
      var and__3860__auto____157041 = xs__157040;
      if(and__3860__auto____157041) {
        return n__157039 > 0
      }else {
        return and__3860__auto____157041
      }
    }())) {
      var G__157042 = n__157039 - 1;
      var G__157043 = cljs.core.next.call(null, xs__157040);
      n__157039 = G__157042;
      xs__157040 = G__157043;
      continue
    }else {
      return xs__157040
    }
    break
  }
};
cljs.core.str_STAR_ = function() {
  var str_STAR_ = null;
  var str_STAR___0 = function() {
    return""
  };
  var str_STAR___1 = function(x) {
    if(x == null) {
      return""
    }else {
      if("\ufdd0'else") {
        return x.toString()
      }else {
        return null
      }
    }
  };
  var str_STAR___2 = function() {
    var G__157044__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__157045 = sb.append(str_STAR_.call(null, cljs.core.first.call(null, more)));
            var G__157046 = cljs.core.next.call(null, more);
            sb = G__157045;
            more = G__157046;
            continue
          }else {
            return str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str_STAR_.call(null, x)), ys)
    };
    var G__157044 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__157044__delegate.call(this, x, ys)
    };
    G__157044.cljs$lang$maxFixedArity = 1;
    G__157044.cljs$lang$applyTo = function(arglist__157047) {
      var x = cljs.core.first(arglist__157047);
      var ys = cljs.core.rest(arglist__157047);
      return G__157044__delegate(x, ys)
    };
    G__157044.cljs$lang$arity$variadic = G__157044__delegate;
    return G__157044
  }();
  str_STAR_ = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str_STAR___0.call(this);
      case 1:
        return str_STAR___1.call(this, x);
      default:
        return str_STAR___2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str_STAR_.cljs$lang$maxFixedArity = 1;
  str_STAR_.cljs$lang$applyTo = str_STAR___2.cljs$lang$applyTo;
  str_STAR_.cljs$lang$arity$0 = str_STAR___0;
  str_STAR_.cljs$lang$arity$1 = str_STAR___1;
  str_STAR_.cljs$lang$arity$variadic = str_STAR___2.cljs$lang$arity$variadic;
  return str_STAR_
}();
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return""
  };
  var str__1 = function(x) {
    if(cljs.core.symbol_QMARK_.call(null, x)) {
      return x.substring(2, x.length)
    }else {
      if(cljs.core.keyword_QMARK_.call(null, x)) {
        return cljs.core.str_STAR_.call(null, ":", x.substring(2, x.length))
      }else {
        if(x == null) {
          return""
        }else {
          if("\ufdd0'else") {
            return x.toString()
          }else {
            return null
          }
        }
      }
    }
  };
  var str__2 = function() {
    var G__157048__delegate = function(x, ys) {
      return function(sb, more) {
        while(true) {
          if(cljs.core.truth_(more)) {
            var G__157049 = sb.append(str.call(null, cljs.core.first.call(null, more)));
            var G__157050 = cljs.core.next.call(null, more);
            sb = G__157049;
            more = G__157050;
            continue
          }else {
            return cljs.core.str_STAR_.call(null, sb)
          }
          break
        }
      }.call(null, new goog.string.StringBuffer(str.call(null, x)), ys)
    };
    var G__157048 = function(x, var_args) {
      var ys = null;
      if(goog.isDef(var_args)) {
        ys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__157048__delegate.call(this, x, ys)
    };
    G__157048.cljs$lang$maxFixedArity = 1;
    G__157048.cljs$lang$applyTo = function(arglist__157051) {
      var x = cljs.core.first(arglist__157051);
      var ys = cljs.core.rest(arglist__157051);
      return G__157048__delegate(x, ys)
    };
    G__157048.cljs$lang$arity$variadic = G__157048__delegate;
    return G__157048
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        return str__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$lang$arity$0 = str__0;
  str.cljs$lang$arity$1 = str__1;
  str.cljs$lang$arity$variadic = str__2.cljs$lang$arity$variadic;
  return str
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start)
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end)
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subs.cljs$lang$arity$2 = subs__2;
  subs.cljs$lang$arity$3 = subs__3;
  return subs
}();
cljs.core.format = function() {
  var format__delegate = function(fmt, args) {
    return cljs.core.apply.call(null, goog.string.format, fmt, args)
  };
  var format = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return format__delegate.call(this, fmt, args)
  };
  format.cljs$lang$maxFixedArity = 1;
  format.cljs$lang$applyTo = function(arglist__157052) {
    var fmt = cljs.core.first(arglist__157052);
    var args = cljs.core.rest(arglist__157052);
    return format__delegate(fmt, args)
  };
  format.cljs$lang$arity$variadic = format__delegate;
  return format
}();
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if(cljs.core.symbol_QMARK_.call(null, name)) {
      name
    }else {
      if(cljs.core.keyword_QMARK_.call(null, name)) {
        cljs.core.str_STAR_.call(null, "\ufdd1", "'", cljs.core.subs.call(null, name, 2))
      }else {
      }
    }
    return cljs.core.str_STAR_.call(null, "\ufdd1", "'", name)
  };
  var symbol__2 = function(ns, name) {
    return symbol.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  symbol.cljs$lang$arity$1 = symbol__1;
  symbol.cljs$lang$arity$2 = symbol__2;
  return symbol
}();
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if(cljs.core.keyword_QMARK_.call(null, name)) {
      return name
    }else {
      if(cljs.core.symbol_QMARK_.call(null, name)) {
        return cljs.core.str_STAR_.call(null, "\ufdd0", "'", cljs.core.subs.call(null, name, 2))
      }else {
        if("\ufdd0'else") {
          return cljs.core.str_STAR_.call(null, "\ufdd0", "'", name)
        }else {
          return null
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return keyword.call(null, cljs.core.str_STAR_.call(null, ns, "/", name))
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name)
    }
    throw"Invalid arity: " + arguments.length;
  };
  keyword.cljs$lang$arity$1 = keyword__1;
  keyword.cljs$lang$arity$2 = keyword__2;
  return keyword
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.sequential_QMARK_.call(null, y) ? function() {
    var xs__157055 = cljs.core.seq.call(null, x);
    var ys__157056 = cljs.core.seq.call(null, y);
    while(true) {
      if(xs__157055 == null) {
        return ys__157056 == null
      }else {
        if(ys__157056 == null) {
          return false
        }else {
          if(cljs.core._EQ_.call(null, cljs.core.first.call(null, xs__157055), cljs.core.first.call(null, ys__157056))) {
            var G__157057 = cljs.core.next.call(null, xs__157055);
            var G__157058 = cljs.core.next.call(null, ys__157056);
            xs__157055 = G__157057;
            ys__157056 = G__157058;
            continue
          }else {
            if("\ufdd0'else") {
              return false
            }else {
              return null
            }
          }
        }
      }
      break
    }
  }() : null)
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2)
};
cljs.core.hash_coll = function hash_coll(coll) {
  return cljs.core.reduce.call(null, function(p1__157059_SHARP_, p2__157060_SHARP_) {
    return cljs.core.hash_combine.call(null, p1__157059_SHARP_, cljs.core.hash.call(null, p2__157060_SHARP_, false))
  }, cljs.core.hash.call(null, cljs.core.first.call(null, coll), false), cljs.core.next.call(null, coll))
};
cljs.core.hash_imap = function hash_imap(m) {
  var h__157064 = 0;
  var s__157065 = cljs.core.seq.call(null, m);
  while(true) {
    if(s__157065) {
      var e__157066 = cljs.core.first.call(null, s__157065);
      var G__157067 = (h__157064 + (cljs.core.hash.call(null, cljs.core.key.call(null, e__157066)) ^ cljs.core.hash.call(null, cljs.core.val.call(null, e__157066)))) % 4503599627370496;
      var G__157068 = cljs.core.next.call(null, s__157065);
      h__157064 = G__157067;
      s__157065 = G__157068;
      continue
    }else {
      return h__157064
    }
    break
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h__157072 = 0;
  var s__157073 = cljs.core.seq.call(null, s);
  while(true) {
    if(s__157073) {
      var e__157074 = cljs.core.first.call(null, s__157073);
      var G__157075 = (h__157072 + cljs.core.hash.call(null, e__157074)) % 4503599627370496;
      var G__157076 = cljs.core.next.call(null, s__157073);
      h__157072 = G__157075;
      s__157073 = G__157076;
      continue
    }else {
      return h__157072
    }
    break
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var G__157097__157098 = cljs.core.seq.call(null, fn_map);
  if(G__157097__157098) {
    var G__157100__157102 = cljs.core.first.call(null, G__157097__157098);
    var vec__157101__157103 = G__157100__157102;
    var key_name__157104 = cljs.core.nth.call(null, vec__157101__157103, 0, null);
    var f__157105 = cljs.core.nth.call(null, vec__157101__157103, 1, null);
    var G__157097__157106 = G__157097__157098;
    var G__157100__157107 = G__157100__157102;
    var G__157097__157108 = G__157097__157106;
    while(true) {
      var vec__157109__157110 = G__157100__157107;
      var key_name__157111 = cljs.core.nth.call(null, vec__157109__157110, 0, null);
      var f__157112 = cljs.core.nth.call(null, vec__157109__157110, 1, null);
      var G__157097__157113 = G__157097__157108;
      var str_name__157114 = cljs.core.name.call(null, key_name__157111);
      obj[str_name__157114] = f__157112;
      var temp__4011__auto____157115 = cljs.core.next.call(null, G__157097__157113);
      if(temp__4011__auto____157115) {
        var G__157097__157116 = temp__4011__auto____157115;
        var G__157117 = cljs.core.first.call(null, G__157097__157116);
        var G__157118 = G__157097__157116;
        G__157100__157107 = G__157117;
        G__157097__157108 = G__157118;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return obj
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413358
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/List")
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__157119 = this;
  var h__2229__auto____157120 = this__157119.__hash;
  if(!(h__2229__auto____157120 == null)) {
    return h__2229__auto____157120
  }else {
    var h__2229__auto____157121 = cljs.core.hash_coll.call(null, coll);
    this__157119.__hash = h__2229__auto____157121;
    return h__2229__auto____157121
  }
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__157122 = this;
  if(this__157122.count === 1) {
    return null
  }else {
    return this__157122.rest
  }
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__157123 = this;
  return new cljs.core.List(this__157123.meta, o, coll, this__157123.count + 1, null)
};
cljs.core.List.prototype.toString = function() {
  var this__157124 = this;
  var this__157125 = this;
  return cljs.core.pr_str.call(null, this__157125)
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__157126 = this;
  return coll
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__157127 = this;
  return this__157127.count
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__157128 = this;
  return this__157128.first
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__157129 = this;
  return coll.cljs$core$ISeq$_rest$arity$1(coll)
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__157130 = this;
  return this__157130.first
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__157131 = this;
  if(this__157131.count === 1) {
    return cljs.core.List.EMPTY
  }else {
    return this__157131.rest
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__157132 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__157133 = this;
  return new cljs.core.List(meta, this__157133.first, this__157133.rest, this__157133.count, this__157133.__hash)
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__157134 = this;
  return this__157134.meta
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__157135 = this;
  return cljs.core.List.EMPTY
};
cljs.core.List;
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65413326
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/EmptyList")
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__157136 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__157137 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__157138 = this;
  return new cljs.core.List(this__157138.meta, o, null, 1, null)
};
cljs.core.EmptyList.prototype.toString = function() {
  var this__157139 = this;
  var this__157140 = this;
  return cljs.core.pr_str.call(null, this__157140)
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__157141 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__157142 = this;
  return 0
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__157143 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__157144 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__157145 = this;
  return null
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__157146 = this;
  return cljs.core.List.EMPTY
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__157147 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__157148 = this;
  return new cljs.core.EmptyList(meta)
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__157149 = this;
  return this__157149.meta
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__157150 = this;
  return coll
};
cljs.core.EmptyList;
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__157154__157155 = coll;
  if(G__157154__157155) {
    if(function() {
      var or__3862__auto____157156 = G__157154__157155.cljs$lang$protocol_mask$partition0$ & 134217728;
      if(or__3862__auto____157156) {
        return or__3862__auto____157156
      }else {
        return G__157154__157155.cljs$core$IReversible$
      }
    }()) {
      return true
    }else {
      if(!G__157154__157155.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__157154__157155)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IReversible, G__157154__157155)
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq.call(null, coll)
};
cljs.core.reverse = function reverse(coll) {
  if(cljs.core.reversible_QMARK_.call(null, coll)) {
    return cljs.core.rseq.call(null, coll)
  }else {
    return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
  }
};
cljs.core.list = function() {
  var list = null;
  var list__0 = function() {
    return cljs.core.List.EMPTY
  };
  var list__1 = function(x) {
    return cljs.core.conj.call(null, cljs.core.List.EMPTY, x)
  };
  var list__2 = function(x, y) {
    return cljs.core.conj.call(null, list.call(null, y), x)
  };
  var list__3 = function(x, y, z) {
    return cljs.core.conj.call(null, list.call(null, y, z), x)
  };
  var list__4 = function() {
    var G__157157__delegate = function(x, y, z, items) {
      return cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.conj.call(null, cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, cljs.core.reverse.call(null, items)), z), y), x)
    };
    var G__157157 = function(x, y, z, var_args) {
      var items = null;
      if(goog.isDef(var_args)) {
        items = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__157157__delegate.call(this, x, y, z, items)
    };
    G__157157.cljs$lang$maxFixedArity = 3;
    G__157157.cljs$lang$applyTo = function(arglist__157158) {
      var x = cljs.core.first(arglist__157158);
      var y = cljs.core.first(cljs.core.next(arglist__157158));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157158)));
      var items = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157158)));
      return G__157157__delegate(x, y, z, items)
    };
    G__157157.cljs$lang$arity$variadic = G__157157__delegate;
    return G__157157
  }();
  list = function(x, y, z, var_args) {
    var items = var_args;
    switch(arguments.length) {
      case 0:
        return list__0.call(this);
      case 1:
        return list__1.call(this, x);
      case 2:
        return list__2.call(this, x, y);
      case 3:
        return list__3.call(this, x, y, z);
      default:
        return list__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list.cljs$lang$maxFixedArity = 3;
  list.cljs$lang$applyTo = list__4.cljs$lang$applyTo;
  list.cljs$lang$arity$0 = list__0;
  list.cljs$lang$arity$1 = list__1;
  list.cljs$lang$arity$2 = list__2;
  list.cljs$lang$arity$3 = list__3;
  list.cljs$lang$arity$variadic = list__4.cljs$lang$arity$variadic;
  return list
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 65405164
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Cons")
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__157159 = this;
  var h__2229__auto____157160 = this__157159.__hash;
  if(!(h__2229__auto____157160 == null)) {
    return h__2229__auto____157160
  }else {
    var h__2229__auto____157161 = cljs.core.hash_coll.call(null, coll);
    this__157159.__hash = h__2229__auto____157161;
    return h__2229__auto____157161
  }
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__157162 = this;
  if(this__157162.rest == null) {
    return null
  }else {
    return cljs.core._seq.call(null, this__157162.rest)
  }
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__157163 = this;
  return new cljs.core.Cons(null, o, coll, this__157163.__hash)
};
cljs.core.Cons.prototype.toString = function() {
  var this__157164 = this;
  var this__157165 = this;
  return cljs.core.pr_str.call(null, this__157165)
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__157166 = this;
  return coll
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__157167 = this;
  return this__157167.first
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__157168 = this;
  if(this__157168.rest == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__157168.rest
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__157169 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__157170 = this;
  return new cljs.core.Cons(meta, this__157170.first, this__157170.rest, this__157170.__hash)
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__157171 = this;
  return this__157171.meta
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__157172 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__157172.meta)
};
cljs.core.Cons;
cljs.core.cons = function cons(x, coll) {
  if(function() {
    var or__3862__auto____157177 = coll == null;
    if(or__3862__auto____157177) {
      return or__3862__auto____157177
    }else {
      var G__157178__157179 = coll;
      if(G__157178__157179) {
        if(function() {
          var or__3862__auto____157180 = G__157178__157179.cljs$lang$protocol_mask$partition0$ & 64;
          if(or__3862__auto____157180) {
            return or__3862__auto____157180
          }else {
            return G__157178__157179.cljs$core$ISeq$
          }
        }()) {
          return true
        }else {
          if(!G__157178__157179.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__157178__157179)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.ISeq, G__157178__157179)
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null)
  }else {
    return new cljs.core.Cons(null, x, cljs.core.seq.call(null, coll), null)
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__157184__157185 = x;
  if(G__157184__157185) {
    if(function() {
      var or__3862__auto____157186 = G__157184__157185.cljs$lang$protocol_mask$partition0$ & 33554432;
      if(or__3862__auto____157186) {
        return or__3862__auto____157186
      }else {
        return G__157184__157185.cljs$core$IList$
      }
    }()) {
      return true
    }else {
      if(!G__157184__157185.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__157184__157185)
      }else {
        return false
      }
    }
  }else {
    return cljs.core.type_satisfies_.call(null, cljs.core.IList, G__157184__157185)
  }
};
cljs.core.IReduce["string"] = true;
cljs.core._reduce["string"] = function() {
  var G__157187 = null;
  var G__157187__2 = function(string, f) {
    return cljs.core.ci_reduce.call(null, string, f)
  };
  var G__157187__3 = function(string, f, start) {
    return cljs.core.ci_reduce.call(null, string, f, start)
  };
  G__157187 = function(string, f, start) {
    switch(arguments.length) {
      case 2:
        return G__157187__2.call(this, string, f);
      case 3:
        return G__157187__3.call(this, string, f, start)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__157187
}();
cljs.core.ILookup["string"] = true;
cljs.core._lookup["string"] = function() {
  var G__157188 = null;
  var G__157188__2 = function(string, k) {
    return cljs.core._nth.call(null, string, k)
  };
  var G__157188__3 = function(string, k, not_found) {
    return cljs.core._nth.call(null, string, k, not_found)
  };
  G__157188 = function(string, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__157188__2.call(this, string, k);
      case 3:
        return G__157188__3.call(this, string, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__157188
}();
cljs.core.IIndexed["string"] = true;
cljs.core._nth["string"] = function() {
  var G__157189 = null;
  var G__157189__2 = function(string, n) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return null
    }
  };
  var G__157189__3 = function(string, n, not_found) {
    if(n < cljs.core._count.call(null, string)) {
      return string.charAt(n)
    }else {
      return not_found
    }
  };
  G__157189 = function(string, n, not_found) {
    switch(arguments.length) {
      case 2:
        return G__157189__2.call(this, string, n);
      case 3:
        return G__157189__3.call(this, string, n, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__157189
}();
cljs.core.ICounted["string"] = true;
cljs.core._count["string"] = function(s) {
  return s.length
};
cljs.core.ISeqable["string"] = true;
cljs.core._seq["string"] = function(string) {
  return cljs.core.prim_seq.call(null, string, 0)
};
cljs.core.IHash["string"] = true;
cljs.core._hash["string"] = function(o) {
  return goog.string.hashCode(o)
};
cljs.core.Keyword = function(k) {
  this.k = k;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Keyword")
};
cljs.core.Keyword.prototype.call = function() {
  var G__157201 = null;
  var G__157201__2 = function(this_sym157192, coll) {
    var this__157194 = this;
    var this_sym157192__157195 = this;
    var ___157196 = this_sym157192__157195;
    if(coll == null) {
      return null
    }else {
      var strobj__157197 = coll.strobj;
      if(strobj__157197 == null) {
        return cljs.core._lookup.call(null, coll, this__157194.k, null)
      }else {
        return strobj__157197[this__157194.k]
      }
    }
  };
  var G__157201__3 = function(this_sym157193, coll, not_found) {
    var this__157194 = this;
    var this_sym157193__157198 = this;
    var ___157199 = this_sym157193__157198;
    if(coll == null) {
      return not_found
    }else {
      return cljs.core._lookup.call(null, coll, this__157194.k, not_found)
    }
  };
  G__157201 = function(this_sym157193, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__157201__2.call(this, this_sym157193, coll);
      case 3:
        return G__157201__3.call(this, this_sym157193, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__157201
}();
cljs.core.Keyword.prototype.apply = function(this_sym157190, args157191) {
  var this__157200 = this;
  return this_sym157190.call.apply(this_sym157190, [this_sym157190].concat(args157191.slice()))
};
cljs.core.Keyword;
String.prototype.cljs$core$IFn$ = true;
String.prototype.call = function() {
  var G__157210 = null;
  var G__157210__2 = function(this_sym157204, coll) {
    var this_sym157204__157206 = this;
    var this__157207 = this_sym157204__157206;
    return cljs.core._lookup.call(null, coll, this__157207.toString(), null)
  };
  var G__157210__3 = function(this_sym157205, coll, not_found) {
    var this_sym157205__157208 = this;
    var this__157209 = this_sym157205__157208;
    return cljs.core._lookup.call(null, coll, this__157209.toString(), not_found)
  };
  G__157210 = function(this_sym157205, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__157210__2.call(this, this_sym157205, coll);
      case 3:
        return G__157210__3.call(this, this_sym157205, coll, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__157210
}();
String.prototype.apply = function(this_sym157202, args157203) {
  return this_sym157202.call.apply(this_sym157202, [this_sym157202].concat(args157203.slice()))
};
String.prototype.apply = function(s, args) {
  if(cljs.core.count.call(null, args) < 2) {
    return cljs.core._lookup.call(null, args[0], s, null)
  }else {
    return cljs.core._lookup.call(null, args[0], s, args[1])
  }
};
cljs.core.lazy_seq_value = function lazy_seq_value(lazy_seq) {
  var x__157212 = lazy_seq.x;
  if(lazy_seq.realized) {
    return x__157212
  }else {
    lazy_seq.x = x__157212.call(null);
    lazy_seq.realized = true;
    return lazy_seq.x
  }
};
cljs.core.LazySeq = function(meta, realized, x, __hash) {
  this.meta = meta;
  this.realized = realized;
  this.x = x;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850700
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/LazySeq")
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__157213 = this;
  var h__2229__auto____157214 = this__157213.__hash;
  if(!(h__2229__auto____157214 == null)) {
    return h__2229__auto____157214
  }else {
    var h__2229__auto____157215 = cljs.core.hash_coll.call(null, coll);
    this__157213.__hash = h__2229__auto____157215;
    return h__2229__auto____157215
  }
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__157216 = this;
  return cljs.core._seq.call(null, coll.cljs$core$ISeq$_rest$arity$1(coll))
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__157217 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.LazySeq.prototype.toString = function() {
  var this__157218 = this;
  var this__157219 = this;
  return cljs.core.pr_str.call(null, this__157219)
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__157220 = this;
  return cljs.core.seq.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__157221 = this;
  return cljs.core.first.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__157222 = this;
  return cljs.core.rest.call(null, cljs.core.lazy_seq_value.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__157223 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__157224 = this;
  return new cljs.core.LazySeq(meta, this__157224.realized, this__157224.x, this__157224.__hash)
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__157225 = this;
  return this__157225.meta
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__157226 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__157226.meta)
};
cljs.core.LazySeq;
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkBuffer")
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__157227 = this;
  return this__157227.end
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var this__157228 = this;
  var ___157229 = this;
  this__157228.buf[this__157228.end] = o;
  return this__157228.end = this__157228.end + 1
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var this__157230 = this;
  var ___157231 = this;
  var ret__157232 = new cljs.core.ArrayChunk(this__157230.buf, 0, this__157230.end);
  this__157230.buf = null;
  return ret__157232
};
cljs.core.ChunkBuffer;
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(cljs.core.make_array.call(null, capacity), 0)
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayChunk")
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__157233 = this;
  return cljs.core.ci_reduce.call(null, coll, f, this__157233.arr[this__157233.off], this__157233.off + 1)
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__157234 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start, this__157234.off)
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var this__157235 = this;
  if(this__157235.off === this__157235.end) {
    throw new Error("-drop-first of empty chunk");
  }else {
    return new cljs.core.ArrayChunk(this__157235.arr, this__157235.off + 1, this__157235.end)
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var this__157236 = this;
  return this__157236.arr[this__157236.off + i]
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var this__157237 = this;
  if(function() {
    var and__3860__auto____157238 = i >= 0;
    if(and__3860__auto____157238) {
      return i < this__157237.end - this__157237.off
    }else {
      return and__3860__auto____157238
    }
  }()) {
    return this__157237.arr[this__157237.off + i]
  }else {
    return not_found
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var this__157239 = this;
  return this__157239.end - this__157239.off
};
cljs.core.ArrayChunk;
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return array_chunk.call(null, arr, 0, arr.length)
  };
  var array_chunk__2 = function(arr, off) {
    return array_chunk.call(null, arr, off, arr.length)
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end)
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  array_chunk.cljs$lang$arity$1 = array_chunk__1;
  array_chunk.cljs$lang$arity$2 = array_chunk__2;
  array_chunk.cljs$lang$arity$3 = array_chunk__3;
  return array_chunk
}();
cljs.core.ChunkedCons = function(chunk, more, meta) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27656296
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedCons")
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var this__157240 = this;
  return cljs.core.cons.call(null, o, this$)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__157241 = this;
  return coll
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__157242 = this;
  return cljs.core._nth.call(null, this__157242.chunk, 0)
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__157243 = this;
  if(cljs.core._count.call(null, this__157243.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first.call(null, this__157243.chunk), this__157243.more, this__157243.meta)
  }else {
    if(this__157243.more == null) {
      return cljs.core.List.EMPTY
    }else {
      return this__157243.more
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__157244 = this;
  if(this__157244.more == null) {
    return null
  }else {
    return this__157244.more
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__157245 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__157246 = this;
  return new cljs.core.ChunkedCons(this__157246.chunk, this__157246.more, m)
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__157247 = this;
  return this__157247.meta
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__157248 = this;
  return this__157248.chunk
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__157249 = this;
  if(this__157249.more == null) {
    return cljs.core.List.EMPTY
  }else {
    return this__157249.more
  }
};
cljs.core.ChunkedCons;
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if(cljs.core._count.call(null, chunk) === 0) {
    return rest
  }else {
    return new cljs.core.ChunkedCons(chunk, rest, null)
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x)
};
cljs.core.chunk = function chunk(b) {
  return b.chunk()
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first.call(null, s)
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest.call(null, s)
};
cljs.core.chunk_next = function chunk_next(s) {
  if(function() {
    var G__157253__157254 = s;
    if(G__157253__157254) {
      if(cljs.core.truth_(function() {
        var or__3862__auto____157255 = null;
        if(cljs.core.truth_(or__3862__auto____157255)) {
          return or__3862__auto____157255
        }else {
          return G__157253__157254.cljs$core$IChunkedNext$
        }
      }())) {
        return true
      }else {
        if(!G__157253__157254.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__157253__157254)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IChunkedNext, G__157253__157254)
    }
  }()) {
    return cljs.core._chunked_next.call(null, s)
  }else {
    return cljs.core.seq.call(null, cljs.core._chunked_rest.call(null, s))
  }
};
cljs.core.to_array = function to_array(s) {
  var ary__157258 = [];
  var s__157259 = s;
  while(true) {
    if(cljs.core.seq.call(null, s__157259)) {
      ary__157258.push(cljs.core.first.call(null, s__157259));
      var G__157260 = cljs.core.next.call(null, s__157259);
      s__157259 = G__157260;
      continue
    }else {
      return ary__157258
    }
    break
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret__157264 = cljs.core.make_array.call(null, cljs.core.count.call(null, coll));
  var i__157265 = 0;
  var xs__157266 = cljs.core.seq.call(null, coll);
  while(true) {
    if(xs__157266) {
      ret__157264[i__157265] = cljs.core.to_array.call(null, cljs.core.first.call(null, xs__157266));
      var G__157267 = i__157265 + 1;
      var G__157268 = cljs.core.next.call(null, xs__157266);
      i__157265 = G__157267;
      xs__157266 = G__157268;
      continue
    }else {
    }
    break
  }
  return ret__157264
};
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return long_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("long-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a__157276 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__157277 = cljs.core.seq.call(null, init_val_or_seq);
      var i__157278 = 0;
      var s__157279 = s__157277;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3860__auto____157280 = s__157279;
          if(and__3860__auto____157280) {
            return i__157278 < size
          }else {
            return and__3860__auto____157280
          }
        }())) {
          a__157276[i__157278] = cljs.core.first.call(null, s__157279);
          var G__157283 = i__157278 + 1;
          var G__157284 = cljs.core.next.call(null, s__157279);
          i__157278 = G__157283;
          s__157279 = G__157284;
          continue
        }else {
          return a__157276
        }
        break
      }
    }else {
      var n__2564__auto____157281 = size;
      var i__157282 = 0;
      while(true) {
        if(i__157282 < n__2564__auto____157281) {
          a__157276[i__157282] = init_val_or_seq;
          var G__157285 = i__157282 + 1;
          i__157282 = G__157285;
          continue
        }else {
        }
        break
      }
      return a__157276
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  long_array.cljs$lang$arity$1 = long_array__1;
  long_array.cljs$lang$arity$2 = long_array__2;
  return long_array
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return double_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("double-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a__157293 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__157294 = cljs.core.seq.call(null, init_val_or_seq);
      var i__157295 = 0;
      var s__157296 = s__157294;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3860__auto____157297 = s__157296;
          if(and__3860__auto____157297) {
            return i__157295 < size
          }else {
            return and__3860__auto____157297
          }
        }())) {
          a__157293[i__157295] = cljs.core.first.call(null, s__157296);
          var G__157300 = i__157295 + 1;
          var G__157301 = cljs.core.next.call(null, s__157296);
          i__157295 = G__157300;
          s__157296 = G__157301;
          continue
        }else {
          return a__157293
        }
        break
      }
    }else {
      var n__2564__auto____157298 = size;
      var i__157299 = 0;
      while(true) {
        if(i__157299 < n__2564__auto____157298) {
          a__157293[i__157299] = init_val_or_seq;
          var G__157302 = i__157299 + 1;
          i__157299 = G__157302;
          continue
        }else {
        }
        break
      }
      return a__157293
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  double_array.cljs$lang$arity$1 = double_array__1;
  double_array.cljs$lang$arity$2 = double_array__2;
  return double_array
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if(cljs.core.number_QMARK_.call(null, size_or_seq)) {
      return object_array.call(null, size_or_seq, null)
    }else {
      if(cljs.core.seq_QMARK_.call(null, size_or_seq)) {
        return cljs.core.into_array.call(null, size_or_seq)
      }else {
        if("\ufdd0'else") {
          throw new Error("object-array called with something other than size or ISeq");
        }else {
          return null
        }
      }
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a__157310 = cljs.core.make_array.call(null, size);
    if(cljs.core.seq_QMARK_.call(null, init_val_or_seq)) {
      var s__157311 = cljs.core.seq.call(null, init_val_or_seq);
      var i__157312 = 0;
      var s__157313 = s__157311;
      while(true) {
        if(cljs.core.truth_(function() {
          var and__3860__auto____157314 = s__157313;
          if(and__3860__auto____157314) {
            return i__157312 < size
          }else {
            return and__3860__auto____157314
          }
        }())) {
          a__157310[i__157312] = cljs.core.first.call(null, s__157313);
          var G__157317 = i__157312 + 1;
          var G__157318 = cljs.core.next.call(null, s__157313);
          i__157312 = G__157317;
          s__157313 = G__157318;
          continue
        }else {
          return a__157310
        }
        break
      }
    }else {
      var n__2564__auto____157315 = size;
      var i__157316 = 0;
      while(true) {
        if(i__157316 < n__2564__auto____157315) {
          a__157310[i__157316] = init_val_or_seq;
          var G__157319 = i__157316 + 1;
          i__157316 = G__157319;
          continue
        }else {
        }
        break
      }
      return a__157310
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq)
    }
    throw"Invalid arity: " + arguments.length;
  };
  object_array.cljs$lang$arity$1 = object_array__1;
  object_array.cljs$lang$arity$2 = object_array__2;
  return object_array
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if(cljs.core.counted_QMARK_.call(null, s)) {
    return cljs.core.count.call(null, s)
  }else {
    var s__157324 = s;
    var i__157325 = n;
    var sum__157326 = 0;
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3860__auto____157327 = i__157325 > 0;
        if(and__3860__auto____157327) {
          return cljs.core.seq.call(null, s__157324)
        }else {
          return and__3860__auto____157327
        }
      }())) {
        var G__157328 = cljs.core.next.call(null, s__157324);
        var G__157329 = i__157325 - 1;
        var G__157330 = sum__157326 + 1;
        s__157324 = G__157328;
        i__157325 = G__157329;
        sum__157326 = G__157330;
        continue
      }else {
        return sum__157326
      }
      break
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if(arglist == null) {
    return null
  }else {
    if(cljs.core.next.call(null, arglist) == null) {
      return cljs.core.seq.call(null, cljs.core.first.call(null, arglist))
    }else {
      if("\ufdd0'else") {
        return cljs.core.cons.call(null, cljs.core.first.call(null, arglist), spread.call(null, cljs.core.next.call(null, arglist)))
      }else {
        return null
      }
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, false, function() {
      return null
    }, null)
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return x
    }, null)
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__157335 = cljs.core.seq.call(null, x);
      if(s__157335) {
        if(cljs.core.chunked_seq_QMARK_.call(null, s__157335)) {
          return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, s__157335), concat.call(null, cljs.core.chunk_rest.call(null, s__157335), y))
        }else {
          return cljs.core.cons.call(null, cljs.core.first.call(null, s__157335), concat.call(null, cljs.core.rest.call(null, s__157335), y))
        }
      }else {
        return y
      }
    }, null)
  };
  var concat__3 = function() {
    var G__157339__delegate = function(x, y, zs) {
      var cat__157338 = function cat(xys, zs) {
        return new cljs.core.LazySeq(null, false, function() {
          var xys__157337 = cljs.core.seq.call(null, xys);
          if(xys__157337) {
            if(cljs.core.chunked_seq_QMARK_.call(null, xys__157337)) {
              return cljs.core.chunk_cons.call(null, cljs.core.chunk_first.call(null, xys__157337), cat.call(null, cljs.core.chunk_rest.call(null, xys__157337), zs))
            }else {
              return cljs.core.cons.call(null, cljs.core.first.call(null, xys__157337), cat.call(null, cljs.core.rest.call(null, xys__157337), zs))
            }
          }else {
            if(cljs.core.truth_(zs)) {
              return cat.call(null, cljs.core.first.call(null, zs), cljs.core.next.call(null, zs))
            }else {
              return null
            }
          }
        }, null)
      };
      return cat__157338.call(null, concat.call(null, x, y), zs)
    };
    var G__157339 = function(x, y, var_args) {
      var zs = null;
      if(goog.isDef(var_args)) {
        zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157339__delegate.call(this, x, y, zs)
    };
    G__157339.cljs$lang$maxFixedArity = 2;
    G__157339.cljs$lang$applyTo = function(arglist__157340) {
      var x = cljs.core.first(arglist__157340);
      var y = cljs.core.first(cljs.core.next(arglist__157340));
      var zs = cljs.core.rest(cljs.core.next(arglist__157340));
      return G__157339__delegate(x, y, zs)
    };
    G__157339.cljs$lang$arity$variadic = G__157339__delegate;
    return G__157339
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        return concat__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$lang$arity$0 = concat__0;
  concat.cljs$lang$arity$1 = concat__1;
  concat.cljs$lang$arity$2 = concat__2;
  concat.cljs$lang$arity$variadic = concat__3.cljs$lang$arity$variadic;
  return concat
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq.call(null, args)
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons.call(null, a, args)
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, args))
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, args)))
  };
  var list_STAR___5 = function() {
    var G__157341__delegate = function(a, b, c, d, more) {
      return cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, more)))))
    };
    var G__157341 = function(a, b, c, d, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__157341__delegate.call(this, a, b, c, d, more)
    };
    G__157341.cljs$lang$maxFixedArity = 4;
    G__157341.cljs$lang$applyTo = function(arglist__157342) {
      var a = cljs.core.first(arglist__157342);
      var b = cljs.core.first(cljs.core.next(arglist__157342));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157342)));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157342))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157342))));
      return G__157341__delegate(a, b, c, d, more)
    };
    G__157341.cljs$lang$arity$variadic = G__157341__delegate;
    return G__157341
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        return list_STAR___5.cljs$lang$arity$variadic(a, b, c, d, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$lang$arity$1 = list_STAR___1;
  list_STAR_.cljs$lang$arity$2 = list_STAR___2;
  list_STAR_.cljs$lang$arity$3 = list_STAR___3;
  list_STAR_.cljs$lang$arity$4 = list_STAR___4;
  list_STAR_.cljs$lang$arity$variadic = list_STAR___5.cljs$lang$arity$variadic;
  return list_STAR_
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient.call(null, coll)
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_.call(null, tcoll)
};
cljs.core.conj_BANG_ = function conj_BANG_(tcoll, val) {
  return cljs.core._conj_BANG_.call(null, tcoll, val)
};
cljs.core.assoc_BANG_ = function assoc_BANG_(tcoll, key, val) {
  return cljs.core._assoc_BANG_.call(null, tcoll, key, val)
};
cljs.core.dissoc_BANG_ = function dissoc_BANG_(tcoll, key) {
  return cljs.core._dissoc_BANG_.call(null, tcoll, key)
};
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_.call(null, tcoll)
};
cljs.core.disj_BANG_ = function disj_BANG_(tcoll, val) {
  return cljs.core._disjoin_BANG_.call(null, tcoll, val)
};
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__157384 = cljs.core.seq.call(null, args);
  if(argc === 0) {
    return f.call(null)
  }else {
    var a__157385 = cljs.core._first.call(null, args__157384);
    var args__157386 = cljs.core._rest.call(null, args__157384);
    if(argc === 1) {
      if(f.cljs$lang$arity$1) {
        return f.cljs$lang$arity$1(a__157385)
      }else {
        return f.call(null, a__157385)
      }
    }else {
      var b__157387 = cljs.core._first.call(null, args__157386);
      var args__157388 = cljs.core._rest.call(null, args__157386);
      if(argc === 2) {
        if(f.cljs$lang$arity$2) {
          return f.cljs$lang$arity$2(a__157385, b__157387)
        }else {
          return f.call(null, a__157385, b__157387)
        }
      }else {
        var c__157389 = cljs.core._first.call(null, args__157388);
        var args__157390 = cljs.core._rest.call(null, args__157388);
        if(argc === 3) {
          if(f.cljs$lang$arity$3) {
            return f.cljs$lang$arity$3(a__157385, b__157387, c__157389)
          }else {
            return f.call(null, a__157385, b__157387, c__157389)
          }
        }else {
          var d__157391 = cljs.core._first.call(null, args__157390);
          var args__157392 = cljs.core._rest.call(null, args__157390);
          if(argc === 4) {
            if(f.cljs$lang$arity$4) {
              return f.cljs$lang$arity$4(a__157385, b__157387, c__157389, d__157391)
            }else {
              return f.call(null, a__157385, b__157387, c__157389, d__157391)
            }
          }else {
            var e__157393 = cljs.core._first.call(null, args__157392);
            var args__157394 = cljs.core._rest.call(null, args__157392);
            if(argc === 5) {
              if(f.cljs$lang$arity$5) {
                return f.cljs$lang$arity$5(a__157385, b__157387, c__157389, d__157391, e__157393)
              }else {
                return f.call(null, a__157385, b__157387, c__157389, d__157391, e__157393)
              }
            }else {
              var f__157395 = cljs.core._first.call(null, args__157394);
              var args__157396 = cljs.core._rest.call(null, args__157394);
              if(argc === 6) {
                if(f__157395.cljs$lang$arity$6) {
                  return f__157395.cljs$lang$arity$6(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395)
                }else {
                  return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395)
                }
              }else {
                var g__157397 = cljs.core._first.call(null, args__157396);
                var args__157398 = cljs.core._rest.call(null, args__157396);
                if(argc === 7) {
                  if(f__157395.cljs$lang$arity$7) {
                    return f__157395.cljs$lang$arity$7(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397)
                  }else {
                    return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397)
                  }
                }else {
                  var h__157399 = cljs.core._first.call(null, args__157398);
                  var args__157400 = cljs.core._rest.call(null, args__157398);
                  if(argc === 8) {
                    if(f__157395.cljs$lang$arity$8) {
                      return f__157395.cljs$lang$arity$8(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399)
                    }else {
                      return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399)
                    }
                  }else {
                    var i__157401 = cljs.core._first.call(null, args__157400);
                    var args__157402 = cljs.core._rest.call(null, args__157400);
                    if(argc === 9) {
                      if(f__157395.cljs$lang$arity$9) {
                        return f__157395.cljs$lang$arity$9(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401)
                      }else {
                        return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401)
                      }
                    }else {
                      var j__157403 = cljs.core._first.call(null, args__157402);
                      var args__157404 = cljs.core._rest.call(null, args__157402);
                      if(argc === 10) {
                        if(f__157395.cljs$lang$arity$10) {
                          return f__157395.cljs$lang$arity$10(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403)
                        }else {
                          return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403)
                        }
                      }else {
                        var k__157405 = cljs.core._first.call(null, args__157404);
                        var args__157406 = cljs.core._rest.call(null, args__157404);
                        if(argc === 11) {
                          if(f__157395.cljs$lang$arity$11) {
                            return f__157395.cljs$lang$arity$11(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405)
                          }else {
                            return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405)
                          }
                        }else {
                          var l__157407 = cljs.core._first.call(null, args__157406);
                          var args__157408 = cljs.core._rest.call(null, args__157406);
                          if(argc === 12) {
                            if(f__157395.cljs$lang$arity$12) {
                              return f__157395.cljs$lang$arity$12(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407)
                            }else {
                              return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407)
                            }
                          }else {
                            var m__157409 = cljs.core._first.call(null, args__157408);
                            var args__157410 = cljs.core._rest.call(null, args__157408);
                            if(argc === 13) {
                              if(f__157395.cljs$lang$arity$13) {
                                return f__157395.cljs$lang$arity$13(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409)
                              }else {
                                return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409)
                              }
                            }else {
                              var n__157411 = cljs.core._first.call(null, args__157410);
                              var args__157412 = cljs.core._rest.call(null, args__157410);
                              if(argc === 14) {
                                if(f__157395.cljs$lang$arity$14) {
                                  return f__157395.cljs$lang$arity$14(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411)
                                }else {
                                  return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411)
                                }
                              }else {
                                var o__157413 = cljs.core._first.call(null, args__157412);
                                var args__157414 = cljs.core._rest.call(null, args__157412);
                                if(argc === 15) {
                                  if(f__157395.cljs$lang$arity$15) {
                                    return f__157395.cljs$lang$arity$15(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413)
                                  }else {
                                    return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413)
                                  }
                                }else {
                                  var p__157415 = cljs.core._first.call(null, args__157414);
                                  var args__157416 = cljs.core._rest.call(null, args__157414);
                                  if(argc === 16) {
                                    if(f__157395.cljs$lang$arity$16) {
                                      return f__157395.cljs$lang$arity$16(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415)
                                    }else {
                                      return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415)
                                    }
                                  }else {
                                    var q__157417 = cljs.core._first.call(null, args__157416);
                                    var args__157418 = cljs.core._rest.call(null, args__157416);
                                    if(argc === 17) {
                                      if(f__157395.cljs$lang$arity$17) {
                                        return f__157395.cljs$lang$arity$17(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417)
                                      }else {
                                        return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417)
                                      }
                                    }else {
                                      var r__157419 = cljs.core._first.call(null, args__157418);
                                      var args__157420 = cljs.core._rest.call(null, args__157418);
                                      if(argc === 18) {
                                        if(f__157395.cljs$lang$arity$18) {
                                          return f__157395.cljs$lang$arity$18(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417, r__157419)
                                        }else {
                                          return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417, r__157419)
                                        }
                                      }else {
                                        var s__157421 = cljs.core._first.call(null, args__157420);
                                        var args__157422 = cljs.core._rest.call(null, args__157420);
                                        if(argc === 19) {
                                          if(f__157395.cljs$lang$arity$19) {
                                            return f__157395.cljs$lang$arity$19(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417, r__157419, s__157421)
                                          }else {
                                            return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417, r__157419, s__157421)
                                          }
                                        }else {
                                          var t__157423 = cljs.core._first.call(null, args__157422);
                                          var args__157424 = cljs.core._rest.call(null, args__157422);
                                          if(argc === 20) {
                                            if(f__157395.cljs$lang$arity$20) {
                                              return f__157395.cljs$lang$arity$20(a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417, r__157419, s__157421, t__157423)
                                            }else {
                                              return f__157395.call(null, a__157385, b__157387, c__157389, d__157391, e__157393, f__157395, g__157397, h__157399, i__157401, j__157403, k__157405, l__157407, m__157409, n__157411, o__157413, p__157415, q__157417, r__157419, s__157421, t__157423)
                                            }
                                          }else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity__157439 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__157440 = cljs.core.bounded_count.call(null, args, fixed_arity__157439 + 1);
      if(bc__157440 <= fixed_arity__157439) {
        return cljs.core.apply_to.call(null, f, bc__157440, args)
      }else {
        return f.cljs$lang$applyTo(args)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, args))
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist__157441 = cljs.core.list_STAR_.call(null, x, args);
    var fixed_arity__157442 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__157443 = cljs.core.bounded_count.call(null, arglist__157441, fixed_arity__157442 + 1);
      if(bc__157443 <= fixed_arity__157442) {
        return cljs.core.apply_to.call(null, f, bc__157443, arglist__157441)
      }else {
        return f.cljs$lang$applyTo(arglist__157441)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__157441))
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist__157444 = cljs.core.list_STAR_.call(null, x, y, args);
    var fixed_arity__157445 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__157446 = cljs.core.bounded_count.call(null, arglist__157444, fixed_arity__157445 + 1);
      if(bc__157446 <= fixed_arity__157445) {
        return cljs.core.apply_to.call(null, f, bc__157446, arglist__157444)
      }else {
        return f.cljs$lang$applyTo(arglist__157444)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__157444))
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist__157447 = cljs.core.list_STAR_.call(null, x, y, z, args);
    var fixed_arity__157448 = f.cljs$lang$maxFixedArity;
    if(cljs.core.truth_(f.cljs$lang$applyTo)) {
      var bc__157449 = cljs.core.bounded_count.call(null, arglist__157447, fixed_arity__157448 + 1);
      if(bc__157449 <= fixed_arity__157448) {
        return cljs.core.apply_to.call(null, f, bc__157449, arglist__157447)
      }else {
        return f.cljs$lang$applyTo(arglist__157447)
      }
    }else {
      return f.apply(f, cljs.core.to_array.call(null, arglist__157447))
    }
  };
  var apply__6 = function() {
    var G__157453__delegate = function(f, a, b, c, d, args) {
      var arglist__157450 = cljs.core.cons.call(null, a, cljs.core.cons.call(null, b, cljs.core.cons.call(null, c, cljs.core.cons.call(null, d, cljs.core.spread.call(null, args)))));
      var fixed_arity__157451 = f.cljs$lang$maxFixedArity;
      if(cljs.core.truth_(f.cljs$lang$applyTo)) {
        var bc__157452 = cljs.core.bounded_count.call(null, arglist__157450, fixed_arity__157451 + 1);
        if(bc__157452 <= fixed_arity__157451) {
          return cljs.core.apply_to.call(null, f, bc__157452, arglist__157450)
        }else {
          return f.cljs$lang$applyTo(arglist__157450)
        }
      }else {
        return f.apply(f, cljs.core.to_array.call(null, arglist__157450))
      }
    };
    var G__157453 = function(f, a, b, c, d, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__157453__delegate.call(this, f, a, b, c, d, args)
    };
    G__157453.cljs$lang$maxFixedArity = 5;
    G__157453.cljs$lang$applyTo = function(arglist__157454) {
      var f = cljs.core.first(arglist__157454);
      var a = cljs.core.first(cljs.core.next(arglist__157454));
      var b = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157454)));
      var c = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157454))));
      var d = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157454)))));
      var args = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157454)))));
      return G__157453__delegate(f, a, b, c, d, args)
    };
    G__157453.cljs$lang$arity$variadic = G__157453__delegate;
    return G__157453
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        return apply__6.cljs$lang$arity$variadic(f, a, b, c, d, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$lang$arity$2 = apply__2;
  apply.cljs$lang$arity$3 = apply__3;
  apply.cljs$lang$arity$4 = apply__4;
  apply.cljs$lang$arity$5 = apply__5;
  apply.cljs$lang$arity$variadic = apply__6.cljs$lang$arity$variadic;
  return apply
}();
cljs.core.vary_meta = function() {
  var vary_meta__delegate = function(obj, f, args) {
    return cljs.core.with_meta.call(null, obj, cljs.core.apply.call(null, f, cljs.core.meta.call(null, obj), args))
  };
  var vary_meta = function(obj, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return vary_meta__delegate.call(this, obj, f, args)
  };
  vary_meta.cljs$lang$maxFixedArity = 2;
  vary_meta.cljs$lang$applyTo = function(arglist__157455) {
    var obj = cljs.core.first(arglist__157455);
    var f = cljs.core.first(cljs.core.next(arglist__157455));
    var args = cljs.core.rest(cljs.core.next(arglist__157455));
    return vary_meta__delegate(obj, f, args)
  };
  vary_meta.cljs$lang$arity$variadic = vary_meta__delegate;
  return vary_meta
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.call(null, x, y)
  };
  var not_EQ___3 = function() {
    var G__157456__delegate = function(x, y, more) {
      return cljs.core.not.call(null, cljs.core.apply.call(null, cljs.core._EQ_, x, y, more))
    };
    var G__157456 = function(x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__157456__delegate.call(this, x, y, more)
    };
    G__157456.cljs$lang$maxFixedArity = 2;
    G__157456.cljs$lang$applyTo = function(arglist__157457) {
      var x = cljs.core.first(arglist__157457);
      var y = cljs.core.first(cljs.core.next(arglist__157457));
      var more = cljs.core.rest(cljs.core.next(arglist__157457));
      return G__157456__delegate(x, y, more)
    };
    G__157456.cljs$lang$arity$variadic = G__157456__delegate;
    return G__157456
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        return not_EQ___3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$lang$arity$1 = not_EQ___1;
  not_EQ_.cljs$lang$arity$2 = not_EQ___2;
  not_EQ_.cljs$lang$arity$variadic = not_EQ___3.cljs$lang$arity$variadic;
  return not_EQ_
}();
cljs.core.not_empty = function not_empty(coll) {
  if(cljs.core.seq.call(null, coll)) {
    return coll
  }else {
    return null
  }
};
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll) == null) {
      return true
    }else {
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, coll)))) {
        var G__157458 = pred;
        var G__157459 = cljs.core.next.call(null, coll);
        pred = G__157458;
        coll = G__157459;
        continue
      }else {
        if("\ufdd0'else") {
          return false
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_.call(null, pred, coll)
};
cljs.core.some = function some(pred, coll) {
  while(true) {
    if(cljs.core.seq.call(null, coll)) {
      var or__3862__auto____157461 = pred.call(null, cljs.core.first.call(null, coll));
      if(cljs.core.truth_(or__3862__auto____157461)) {
        return or__3862__auto____157461
      }else {
        var G__157462 = pred;
        var G__157463 = cljs.core.next.call(null, coll);
        pred = G__157462;
        coll = G__157463;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not.call(null, cljs.core.some.call(null, pred, coll))
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if(cljs.core.integer_QMARK_.call(null, n)) {
    return(n & 1) === 0
  }else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_.call(null, n)
};
cljs.core.identity = function identity(x) {
  return x
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__157464 = null;
    var G__157464__0 = function() {
      return cljs.core.not.call(null, f.call(null))
    };
    var G__157464__1 = function(x) {
      return cljs.core.not.call(null, f.call(null, x))
    };
    var G__157464__2 = function(x, y) {
      return cljs.core.not.call(null, f.call(null, x, y))
    };
    var G__157464__3 = function() {
      var G__157465__delegate = function(x, y, zs) {
        return cljs.core.not.call(null, cljs.core.apply.call(null, f, x, y, zs))
      };
      var G__157465 = function(x, y, var_args) {
        var zs = null;
        if(goog.isDef(var_args)) {
          zs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
        }
        return G__157465__delegate.call(this, x, y, zs)
      };
      G__157465.cljs$lang$maxFixedArity = 2;
      G__157465.cljs$lang$applyTo = function(arglist__157466) {
        var x = cljs.core.first(arglist__157466);
        var y = cljs.core.first(cljs.core.next(arglist__157466));
        var zs = cljs.core.rest(cljs.core.next(arglist__157466));
        return G__157465__delegate(x, y, zs)
      };
      G__157465.cljs$lang$arity$variadic = G__157465__delegate;
      return G__157465
    }();
    G__157464 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__157464__0.call(this);
        case 1:
          return G__157464__1.call(this, x);
        case 2:
          return G__157464__2.call(this, x, y);
        default:
          return G__157464__3.cljs$lang$arity$variadic(x, y, cljs.core.array_seq(arguments, 2))
      }
      throw"Invalid arity: " + arguments.length;
    };
    G__157464.cljs$lang$maxFixedArity = 2;
    G__157464.cljs$lang$applyTo = G__157464__3.cljs$lang$applyTo;
    return G__157464
  }()
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__157467__delegate = function(args) {
      return x
    };
    var G__157467 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__157467__delegate.call(this, args)
    };
    G__157467.cljs$lang$maxFixedArity = 0;
    G__157467.cljs$lang$applyTo = function(arglist__157468) {
      var args = cljs.core.seq(arglist__157468);
      return G__157467__delegate(args)
    };
    G__157467.cljs$lang$arity$variadic = G__157467__delegate;
    return G__157467
  }()
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity
  };
  var comp__1 = function(f) {
    return f
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__157475 = null;
      var G__157475__0 = function() {
        return f.call(null, g.call(null))
      };
      var G__157475__1 = function(x) {
        return f.call(null, g.call(null, x))
      };
      var G__157475__2 = function(x, y) {
        return f.call(null, g.call(null, x, y))
      };
      var G__157475__3 = function(x, y, z) {
        return f.call(null, g.call(null, x, y, z))
      };
      var G__157475__4 = function() {
        var G__157476__delegate = function(x, y, z, args) {
          return f.call(null, cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__157476 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157476__delegate.call(this, x, y, z, args)
        };
        G__157476.cljs$lang$maxFixedArity = 3;
        G__157476.cljs$lang$applyTo = function(arglist__157477) {
          var x = cljs.core.first(arglist__157477);
          var y = cljs.core.first(cljs.core.next(arglist__157477));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157477)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157477)));
          return G__157476__delegate(x, y, z, args)
        };
        G__157476.cljs$lang$arity$variadic = G__157476__delegate;
        return G__157476
      }();
      G__157475 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__157475__0.call(this);
          case 1:
            return G__157475__1.call(this, x);
          case 2:
            return G__157475__2.call(this, x, y);
          case 3:
            return G__157475__3.call(this, x, y, z);
          default:
            return G__157475__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__157475.cljs$lang$maxFixedArity = 3;
      G__157475.cljs$lang$applyTo = G__157475__4.cljs$lang$applyTo;
      return G__157475
    }()
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__157478 = null;
      var G__157478__0 = function() {
        return f.call(null, g.call(null, h.call(null)))
      };
      var G__157478__1 = function(x) {
        return f.call(null, g.call(null, h.call(null, x)))
      };
      var G__157478__2 = function(x, y) {
        return f.call(null, g.call(null, h.call(null, x, y)))
      };
      var G__157478__3 = function(x, y, z) {
        return f.call(null, g.call(null, h.call(null, x, y, z)))
      };
      var G__157478__4 = function() {
        var G__157479__delegate = function(x, y, z, args) {
          return f.call(null, g.call(null, cljs.core.apply.call(null, h, x, y, z, args)))
        };
        var G__157479 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157479__delegate.call(this, x, y, z, args)
        };
        G__157479.cljs$lang$maxFixedArity = 3;
        G__157479.cljs$lang$applyTo = function(arglist__157480) {
          var x = cljs.core.first(arglist__157480);
          var y = cljs.core.first(cljs.core.next(arglist__157480));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157480)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157480)));
          return G__157479__delegate(x, y, z, args)
        };
        G__157479.cljs$lang$arity$variadic = G__157479__delegate;
        return G__157479
      }();
      G__157478 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__157478__0.call(this);
          case 1:
            return G__157478__1.call(this, x);
          case 2:
            return G__157478__2.call(this, x, y);
          case 3:
            return G__157478__3.call(this, x, y, z);
          default:
            return G__157478__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__157478.cljs$lang$maxFixedArity = 3;
      G__157478.cljs$lang$applyTo = G__157478__4.cljs$lang$applyTo;
      return G__157478
    }()
  };
  var comp__4 = function() {
    var G__157481__delegate = function(f1, f2, f3, fs) {
      var fs__157472 = cljs.core.reverse.call(null, cljs.core.list_STAR_.call(null, f1, f2, f3, fs));
      return function() {
        var G__157482__delegate = function(args) {
          var ret__157473 = cljs.core.apply.call(null, cljs.core.first.call(null, fs__157472), args);
          var fs__157474 = cljs.core.next.call(null, fs__157472);
          while(true) {
            if(fs__157474) {
              var G__157483 = cljs.core.first.call(null, fs__157474).call(null, ret__157473);
              var G__157484 = cljs.core.next.call(null, fs__157474);
              ret__157473 = G__157483;
              fs__157474 = G__157484;
              continue
            }else {
              return ret__157473
            }
            break
          }
        };
        var G__157482 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__157482__delegate.call(this, args)
        };
        G__157482.cljs$lang$maxFixedArity = 0;
        G__157482.cljs$lang$applyTo = function(arglist__157485) {
          var args = cljs.core.seq(arglist__157485);
          return G__157482__delegate(args)
        };
        G__157482.cljs$lang$arity$variadic = G__157482__delegate;
        return G__157482
      }()
    };
    var G__157481 = function(f1, f2, f3, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__157481__delegate.call(this, f1, f2, f3, fs)
    };
    G__157481.cljs$lang$maxFixedArity = 3;
    G__157481.cljs$lang$applyTo = function(arglist__157486) {
      var f1 = cljs.core.first(arglist__157486);
      var f2 = cljs.core.first(cljs.core.next(arglist__157486));
      var f3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157486)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157486)));
      return G__157481__delegate(f1, f2, f3, fs)
    };
    G__157481.cljs$lang$arity$variadic = G__157481__delegate;
    return G__157481
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        return comp__4.cljs$lang$arity$variadic(f1, f2, f3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$lang$arity$0 = comp__0;
  comp.cljs$lang$arity$1 = comp__1;
  comp.cljs$lang$arity$2 = comp__2;
  comp.cljs$lang$arity$3 = comp__3;
  comp.cljs$lang$arity$variadic = comp__4.cljs$lang$arity$variadic;
  return comp
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__2 = function(f, arg1) {
    return function() {
      var G__157487__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, args)
      };
      var G__157487 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__157487__delegate.call(this, args)
      };
      G__157487.cljs$lang$maxFixedArity = 0;
      G__157487.cljs$lang$applyTo = function(arglist__157488) {
        var args = cljs.core.seq(arglist__157488);
        return G__157487__delegate(args)
      };
      G__157487.cljs$lang$arity$variadic = G__157487__delegate;
      return G__157487
    }()
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__157489__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, args)
      };
      var G__157489 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__157489__delegate.call(this, args)
      };
      G__157489.cljs$lang$maxFixedArity = 0;
      G__157489.cljs$lang$applyTo = function(arglist__157490) {
        var args = cljs.core.seq(arglist__157490);
        return G__157489__delegate(args)
      };
      G__157489.cljs$lang$arity$variadic = G__157489__delegate;
      return G__157489
    }()
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__157491__delegate = function(args) {
        return cljs.core.apply.call(null, f, arg1, arg2, arg3, args)
      };
      var G__157491 = function(var_args) {
        var args = null;
        if(goog.isDef(var_args)) {
          args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__157491__delegate.call(this, args)
      };
      G__157491.cljs$lang$maxFixedArity = 0;
      G__157491.cljs$lang$applyTo = function(arglist__157492) {
        var args = cljs.core.seq(arglist__157492);
        return G__157491__delegate(args)
      };
      G__157491.cljs$lang$arity$variadic = G__157491__delegate;
      return G__157491
    }()
  };
  var partial__5 = function() {
    var G__157493__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__157494__delegate = function(args) {
          return cljs.core.apply.call(null, f, arg1, arg2, arg3, cljs.core.concat.call(null, more, args))
        };
        var G__157494 = function(var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
          }
          return G__157494__delegate.call(this, args)
        };
        G__157494.cljs$lang$maxFixedArity = 0;
        G__157494.cljs$lang$applyTo = function(arglist__157495) {
          var args = cljs.core.seq(arglist__157495);
          return G__157494__delegate(args)
        };
        G__157494.cljs$lang$arity$variadic = G__157494__delegate;
        return G__157494
      }()
    };
    var G__157493 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__157493__delegate.call(this, f, arg1, arg2, arg3, more)
    };
    G__157493.cljs$lang$maxFixedArity = 4;
    G__157493.cljs$lang$applyTo = function(arglist__157496) {
      var f = cljs.core.first(arglist__157496);
      var arg1 = cljs.core.first(cljs.core.next(arglist__157496));
      var arg2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157496)));
      var arg3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157496))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157496))));
      return G__157493__delegate(f, arg1, arg2, arg3, more)
    };
    G__157493.cljs$lang$arity$variadic = G__157493__delegate;
    return G__157493
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        return partial__5.cljs$lang$arity$variadic(f, arg1, arg2, arg3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$lang$arity$2 = partial__2;
  partial.cljs$lang$arity$3 = partial__3;
  partial.cljs$lang$arity$4 = partial__4;
  partial.cljs$lang$arity$variadic = partial__5.cljs$lang$arity$variadic;
  return partial
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__157497 = null;
      var G__157497__1 = function(a) {
        return f.call(null, a == null ? x : a)
      };
      var G__157497__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b)
      };
      var G__157497__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b, c)
      };
      var G__157497__4 = function() {
        var G__157498__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b, c, ds)
        };
        var G__157498 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157498__delegate.call(this, a, b, c, ds)
        };
        G__157498.cljs$lang$maxFixedArity = 3;
        G__157498.cljs$lang$applyTo = function(arglist__157499) {
          var a = cljs.core.first(arglist__157499);
          var b = cljs.core.first(cljs.core.next(arglist__157499));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157499)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157499)));
          return G__157498__delegate(a, b, c, ds)
        };
        G__157498.cljs$lang$arity$variadic = G__157498__delegate;
        return G__157498
      }();
      G__157497 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__157497__1.call(this, a);
          case 2:
            return G__157497__2.call(this, a, b);
          case 3:
            return G__157497__3.call(this, a, b, c);
          default:
            return G__157497__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__157497.cljs$lang$maxFixedArity = 3;
      G__157497.cljs$lang$applyTo = G__157497__4.cljs$lang$applyTo;
      return G__157497
    }()
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__157500 = null;
      var G__157500__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__157500__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c)
      };
      var G__157500__4 = function() {
        var G__157501__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c, ds)
        };
        var G__157501 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157501__delegate.call(this, a, b, c, ds)
        };
        G__157501.cljs$lang$maxFixedArity = 3;
        G__157501.cljs$lang$applyTo = function(arglist__157502) {
          var a = cljs.core.first(arglist__157502);
          var b = cljs.core.first(cljs.core.next(arglist__157502));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157502)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157502)));
          return G__157501__delegate(a, b, c, ds)
        };
        G__157501.cljs$lang$arity$variadic = G__157501__delegate;
        return G__157501
      }();
      G__157500 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__157500__2.call(this, a, b);
          case 3:
            return G__157500__3.call(this, a, b, c);
          default:
            return G__157500__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__157500.cljs$lang$maxFixedArity = 3;
      G__157500.cljs$lang$applyTo = G__157500__4.cljs$lang$applyTo;
      return G__157500
    }()
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__157503 = null;
      var G__157503__2 = function(a, b) {
        return f.call(null, a == null ? x : a, b == null ? y : b)
      };
      var G__157503__3 = function(a, b, c) {
        return f.call(null, a == null ? x : a, b == null ? y : b, c == null ? z : c)
      };
      var G__157503__4 = function() {
        var G__157504__delegate = function(a, b, c, ds) {
          return cljs.core.apply.call(null, f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds)
        };
        var G__157504 = function(a, b, c, var_args) {
          var ds = null;
          if(goog.isDef(var_args)) {
            ds = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157504__delegate.call(this, a, b, c, ds)
        };
        G__157504.cljs$lang$maxFixedArity = 3;
        G__157504.cljs$lang$applyTo = function(arglist__157505) {
          var a = cljs.core.first(arglist__157505);
          var b = cljs.core.first(cljs.core.next(arglist__157505));
          var c = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157505)));
          var ds = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157505)));
          return G__157504__delegate(a, b, c, ds)
        };
        G__157504.cljs$lang$arity$variadic = G__157504__delegate;
        return G__157504
      }();
      G__157503 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__157503__2.call(this, a, b);
          case 3:
            return G__157503__3.call(this, a, b, c);
          default:
            return G__157503__4.cljs$lang$arity$variadic(a, b, c, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__157503.cljs$lang$maxFixedArity = 3;
      G__157503.cljs$lang$applyTo = G__157503__4.cljs$lang$applyTo;
      return G__157503
    }()
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z)
    }
    throw"Invalid arity: " + arguments.length;
  };
  fnil.cljs$lang$arity$2 = fnil__2;
  fnil.cljs$lang$arity$3 = fnil__3;
  fnil.cljs$lang$arity$4 = fnil__4;
  return fnil
}();
cljs.core.map_indexed = function map_indexed(f, coll) {
  var mapi__157521 = function mapi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____157529 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____157529) {
        var s__157530 = temp__4011__auto____157529;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__157530)) {
          var c__157531 = cljs.core.chunk_first.call(null, s__157530);
          var size__157532 = cljs.core.count.call(null, c__157531);
          var b__157533 = cljs.core.chunk_buffer.call(null, size__157532);
          var n__2564__auto____157534 = size__157532;
          var i__157535 = 0;
          while(true) {
            if(i__157535 < n__2564__auto____157534) {
              cljs.core.chunk_append.call(null, b__157533, f.call(null, idx + i__157535, cljs.core._nth.call(null, c__157531, i__157535)));
              var G__157536 = i__157535 + 1;
              i__157535 = G__157536;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__157533), mapi.call(null, idx + size__157532, cljs.core.chunk_rest.call(null, s__157530)))
        }else {
          return cljs.core.cons.call(null, f.call(null, idx, cljs.core.first.call(null, s__157530)), mapi.call(null, idx + 1, cljs.core.rest.call(null, s__157530)))
        }
      }else {
        return null
      }
    }, null)
  };
  return mapi__157521.call(null, 0, coll)
};
cljs.core.keep = function keep(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4011__auto____157546 = cljs.core.seq.call(null, coll);
    if(temp__4011__auto____157546) {
      var s__157547 = temp__4011__auto____157546;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__157547)) {
        var c__157548 = cljs.core.chunk_first.call(null, s__157547);
        var size__157549 = cljs.core.count.call(null, c__157548);
        var b__157550 = cljs.core.chunk_buffer.call(null, size__157549);
        var n__2564__auto____157551 = size__157549;
        var i__157552 = 0;
        while(true) {
          if(i__157552 < n__2564__auto____157551) {
            var x__157553 = f.call(null, cljs.core._nth.call(null, c__157548, i__157552));
            if(x__157553 == null) {
            }else {
              cljs.core.chunk_append.call(null, b__157550, x__157553)
            }
            var G__157555 = i__157552 + 1;
            i__157552 = G__157555;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__157550), keep.call(null, f, cljs.core.chunk_rest.call(null, s__157547)))
      }else {
        var x__157554 = f.call(null, cljs.core.first.call(null, s__157547));
        if(x__157554 == null) {
          return keep.call(null, f, cljs.core.rest.call(null, s__157547))
        }else {
          return cljs.core.cons.call(null, x__157554, keep.call(null, f, cljs.core.rest.call(null, s__157547)))
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.keep_indexed = function keep_indexed(f, coll) {
  var keepi__157581 = function keepi(idx, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____157591 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____157591) {
        var s__157592 = temp__4011__auto____157591;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__157592)) {
          var c__157593 = cljs.core.chunk_first.call(null, s__157592);
          var size__157594 = cljs.core.count.call(null, c__157593);
          var b__157595 = cljs.core.chunk_buffer.call(null, size__157594);
          var n__2564__auto____157596 = size__157594;
          var i__157597 = 0;
          while(true) {
            if(i__157597 < n__2564__auto____157596) {
              var x__157598 = f.call(null, idx + i__157597, cljs.core._nth.call(null, c__157593, i__157597));
              if(x__157598 == null) {
              }else {
                cljs.core.chunk_append.call(null, b__157595, x__157598)
              }
              var G__157600 = i__157597 + 1;
              i__157597 = G__157600;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__157595), keepi.call(null, idx + size__157594, cljs.core.chunk_rest.call(null, s__157592)))
        }else {
          var x__157599 = f.call(null, idx, cljs.core.first.call(null, s__157592));
          if(x__157599 == null) {
            return keepi.call(null, idx + 1, cljs.core.rest.call(null, s__157592))
          }else {
            return cljs.core.cons.call(null, x__157599, keepi.call(null, idx + 1, cljs.core.rest.call(null, s__157592)))
          }
        }
      }else {
        return null
      }
    }, null)
  };
  return keepi__157581.call(null, 0, coll)
};
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$.call(null, p.call(null, x))
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157686 = p.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157686)) {
            return p.call(null, y)
          }else {
            return and__3860__auto____157686
          }
        }())
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157687 = p.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157687)) {
            var and__3860__auto____157688 = p.call(null, y);
            if(cljs.core.truth_(and__3860__auto____157688)) {
              return p.call(null, z)
            }else {
              return and__3860__auto____157688
            }
          }else {
            return and__3860__auto____157687
          }
        }())
      };
      var ep1__4 = function() {
        var G__157757__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3860__auto____157689 = ep1.call(null, x, y, z);
            if(cljs.core.truth_(and__3860__auto____157689)) {
              return cljs.core.every_QMARK_.call(null, p, args)
            }else {
              return and__3860__auto____157689
            }
          }())
        };
        var G__157757 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157757__delegate.call(this, x, y, z, args)
        };
        G__157757.cljs$lang$maxFixedArity = 3;
        G__157757.cljs$lang$applyTo = function(arglist__157758) {
          var x = cljs.core.first(arglist__157758);
          var y = cljs.core.first(cljs.core.next(arglist__157758));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157758)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157758)));
          return G__157757__delegate(x, y, z, args)
        };
        G__157757.cljs$lang$arity$variadic = G__157757__delegate;
        return G__157757
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            return ep1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$lang$arity$0 = ep1__0;
      ep1.cljs$lang$arity$1 = ep1__1;
      ep1.cljs$lang$arity$2 = ep1__2;
      ep1.cljs$lang$arity$3 = ep1__3;
      ep1.cljs$lang$arity$variadic = ep1__4.cljs$lang$arity$variadic;
      return ep1
    }()
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157701 = p1.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157701)) {
            return p2.call(null, x)
          }else {
            return and__3860__auto____157701
          }
        }())
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157702 = p1.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157702)) {
            var and__3860__auto____157703 = p1.call(null, y);
            if(cljs.core.truth_(and__3860__auto____157703)) {
              var and__3860__auto____157704 = p2.call(null, x);
              if(cljs.core.truth_(and__3860__auto____157704)) {
                return p2.call(null, y)
              }else {
                return and__3860__auto____157704
              }
            }else {
              return and__3860__auto____157703
            }
          }else {
            return and__3860__auto____157702
          }
        }())
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157705 = p1.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157705)) {
            var and__3860__auto____157706 = p1.call(null, y);
            if(cljs.core.truth_(and__3860__auto____157706)) {
              var and__3860__auto____157707 = p1.call(null, z);
              if(cljs.core.truth_(and__3860__auto____157707)) {
                var and__3860__auto____157708 = p2.call(null, x);
                if(cljs.core.truth_(and__3860__auto____157708)) {
                  var and__3860__auto____157709 = p2.call(null, y);
                  if(cljs.core.truth_(and__3860__auto____157709)) {
                    return p2.call(null, z)
                  }else {
                    return and__3860__auto____157709
                  }
                }else {
                  return and__3860__auto____157708
                }
              }else {
                return and__3860__auto____157707
              }
            }else {
              return and__3860__auto____157706
            }
          }else {
            return and__3860__auto____157705
          }
        }())
      };
      var ep2__4 = function() {
        var G__157759__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3860__auto____157710 = ep2.call(null, x, y, z);
            if(cljs.core.truth_(and__3860__auto____157710)) {
              return cljs.core.every_QMARK_.call(null, function(p1__157556_SHARP_) {
                var and__3860__auto____157711 = p1.call(null, p1__157556_SHARP_);
                if(cljs.core.truth_(and__3860__auto____157711)) {
                  return p2.call(null, p1__157556_SHARP_)
                }else {
                  return and__3860__auto____157711
                }
              }, args)
            }else {
              return and__3860__auto____157710
            }
          }())
        };
        var G__157759 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157759__delegate.call(this, x, y, z, args)
        };
        G__157759.cljs$lang$maxFixedArity = 3;
        G__157759.cljs$lang$applyTo = function(arglist__157760) {
          var x = cljs.core.first(arglist__157760);
          var y = cljs.core.first(cljs.core.next(arglist__157760));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157760)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157760)));
          return G__157759__delegate(x, y, z, args)
        };
        G__157759.cljs$lang$arity$variadic = G__157759__delegate;
        return G__157759
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            return ep2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$lang$arity$0 = ep2__0;
      ep2.cljs$lang$arity$1 = ep2__1;
      ep2.cljs$lang$arity$2 = ep2__2;
      ep2.cljs$lang$arity$3 = ep2__3;
      ep2.cljs$lang$arity$variadic = ep2__4.cljs$lang$arity$variadic;
      return ep2
    }()
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157730 = p1.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157730)) {
            var and__3860__auto____157731 = p2.call(null, x);
            if(cljs.core.truth_(and__3860__auto____157731)) {
              return p3.call(null, x)
            }else {
              return and__3860__auto____157731
            }
          }else {
            return and__3860__auto____157730
          }
        }())
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157732 = p1.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157732)) {
            var and__3860__auto____157733 = p2.call(null, x);
            if(cljs.core.truth_(and__3860__auto____157733)) {
              var and__3860__auto____157734 = p3.call(null, x);
              if(cljs.core.truth_(and__3860__auto____157734)) {
                var and__3860__auto____157735 = p1.call(null, y);
                if(cljs.core.truth_(and__3860__auto____157735)) {
                  var and__3860__auto____157736 = p2.call(null, y);
                  if(cljs.core.truth_(and__3860__auto____157736)) {
                    return p3.call(null, y)
                  }else {
                    return and__3860__auto____157736
                  }
                }else {
                  return and__3860__auto____157735
                }
              }else {
                return and__3860__auto____157734
              }
            }else {
              return and__3860__auto____157733
            }
          }else {
            return and__3860__auto____157732
          }
        }())
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$.call(null, function() {
          var and__3860__auto____157737 = p1.call(null, x);
          if(cljs.core.truth_(and__3860__auto____157737)) {
            var and__3860__auto____157738 = p2.call(null, x);
            if(cljs.core.truth_(and__3860__auto____157738)) {
              var and__3860__auto____157739 = p3.call(null, x);
              if(cljs.core.truth_(and__3860__auto____157739)) {
                var and__3860__auto____157740 = p1.call(null, y);
                if(cljs.core.truth_(and__3860__auto____157740)) {
                  var and__3860__auto____157741 = p2.call(null, y);
                  if(cljs.core.truth_(and__3860__auto____157741)) {
                    var and__3860__auto____157742 = p3.call(null, y);
                    if(cljs.core.truth_(and__3860__auto____157742)) {
                      var and__3860__auto____157743 = p1.call(null, z);
                      if(cljs.core.truth_(and__3860__auto____157743)) {
                        var and__3860__auto____157744 = p2.call(null, z);
                        if(cljs.core.truth_(and__3860__auto____157744)) {
                          return p3.call(null, z)
                        }else {
                          return and__3860__auto____157744
                        }
                      }else {
                        return and__3860__auto____157743
                      }
                    }else {
                      return and__3860__auto____157742
                    }
                  }else {
                    return and__3860__auto____157741
                  }
                }else {
                  return and__3860__auto____157740
                }
              }else {
                return and__3860__auto____157739
              }
            }else {
              return and__3860__auto____157738
            }
          }else {
            return and__3860__auto____157737
          }
        }())
      };
      var ep3__4 = function() {
        var G__157761__delegate = function(x, y, z, args) {
          return cljs.core.boolean$.call(null, function() {
            var and__3860__auto____157745 = ep3.call(null, x, y, z);
            if(cljs.core.truth_(and__3860__auto____157745)) {
              return cljs.core.every_QMARK_.call(null, function(p1__157557_SHARP_) {
                var and__3860__auto____157746 = p1.call(null, p1__157557_SHARP_);
                if(cljs.core.truth_(and__3860__auto____157746)) {
                  var and__3860__auto____157747 = p2.call(null, p1__157557_SHARP_);
                  if(cljs.core.truth_(and__3860__auto____157747)) {
                    return p3.call(null, p1__157557_SHARP_)
                  }else {
                    return and__3860__auto____157747
                  }
                }else {
                  return and__3860__auto____157746
                }
              }, args)
            }else {
              return and__3860__auto____157745
            }
          }())
        };
        var G__157761 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157761__delegate.call(this, x, y, z, args)
        };
        G__157761.cljs$lang$maxFixedArity = 3;
        G__157761.cljs$lang$applyTo = function(arglist__157762) {
          var x = cljs.core.first(arglist__157762);
          var y = cljs.core.first(cljs.core.next(arglist__157762));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157762)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157762)));
          return G__157761__delegate(x, y, z, args)
        };
        G__157761.cljs$lang$arity$variadic = G__157761__delegate;
        return G__157761
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            return ep3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$lang$arity$0 = ep3__0;
      ep3.cljs$lang$arity$1 = ep3__1;
      ep3.cljs$lang$arity$2 = ep3__2;
      ep3.cljs$lang$arity$3 = ep3__3;
      ep3.cljs$lang$arity$variadic = ep3__4.cljs$lang$arity$variadic;
      return ep3
    }()
  };
  var every_pred__4 = function() {
    var G__157763__delegate = function(p1, p2, p3, ps) {
      var ps__157748 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var epn = null;
        var epn__0 = function() {
          return true
        };
        var epn__1 = function(x) {
          return cljs.core.every_QMARK_.call(null, function(p1__157558_SHARP_) {
            return p1__157558_SHARP_.call(null, x)
          }, ps__157748)
        };
        var epn__2 = function(x, y) {
          return cljs.core.every_QMARK_.call(null, function(p1__157559_SHARP_) {
            var and__3860__auto____157753 = p1__157559_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3860__auto____157753)) {
              return p1__157559_SHARP_.call(null, y)
            }else {
              return and__3860__auto____157753
            }
          }, ps__157748)
        };
        var epn__3 = function(x, y, z) {
          return cljs.core.every_QMARK_.call(null, function(p1__157560_SHARP_) {
            var and__3860__auto____157754 = p1__157560_SHARP_.call(null, x);
            if(cljs.core.truth_(and__3860__auto____157754)) {
              var and__3860__auto____157755 = p1__157560_SHARP_.call(null, y);
              if(cljs.core.truth_(and__3860__auto____157755)) {
                return p1__157560_SHARP_.call(null, z)
              }else {
                return and__3860__auto____157755
              }
            }else {
              return and__3860__auto____157754
            }
          }, ps__157748)
        };
        var epn__4 = function() {
          var G__157764__delegate = function(x, y, z, args) {
            return cljs.core.boolean$.call(null, function() {
              var and__3860__auto____157756 = epn.call(null, x, y, z);
              if(cljs.core.truth_(and__3860__auto____157756)) {
                return cljs.core.every_QMARK_.call(null, function(p1__157561_SHARP_) {
                  return cljs.core.every_QMARK_.call(null, p1__157561_SHARP_, args)
                }, ps__157748)
              }else {
                return and__3860__auto____157756
              }
            }())
          };
          var G__157764 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__157764__delegate.call(this, x, y, z, args)
          };
          G__157764.cljs$lang$maxFixedArity = 3;
          G__157764.cljs$lang$applyTo = function(arglist__157765) {
            var x = cljs.core.first(arglist__157765);
            var y = cljs.core.first(cljs.core.next(arglist__157765));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157765)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157765)));
            return G__157764__delegate(x, y, z, args)
          };
          G__157764.cljs$lang$arity$variadic = G__157764__delegate;
          return G__157764
        }();
        epn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return epn__0.call(this);
            case 1:
              return epn__1.call(this, x);
            case 2:
              return epn__2.call(this, x, y);
            case 3:
              return epn__3.call(this, x, y, z);
            default:
              return epn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        epn.cljs$lang$maxFixedArity = 3;
        epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
        epn.cljs$lang$arity$0 = epn__0;
        epn.cljs$lang$arity$1 = epn__1;
        epn.cljs$lang$arity$2 = epn__2;
        epn.cljs$lang$arity$3 = epn__3;
        epn.cljs$lang$arity$variadic = epn__4.cljs$lang$arity$variadic;
        return epn
      }()
    };
    var G__157763 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__157763__delegate.call(this, p1, p2, p3, ps)
    };
    G__157763.cljs$lang$maxFixedArity = 3;
    G__157763.cljs$lang$applyTo = function(arglist__157766) {
      var p1 = cljs.core.first(arglist__157766);
      var p2 = cljs.core.first(cljs.core.next(arglist__157766));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157766)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157766)));
      return G__157763__delegate(p1, p2, p3, ps)
    };
    G__157763.cljs$lang$arity$variadic = G__157763__delegate;
    return G__157763
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        return every_pred__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$lang$arity$1 = every_pred__1;
  every_pred.cljs$lang$arity$2 = every_pred__2;
  every_pred.cljs$lang$arity$3 = every_pred__3;
  every_pred.cljs$lang$arity$variadic = every_pred__4.cljs$lang$arity$variadic;
  return every_pred
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null
      };
      var sp1__1 = function(x) {
        return p.call(null, x)
      };
      var sp1__2 = function(x, y) {
        var or__3862__auto____157847 = p.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157847)) {
          return or__3862__auto____157847
        }else {
          return p.call(null, y)
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3862__auto____157848 = p.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157848)) {
          return or__3862__auto____157848
        }else {
          var or__3862__auto____157849 = p.call(null, y);
          if(cljs.core.truth_(or__3862__auto____157849)) {
            return or__3862__auto____157849
          }else {
            return p.call(null, z)
          }
        }
      };
      var sp1__4 = function() {
        var G__157918__delegate = function(x, y, z, args) {
          var or__3862__auto____157850 = sp1.call(null, x, y, z);
          if(cljs.core.truth_(or__3862__auto____157850)) {
            return or__3862__auto____157850
          }else {
            return cljs.core.some.call(null, p, args)
          }
        };
        var G__157918 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157918__delegate.call(this, x, y, z, args)
        };
        G__157918.cljs$lang$maxFixedArity = 3;
        G__157918.cljs$lang$applyTo = function(arglist__157919) {
          var x = cljs.core.first(arglist__157919);
          var y = cljs.core.first(cljs.core.next(arglist__157919));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157919)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157919)));
          return G__157918__delegate(x, y, z, args)
        };
        G__157918.cljs$lang$arity$variadic = G__157918__delegate;
        return G__157918
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            return sp1__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$lang$arity$0 = sp1__0;
      sp1.cljs$lang$arity$1 = sp1__1;
      sp1.cljs$lang$arity$2 = sp1__2;
      sp1.cljs$lang$arity$3 = sp1__3;
      sp1.cljs$lang$arity$variadic = sp1__4.cljs$lang$arity$variadic;
      return sp1
    }()
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null
      };
      var sp2__1 = function(x) {
        var or__3862__auto____157862 = p1.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157862)) {
          return or__3862__auto____157862
        }else {
          return p2.call(null, x)
        }
      };
      var sp2__2 = function(x, y) {
        var or__3862__auto____157863 = p1.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157863)) {
          return or__3862__auto____157863
        }else {
          var or__3862__auto____157864 = p1.call(null, y);
          if(cljs.core.truth_(or__3862__auto____157864)) {
            return or__3862__auto____157864
          }else {
            var or__3862__auto____157865 = p2.call(null, x);
            if(cljs.core.truth_(or__3862__auto____157865)) {
              return or__3862__auto____157865
            }else {
              return p2.call(null, y)
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3862__auto____157866 = p1.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157866)) {
          return or__3862__auto____157866
        }else {
          var or__3862__auto____157867 = p1.call(null, y);
          if(cljs.core.truth_(or__3862__auto____157867)) {
            return or__3862__auto____157867
          }else {
            var or__3862__auto____157868 = p1.call(null, z);
            if(cljs.core.truth_(or__3862__auto____157868)) {
              return or__3862__auto____157868
            }else {
              var or__3862__auto____157869 = p2.call(null, x);
              if(cljs.core.truth_(or__3862__auto____157869)) {
                return or__3862__auto____157869
              }else {
                var or__3862__auto____157870 = p2.call(null, y);
                if(cljs.core.truth_(or__3862__auto____157870)) {
                  return or__3862__auto____157870
                }else {
                  return p2.call(null, z)
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__157920__delegate = function(x, y, z, args) {
          var or__3862__auto____157871 = sp2.call(null, x, y, z);
          if(cljs.core.truth_(or__3862__auto____157871)) {
            return or__3862__auto____157871
          }else {
            return cljs.core.some.call(null, function(p1__157601_SHARP_) {
              var or__3862__auto____157872 = p1.call(null, p1__157601_SHARP_);
              if(cljs.core.truth_(or__3862__auto____157872)) {
                return or__3862__auto____157872
              }else {
                return p2.call(null, p1__157601_SHARP_)
              }
            }, args)
          }
        };
        var G__157920 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157920__delegate.call(this, x, y, z, args)
        };
        G__157920.cljs$lang$maxFixedArity = 3;
        G__157920.cljs$lang$applyTo = function(arglist__157921) {
          var x = cljs.core.first(arglist__157921);
          var y = cljs.core.first(cljs.core.next(arglist__157921));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157921)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157921)));
          return G__157920__delegate(x, y, z, args)
        };
        G__157920.cljs$lang$arity$variadic = G__157920__delegate;
        return G__157920
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            return sp2__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$lang$arity$0 = sp2__0;
      sp2.cljs$lang$arity$1 = sp2__1;
      sp2.cljs$lang$arity$2 = sp2__2;
      sp2.cljs$lang$arity$3 = sp2__3;
      sp2.cljs$lang$arity$variadic = sp2__4.cljs$lang$arity$variadic;
      return sp2
    }()
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null
      };
      var sp3__1 = function(x) {
        var or__3862__auto____157891 = p1.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157891)) {
          return or__3862__auto____157891
        }else {
          var or__3862__auto____157892 = p2.call(null, x);
          if(cljs.core.truth_(or__3862__auto____157892)) {
            return or__3862__auto____157892
          }else {
            return p3.call(null, x)
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3862__auto____157893 = p1.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157893)) {
          return or__3862__auto____157893
        }else {
          var or__3862__auto____157894 = p2.call(null, x);
          if(cljs.core.truth_(or__3862__auto____157894)) {
            return or__3862__auto____157894
          }else {
            var or__3862__auto____157895 = p3.call(null, x);
            if(cljs.core.truth_(or__3862__auto____157895)) {
              return or__3862__auto____157895
            }else {
              var or__3862__auto____157896 = p1.call(null, y);
              if(cljs.core.truth_(or__3862__auto____157896)) {
                return or__3862__auto____157896
              }else {
                var or__3862__auto____157897 = p2.call(null, y);
                if(cljs.core.truth_(or__3862__auto____157897)) {
                  return or__3862__auto____157897
                }else {
                  return p3.call(null, y)
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3862__auto____157898 = p1.call(null, x);
        if(cljs.core.truth_(or__3862__auto____157898)) {
          return or__3862__auto____157898
        }else {
          var or__3862__auto____157899 = p2.call(null, x);
          if(cljs.core.truth_(or__3862__auto____157899)) {
            return or__3862__auto____157899
          }else {
            var or__3862__auto____157900 = p3.call(null, x);
            if(cljs.core.truth_(or__3862__auto____157900)) {
              return or__3862__auto____157900
            }else {
              var or__3862__auto____157901 = p1.call(null, y);
              if(cljs.core.truth_(or__3862__auto____157901)) {
                return or__3862__auto____157901
              }else {
                var or__3862__auto____157902 = p2.call(null, y);
                if(cljs.core.truth_(or__3862__auto____157902)) {
                  return or__3862__auto____157902
                }else {
                  var or__3862__auto____157903 = p3.call(null, y);
                  if(cljs.core.truth_(or__3862__auto____157903)) {
                    return or__3862__auto____157903
                  }else {
                    var or__3862__auto____157904 = p1.call(null, z);
                    if(cljs.core.truth_(or__3862__auto____157904)) {
                      return or__3862__auto____157904
                    }else {
                      var or__3862__auto____157905 = p2.call(null, z);
                      if(cljs.core.truth_(or__3862__auto____157905)) {
                        return or__3862__auto____157905
                      }else {
                        return p3.call(null, z)
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__157922__delegate = function(x, y, z, args) {
          var or__3862__auto____157906 = sp3.call(null, x, y, z);
          if(cljs.core.truth_(or__3862__auto____157906)) {
            return or__3862__auto____157906
          }else {
            return cljs.core.some.call(null, function(p1__157602_SHARP_) {
              var or__3862__auto____157907 = p1.call(null, p1__157602_SHARP_);
              if(cljs.core.truth_(or__3862__auto____157907)) {
                return or__3862__auto____157907
              }else {
                var or__3862__auto____157908 = p2.call(null, p1__157602_SHARP_);
                if(cljs.core.truth_(or__3862__auto____157908)) {
                  return or__3862__auto____157908
                }else {
                  return p3.call(null, p1__157602_SHARP_)
                }
              }
            }, args)
          }
        };
        var G__157922 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__157922__delegate.call(this, x, y, z, args)
        };
        G__157922.cljs$lang$maxFixedArity = 3;
        G__157922.cljs$lang$applyTo = function(arglist__157923) {
          var x = cljs.core.first(arglist__157923);
          var y = cljs.core.first(cljs.core.next(arglist__157923));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157923)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157923)));
          return G__157922__delegate(x, y, z, args)
        };
        G__157922.cljs$lang$arity$variadic = G__157922__delegate;
        return G__157922
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            return sp3__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$lang$arity$0 = sp3__0;
      sp3.cljs$lang$arity$1 = sp3__1;
      sp3.cljs$lang$arity$2 = sp3__2;
      sp3.cljs$lang$arity$3 = sp3__3;
      sp3.cljs$lang$arity$variadic = sp3__4.cljs$lang$arity$variadic;
      return sp3
    }()
  };
  var some_fn__4 = function() {
    var G__157924__delegate = function(p1, p2, p3, ps) {
      var ps__157909 = cljs.core.list_STAR_.call(null, p1, p2, p3, ps);
      return function() {
        var spn = null;
        var spn__0 = function() {
          return null
        };
        var spn__1 = function(x) {
          return cljs.core.some.call(null, function(p1__157603_SHARP_) {
            return p1__157603_SHARP_.call(null, x)
          }, ps__157909)
        };
        var spn__2 = function(x, y) {
          return cljs.core.some.call(null, function(p1__157604_SHARP_) {
            var or__3862__auto____157914 = p1__157604_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3862__auto____157914)) {
              return or__3862__auto____157914
            }else {
              return p1__157604_SHARP_.call(null, y)
            }
          }, ps__157909)
        };
        var spn__3 = function(x, y, z) {
          return cljs.core.some.call(null, function(p1__157605_SHARP_) {
            var or__3862__auto____157915 = p1__157605_SHARP_.call(null, x);
            if(cljs.core.truth_(or__3862__auto____157915)) {
              return or__3862__auto____157915
            }else {
              var or__3862__auto____157916 = p1__157605_SHARP_.call(null, y);
              if(cljs.core.truth_(or__3862__auto____157916)) {
                return or__3862__auto____157916
              }else {
                return p1__157605_SHARP_.call(null, z)
              }
            }
          }, ps__157909)
        };
        var spn__4 = function() {
          var G__157925__delegate = function(x, y, z, args) {
            var or__3862__auto____157917 = spn.call(null, x, y, z);
            if(cljs.core.truth_(or__3862__auto____157917)) {
              return or__3862__auto____157917
            }else {
              return cljs.core.some.call(null, function(p1__157606_SHARP_) {
                return cljs.core.some.call(null, p1__157606_SHARP_, args)
              }, ps__157909)
            }
          };
          var G__157925 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__157925__delegate.call(this, x, y, z, args)
          };
          G__157925.cljs$lang$maxFixedArity = 3;
          G__157925.cljs$lang$applyTo = function(arglist__157926) {
            var x = cljs.core.first(arglist__157926);
            var y = cljs.core.first(cljs.core.next(arglist__157926));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157926)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157926)));
            return G__157925__delegate(x, y, z, args)
          };
          G__157925.cljs$lang$arity$variadic = G__157925__delegate;
          return G__157925
        }();
        spn = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return spn__0.call(this);
            case 1:
              return spn__1.call(this, x);
            case 2:
              return spn__2.call(this, x, y);
            case 3:
              return spn__3.call(this, x, y, z);
            default:
              return spn__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        spn.cljs$lang$maxFixedArity = 3;
        spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
        spn.cljs$lang$arity$0 = spn__0;
        spn.cljs$lang$arity$1 = spn__1;
        spn.cljs$lang$arity$2 = spn__2;
        spn.cljs$lang$arity$3 = spn__3;
        spn.cljs$lang$arity$variadic = spn__4.cljs$lang$arity$variadic;
        return spn
      }()
    };
    var G__157924 = function(p1, p2, p3, var_args) {
      var ps = null;
      if(goog.isDef(var_args)) {
        ps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__157924__delegate.call(this, p1, p2, p3, ps)
    };
    G__157924.cljs$lang$maxFixedArity = 3;
    G__157924.cljs$lang$applyTo = function(arglist__157927) {
      var p1 = cljs.core.first(arglist__157927);
      var p2 = cljs.core.first(cljs.core.next(arglist__157927));
      var p3 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157927)));
      var ps = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__157927)));
      return G__157924__delegate(p1, p2, p3, ps)
    };
    G__157924.cljs$lang$arity$variadic = G__157924__delegate;
    return G__157924
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        return some_fn__4.cljs$lang$arity$variadic(p1, p2, p3, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$lang$arity$1 = some_fn__1;
  some_fn.cljs$lang$arity$2 = some_fn__2;
  some_fn.cljs$lang$arity$3 = some_fn__3;
  some_fn.cljs$lang$arity$variadic = some_fn__4.cljs$lang$arity$variadic;
  return some_fn
}();
cljs.core.map = function() {
  var map = null;
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____157946 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____157946) {
        var s__157947 = temp__4011__auto____157946;
        if(cljs.core.chunked_seq_QMARK_.call(null, s__157947)) {
          var c__157948 = cljs.core.chunk_first.call(null, s__157947);
          var size__157949 = cljs.core.count.call(null, c__157948);
          var b__157950 = cljs.core.chunk_buffer.call(null, size__157949);
          var n__2564__auto____157951 = size__157949;
          var i__157952 = 0;
          while(true) {
            if(i__157952 < n__2564__auto____157951) {
              cljs.core.chunk_append.call(null, b__157950, f.call(null, cljs.core._nth.call(null, c__157948, i__157952)));
              var G__157964 = i__157952 + 1;
              i__157952 = G__157964;
              continue
            }else {
            }
            break
          }
          return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__157950), map.call(null, f, cljs.core.chunk_rest.call(null, s__157947)))
        }else {
          return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s__157947)), map.call(null, f, cljs.core.rest.call(null, s__157947)))
        }
      }else {
        return null
      }
    }, null)
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__157953 = cljs.core.seq.call(null, c1);
      var s2__157954 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3860__auto____157955 = s1__157953;
        if(and__3860__auto____157955) {
          return s2__157954
        }else {
          return and__3860__auto____157955
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__157953), cljs.core.first.call(null, s2__157954)), map.call(null, f, cljs.core.rest.call(null, s1__157953), cljs.core.rest.call(null, s2__157954)))
      }else {
        return null
      }
    }, null)
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__157956 = cljs.core.seq.call(null, c1);
      var s2__157957 = cljs.core.seq.call(null, c2);
      var s3__157958 = cljs.core.seq.call(null, c3);
      if(function() {
        var and__3860__auto____157959 = s1__157956;
        if(and__3860__auto____157959) {
          var and__3860__auto____157960 = s2__157957;
          if(and__3860__auto____157960) {
            return s3__157958
          }else {
            return and__3860__auto____157960
          }
        }else {
          return and__3860__auto____157959
        }
      }()) {
        return cljs.core.cons.call(null, f.call(null, cljs.core.first.call(null, s1__157956), cljs.core.first.call(null, s2__157957), cljs.core.first.call(null, s3__157958)), map.call(null, f, cljs.core.rest.call(null, s1__157956), cljs.core.rest.call(null, s2__157957), cljs.core.rest.call(null, s3__157958)))
      }else {
        return null
      }
    }, null)
  };
  var map__5 = function() {
    var G__157965__delegate = function(f, c1, c2, c3, colls) {
      var step__157963 = function step(cs) {
        return new cljs.core.LazySeq(null, false, function() {
          var ss__157962 = map.call(null, cljs.core.seq, cs);
          if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__157962)) {
            return cljs.core.cons.call(null, map.call(null, cljs.core.first, ss__157962), step.call(null, map.call(null, cljs.core.rest, ss__157962)))
          }else {
            return null
          }
        }, null)
      };
      return map.call(null, function(p1__157767_SHARP_) {
        return cljs.core.apply.call(null, f, p1__157767_SHARP_)
      }, step__157963.call(null, cljs.core.conj.call(null, colls, c3, c2, c1)))
    };
    var G__157965 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__157965__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__157965.cljs$lang$maxFixedArity = 4;
    G__157965.cljs$lang$applyTo = function(arglist__157966) {
      var f = cljs.core.first(arglist__157966);
      var c1 = cljs.core.first(cljs.core.next(arglist__157966));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__157966)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157966))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__157966))));
      return G__157965__delegate(f, c1, c2, c3, colls)
    };
    G__157965.cljs$lang$arity$variadic = G__157965__delegate;
    return G__157965
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        return map__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$lang$arity$2 = map__2;
  map.cljs$lang$arity$3 = map__3;
  map.cljs$lang$arity$4 = map__4;
  map.cljs$lang$arity$variadic = map__5.cljs$lang$arity$variadic;
  return map
}();
cljs.core.take = function take(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    if(n > 0) {
      var temp__4011__auto____157969 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____157969) {
        var s__157970 = temp__4011__auto____157969;
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__157970), take.call(null, n - 1, cljs.core.rest.call(null, s__157970)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.drop = function drop(n, coll) {
  var step__157976 = function(n, coll) {
    while(true) {
      var s__157974 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3860__auto____157975 = n > 0;
        if(and__3860__auto____157975) {
          return s__157974
        }else {
          return and__3860__auto____157975
        }
      }())) {
        var G__157977 = n - 1;
        var G__157978 = cljs.core.rest.call(null, s__157974);
        n = G__157977;
        coll = G__157978;
        continue
      }else {
        return s__157974
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__157976.call(null, n, coll)
  }, null)
};
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.call(null, 1, s)
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.call(null, function(x, _) {
      return x
    }, s, cljs.core.drop.call(null, n, s))
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  drop_last.cljs$lang$arity$1 = drop_last__1;
  drop_last.cljs$lang$arity$2 = drop_last__2;
  return drop_last
}();
cljs.core.take_last = function take_last(n, coll) {
  var s__157981 = cljs.core.seq.call(null, coll);
  var lead__157982 = cljs.core.seq.call(null, cljs.core.drop.call(null, n, coll));
  while(true) {
    if(lead__157982) {
      var G__157983 = cljs.core.next.call(null, s__157981);
      var G__157984 = cljs.core.next.call(null, lead__157982);
      s__157981 = G__157983;
      lead__157982 = G__157984;
      continue
    }else {
      return s__157981
    }
    break
  }
};
cljs.core.drop_while = function drop_while(pred, coll) {
  var step__157990 = function(pred, coll) {
    while(true) {
      var s__157988 = cljs.core.seq.call(null, coll);
      if(cljs.core.truth_(function() {
        var and__3860__auto____157989 = s__157988;
        if(and__3860__auto____157989) {
          return pred.call(null, cljs.core.first.call(null, s__157988))
        }else {
          return and__3860__auto____157989
        }
      }())) {
        var G__157991 = pred;
        var G__157992 = cljs.core.rest.call(null, s__157988);
        pred = G__157991;
        coll = G__157992;
        continue
      }else {
        return s__157988
      }
      break
    }
  };
  return new cljs.core.LazySeq(null, false, function() {
    return step__157990.call(null, pred, coll)
  }, null)
};
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4011__auto____157995 = cljs.core.seq.call(null, coll);
    if(temp__4011__auto____157995) {
      var s__157996 = temp__4011__auto____157995;
      return cljs.core.concat.call(null, s__157996, cycle.call(null, s__157996))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_at = function split_at(n, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take.call(null, n, coll), cljs.core.drop.call(null, n, coll)], true)
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, x, repeat.call(null, x))
    }, null)
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.call(null, n, repeat.call(null, x))
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeat.cljs$lang$arity$1 = repeat__1;
  repeat.cljs$lang$arity$2 = repeat__2;
  return repeat
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.call(null, n, cljs.core.repeat.call(null, x))
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, f.call(null), repeatedly.call(null, f))
    }, null)
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.call(null, n, repeatedly.call(null, f))
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f)
    }
    throw"Invalid arity: " + arguments.length;
  };
  repeatedly.cljs$lang$arity$1 = repeatedly__1;
  repeatedly.cljs$lang$arity$2 = repeatedly__2;
  return repeatedly
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons.call(null, x, new cljs.core.LazySeq(null, false, function() {
    return iterate.call(null, f, f.call(null, x))
  }, null))
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, false, function() {
      var s1__158001 = cljs.core.seq.call(null, c1);
      var s2__158002 = cljs.core.seq.call(null, c2);
      if(function() {
        var and__3860__auto____158003 = s1__158001;
        if(and__3860__auto____158003) {
          return s2__158002
        }else {
          return and__3860__auto____158003
        }
      }()) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s1__158001), cljs.core.cons.call(null, cljs.core.first.call(null, s2__158002), interleave.call(null, cljs.core.rest.call(null, s1__158001), cljs.core.rest.call(null, s2__158002))))
      }else {
        return null
      }
    }, null)
  };
  var interleave__3 = function() {
    var G__158005__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, false, function() {
        var ss__158004 = cljs.core.map.call(null, cljs.core.seq, cljs.core.conj.call(null, colls, c2, c1));
        if(cljs.core.every_QMARK_.call(null, cljs.core.identity, ss__158004)) {
          return cljs.core.concat.call(null, cljs.core.map.call(null, cljs.core.first, ss__158004), cljs.core.apply.call(null, interleave, cljs.core.map.call(null, cljs.core.rest, ss__158004)))
        }else {
          return null
        }
      }, null)
    };
    var G__158005 = function(c1, c2, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__158005__delegate.call(this, c1, c2, colls)
    };
    G__158005.cljs$lang$maxFixedArity = 2;
    G__158005.cljs$lang$applyTo = function(arglist__158006) {
      var c1 = cljs.core.first(arglist__158006);
      var c2 = cljs.core.first(cljs.core.next(arglist__158006));
      var colls = cljs.core.rest(cljs.core.next(arglist__158006));
      return G__158005__delegate(c1, c2, colls)
    };
    G__158005.cljs$lang$arity$variadic = G__158005__delegate;
    return G__158005
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        return interleave__3.cljs$lang$arity$variadic(c1, c2, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$lang$arity$2 = interleave__2;
  interleave.cljs$lang$arity$variadic = interleave__3.cljs$lang$arity$variadic;
  return interleave
}();
cljs.core.interpose = function interpose(sep, coll) {
  return cljs.core.drop.call(null, 1, cljs.core.interleave.call(null, cljs.core.repeat.call(null, sep), coll))
};
cljs.core.flatten1 = function flatten1(colls) {
  var cat__158016 = function cat(coll, colls) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4009__auto____158014 = cljs.core.seq.call(null, coll);
      if(temp__4009__auto____158014) {
        var coll__158015 = temp__4009__auto____158014;
        return cljs.core.cons.call(null, cljs.core.first.call(null, coll__158015), cat.call(null, cljs.core.rest.call(null, coll__158015), colls))
      }else {
        if(cljs.core.seq.call(null, colls)) {
          return cat.call(null, cljs.core.first.call(null, colls), cljs.core.rest.call(null, colls))
        }else {
          return null
        }
      }
    }, null)
  };
  return cat__158016.call(null, null, colls)
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__2 = function(f, coll) {
    return cljs.core.flatten1.call(null, cljs.core.map.call(null, f, coll))
  };
  var mapcat__3 = function() {
    var G__158017__delegate = function(f, coll, colls) {
      return cljs.core.flatten1.call(null, cljs.core.apply.call(null, cljs.core.map, f, coll, colls))
    };
    var G__158017 = function(f, coll, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
      }
      return G__158017__delegate.call(this, f, coll, colls)
    };
    G__158017.cljs$lang$maxFixedArity = 2;
    G__158017.cljs$lang$applyTo = function(arglist__158018) {
      var f = cljs.core.first(arglist__158018);
      var coll = cljs.core.first(cljs.core.next(arglist__158018));
      var colls = cljs.core.rest(cljs.core.next(arglist__158018));
      return G__158017__delegate(f, coll, colls)
    };
    G__158017.cljs$lang$arity$variadic = G__158017__delegate;
    return G__158017
  }();
  mapcat = function(f, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapcat__2.call(this, f, coll);
      default:
        return mapcat__3.cljs$lang$arity$variadic(f, coll, cljs.core.array_seq(arguments, 2))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapcat.cljs$lang$maxFixedArity = 2;
  mapcat.cljs$lang$applyTo = mapcat__3.cljs$lang$applyTo;
  mapcat.cljs$lang$arity$2 = mapcat__2;
  mapcat.cljs$lang$arity$variadic = mapcat__3.cljs$lang$arity$variadic;
  return mapcat
}();
cljs.core.filter = function filter(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4011__auto____158028 = cljs.core.seq.call(null, coll);
    if(temp__4011__auto____158028) {
      var s__158029 = temp__4011__auto____158028;
      if(cljs.core.chunked_seq_QMARK_.call(null, s__158029)) {
        var c__158030 = cljs.core.chunk_first.call(null, s__158029);
        var size__158031 = cljs.core.count.call(null, c__158030);
        var b__158032 = cljs.core.chunk_buffer.call(null, size__158031);
        var n__2564__auto____158033 = size__158031;
        var i__158034 = 0;
        while(true) {
          if(i__158034 < n__2564__auto____158033) {
            if(cljs.core.truth_(pred.call(null, cljs.core._nth.call(null, c__158030, i__158034)))) {
              cljs.core.chunk_append.call(null, b__158032, cljs.core._nth.call(null, c__158030, i__158034))
            }else {
            }
            var G__158037 = i__158034 + 1;
            i__158034 = G__158037;
            continue
          }else {
          }
          break
        }
        return cljs.core.chunk_cons.call(null, cljs.core.chunk.call(null, b__158032), filter.call(null, pred, cljs.core.chunk_rest.call(null, s__158029)))
      }else {
        var f__158035 = cljs.core.first.call(null, s__158029);
        var r__158036 = cljs.core.rest.call(null, s__158029);
        if(cljs.core.truth_(pred.call(null, f__158035))) {
          return cljs.core.cons.call(null, f__158035, filter.call(null, pred, r__158036))
        }else {
          return filter.call(null, pred, r__158036)
        }
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.remove = function remove(pred, coll) {
  return cljs.core.filter.call(null, cljs.core.complement.call(null, pred), coll)
};
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk__158040 = function walk(node) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, node, cljs.core.truth_(branch_QMARK_.call(null, node)) ? cljs.core.mapcat.call(null, walk, children.call(null, node)) : null)
    }, null)
  };
  return walk__158040.call(null, root)
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.call(null, function(p1__158038_SHARP_) {
    return!cljs.core.sequential_QMARK_.call(null, p1__158038_SHARP_)
  }, cljs.core.rest.call(null, cljs.core.tree_seq.call(null, cljs.core.sequential_QMARK_, cljs.core.seq, x)))
};
cljs.core.into = function into(to, from) {
  if(function() {
    var G__158044__158045 = to;
    if(G__158044__158045) {
      if(function() {
        var or__3862__auto____158046 = G__158044__158045.cljs$lang$protocol_mask$partition1$ & 1;
        if(or__3862__auto____158046) {
          return or__3862__auto____158046
        }else {
          return G__158044__158045.cljs$core$IEditableCollection$
        }
      }()) {
        return true
      }else {
        if(!G__158044__158045.cljs$lang$protocol_mask$partition1$) {
          return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__158044__158045)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, cljs.core.IEditableCollection, G__158044__158045)
    }
  }()) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core.transient$.call(null, to), from))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, to, from)
  }
};
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
      return cljs.core.conj_BANG_.call(null, v, f.call(null, o))
    }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2))
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, f, c1, c2, c3))
  };
  var mapv__5 = function() {
    var G__158047__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.call(null, cljs.core.PersistentVector.EMPTY, cljs.core.apply.call(null, cljs.core.map, f, c1, c2, c3, colls))
    };
    var G__158047 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if(goog.isDef(var_args)) {
        colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 4), 0)
      }
      return G__158047__delegate.call(this, f, c1, c2, c3, colls)
    };
    G__158047.cljs$lang$maxFixedArity = 4;
    G__158047.cljs$lang$applyTo = function(arglist__158048) {
      var f = cljs.core.first(arglist__158048);
      var c1 = cljs.core.first(cljs.core.next(arglist__158048));
      var c2 = cljs.core.first(cljs.core.next(cljs.core.next(arglist__158048)));
      var c3 = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__158048))));
      var colls = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(arglist__158048))));
      return G__158047__delegate(f, c1, c2, c3, colls)
    };
    G__158047.cljs$lang$arity$variadic = G__158047__delegate;
    return G__158047
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        return mapv__5.cljs$lang$arity$variadic(f, c1, c2, c3, cljs.core.array_seq(arguments, 4))
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$lang$arity$2 = mapv__2;
  mapv.cljs$lang$arity$3 = mapv__3;
  mapv.cljs$lang$arity$4 = mapv__4;
  mapv.cljs$lang$arity$variadic = mapv__5.cljs$lang$arity$variadic;
  return mapv
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(v, o) {
    if(cljs.core.truth_(pred.call(null, o))) {
      return cljs.core.conj_BANG_.call(null, v, o)
    }else {
      return v
    }
  }, cljs.core.transient$.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.call(null, n, n, coll)
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____158055 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____158055) {
        var s__158056 = temp__4011__auto____158055;
        var p__158057 = cljs.core.take.call(null, n, s__158056);
        if(n === cljs.core.count.call(null, p__158057)) {
          return cljs.core.cons.call(null, p__158057, partition.call(null, n, step, cljs.core.drop.call(null, step, s__158056)))
        }else {
          return null
        }
      }else {
        return null
      }
    }, null)
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____158058 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____158058) {
        var s__158059 = temp__4011__auto____158058;
        var p__158060 = cljs.core.take.call(null, n, s__158059);
        if(n === cljs.core.count.call(null, p__158060)) {
          return cljs.core.cons.call(null, p__158060, partition.call(null, n, step, pad, cljs.core.drop.call(null, step, s__158059)))
        }else {
          return cljs.core.list.call(null, cljs.core.take.call(null, n, cljs.core.concat.call(null, p__158060, pad)))
        }
      }else {
        return null
      }
    }, null)
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition.cljs$lang$arity$2 = partition__2;
  partition.cljs$lang$arity$3 = partition__3;
  partition.cljs$lang$arity$4 = partition__4;
  return partition
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return cljs.core.reduce.call(null, cljs.core.get, m, ks)
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel__158065 = cljs.core.lookup_sentinel;
    var m__158066 = m;
    var ks__158067 = cljs.core.seq.call(null, ks);
    while(true) {
      if(ks__158067) {
        var m__158068 = cljs.core._lookup.call(null, m__158066, cljs.core.first.call(null, ks__158067), sentinel__158065);
        if(sentinel__158065 === m__158068) {
          return not_found
        }else {
          var G__158069 = sentinel__158065;
          var G__158070 = m__158068;
          var G__158071 = cljs.core.next.call(null, ks__158067);
          sentinel__158065 = G__158069;
          m__158066 = G__158070;
          ks__158067 = G__158071;
          continue
        }
      }else {
        return m__158066
      }
      break
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  get_in.cljs$lang$arity$2 = get_in__2;
  get_in.cljs$lang$arity$3 = get_in__3;
  return get_in
}();
cljs.core.assoc_in = function assoc_in(m, p__158072, v) {
  var vec__158077__158078 = p__158072;
  var k__158079 = cljs.core.nth.call(null, vec__158077__158078, 0, null);
  var ks__158080 = cljs.core.nthnext.call(null, vec__158077__158078, 1);
  if(cljs.core.truth_(ks__158080)) {
    return cljs.core.assoc.call(null, m, k__158079, assoc_in.call(null, cljs.core._lookup.call(null, m, k__158079, null), ks__158080, v))
  }else {
    return cljs.core.assoc.call(null, m, k__158079, v)
  }
};
cljs.core.update_in = function() {
  var update_in__delegate = function(m, p__158081, f, args) {
    var vec__158086__158087 = p__158081;
    var k__158088 = cljs.core.nth.call(null, vec__158086__158087, 0, null);
    var ks__158089 = cljs.core.nthnext.call(null, vec__158086__158087, 1);
    if(cljs.core.truth_(ks__158089)) {
      return cljs.core.assoc.call(null, m, k__158088, cljs.core.apply.call(null, update_in, cljs.core._lookup.call(null, m, k__158088, null), ks__158089, f, args))
    }else {
      return cljs.core.assoc.call(null, m, k__158088, cljs.core.apply.call(null, f, cljs.core._lookup.call(null, m, k__158088, null), args))
    }
  };
  var update_in = function(m, p__158081, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return update_in__delegate.call(this, m, p__158081, f, args)
  };
  update_in.cljs$lang$maxFixedArity = 3;
  update_in.cljs$lang$applyTo = function(arglist__158090) {
    var m = cljs.core.first(arglist__158090);
    var p__158081 = cljs.core.first(cljs.core.next(arglist__158090));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__158090)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__158090)));
    return update_in__delegate(m, p__158081, f, args)
  };
  update_in.cljs$lang$arity$variadic = update_in__delegate;
  return update_in
}();
cljs.core.Vector = function(meta, array, __hash) {
  this.meta = meta;
  this.array = array;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Vector.cljs$lang$type = true;
cljs.core.Vector.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Vector")
};
cljs.core.Vector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158093 = this;
  var h__2229__auto____158094 = this__158093.__hash;
  if(!(h__2229__auto____158094 == null)) {
    return h__2229__auto____158094
  }else {
    var h__2229__auto____158095 = cljs.core.hash_coll.call(null, coll);
    this__158093.__hash = h__2229__auto____158095;
    return h__2229__auto____158095
  }
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158096 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Vector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158097 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Vector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__158098 = this;
  var new_array__158099 = this__158098.array.slice();
  new_array__158099[k] = v;
  return new cljs.core.Vector(this__158098.meta, new_array__158099, null)
};
cljs.core.Vector.prototype.call = function() {
  var G__158130 = null;
  var G__158130__2 = function(this_sym158100, k) {
    var this__158102 = this;
    var this_sym158100__158103 = this;
    var coll__158104 = this_sym158100__158103;
    return coll__158104.cljs$core$ILookup$_lookup$arity$2(coll__158104, k)
  };
  var G__158130__3 = function(this_sym158101, k, not_found) {
    var this__158102 = this;
    var this_sym158101__158105 = this;
    var coll__158106 = this_sym158101__158105;
    return coll__158106.cljs$core$ILookup$_lookup$arity$3(coll__158106, k, not_found)
  };
  G__158130 = function(this_sym158101, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158130__2.call(this, this_sym158101, k);
      case 3:
        return G__158130__3.call(this, this_sym158101, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158130
}();
cljs.core.Vector.prototype.apply = function(this_sym158091, args158092) {
  var this__158107 = this;
  return this_sym158091.call.apply(this_sym158091, [this_sym158091].concat(args158092.slice()))
};
cljs.core.Vector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158108 = this;
  var new_array__158109 = this__158108.array.slice();
  new_array__158109.push(o);
  return new cljs.core.Vector(this__158108.meta, new_array__158109, null)
};
cljs.core.Vector.prototype.toString = function() {
  var this__158110 = this;
  var this__158111 = this;
  return cljs.core.pr_str.call(null, this__158111)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__158112 = this;
  return cljs.core.ci_reduce.call(null, this__158112.array, f)
};
cljs.core.Vector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__158113 = this;
  return cljs.core.ci_reduce.call(null, this__158113.array, f, start)
};
cljs.core.Vector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158114 = this;
  if(this__158114.array.length > 0) {
    var vector_seq__158115 = function vector_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < this__158114.array.length) {
          return cljs.core.cons.call(null, this__158114.array[i], vector_seq.call(null, i + 1))
        }else {
          return null
        }
      }, null)
    };
    return vector_seq__158115.call(null, 0)
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158116 = this;
  return this__158116.array.length
};
cljs.core.Vector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__158117 = this;
  var count__158118 = this__158117.array.length;
  if(count__158118 > 0) {
    return this__158117.array[count__158118 - 1]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__158119 = this;
  if(this__158119.array.length > 0) {
    var new_array__158120 = this__158119.array.slice();
    new_array__158120.pop();
    return new cljs.core.Vector(this__158119.meta, new_array__158120, null)
  }else {
    throw new Error("Can't pop empty vector");
  }
};
cljs.core.Vector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__158121 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Vector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158122 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Vector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158123 = this;
  return new cljs.core.Vector(meta, this__158123.array, this__158123.__hash)
};
cljs.core.Vector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158124 = this;
  return this__158124.meta
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__158125 = this;
  if(function() {
    var and__3860__auto____158126 = 0 <= n;
    if(and__3860__auto____158126) {
      return n < this__158125.array.length
    }else {
      return and__3860__auto____158126
    }
  }()) {
    return this__158125.array[n]
  }else {
    return null
  }
};
cljs.core.Vector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__158127 = this;
  if(function() {
    var and__3860__auto____158128 = 0 <= n;
    if(and__3860__auto____158128) {
      return n < this__158127.array.length
    }else {
      return and__3860__auto____158128
    }
  }()) {
    return this__158127.array[n]
  }else {
    return not_found
  }
};
cljs.core.Vector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158129 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__158129.meta)
};
cljs.core.Vector;
cljs.core.Vector.EMPTY = new cljs.core.Vector(null, [], 0);
cljs.core.Vector.fromArray = function(xs) {
  return new cljs.core.Vector(null, xs, null)
};
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorPrSeq = function(this__2347__auto__) {
  return cljs.core.list.call(null, "cljs.core/VectorNode")
};
cljs.core.VectorNode;
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, cljs.core.make_array.call(null, 32))
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx]
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, node.arr.slice())
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt__158132 = pv.cnt;
  if(cnt__158132 < 32) {
    return 0
  }else {
    return cnt__158132 - 1 >>> 5 << 5
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll__158138 = level;
  var ret__158139 = node;
  while(true) {
    if(ll__158138 === 0) {
      return ret__158139
    }else {
      var embed__158140 = ret__158139;
      var r__158141 = cljs.core.pv_fresh_node.call(null, edit);
      var ___158142 = cljs.core.pv_aset.call(null, r__158141, 0, embed__158140);
      var G__158143 = ll__158138 - 5;
      var G__158144 = r__158141;
      ll__158138 = G__158143;
      ret__158139 = G__158144;
      continue
    }
    break
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret__158150 = cljs.core.pv_clone_node.call(null, parent);
  var subidx__158151 = pv.cnt - 1 >>> level & 31;
  if(5 === level) {
    cljs.core.pv_aset.call(null, ret__158150, subidx__158151, tailnode);
    return ret__158150
  }else {
    var child__158152 = cljs.core.pv_aget.call(null, parent, subidx__158151);
    if(!(child__158152 == null)) {
      var node_to_insert__158153 = push_tail.call(null, pv, level - 5, child__158152, tailnode);
      cljs.core.pv_aset.call(null, ret__158150, subidx__158151, node_to_insert__158153);
      return ret__158150
    }else {
      var node_to_insert__158154 = cljs.core.new_path.call(null, null, level - 5, tailnode);
      cljs.core.pv_aset.call(null, ret__158150, subidx__158151, node_to_insert__158154);
      return ret__158150
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if(function() {
    var and__3860__auto____158158 = 0 <= i;
    if(and__3860__auto____158158) {
      return i < pv.cnt
    }else {
      return and__3860__auto____158158
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, pv)) {
      return pv.tail
    }else {
      var node__158159 = pv.root;
      var level__158160 = pv.shift;
      while(true) {
        if(level__158160 > 0) {
          var G__158161 = cljs.core.pv_aget.call(null, node__158159, i >>> level__158160 & 31);
          var G__158162 = level__158160 - 5;
          node__158159 = G__158161;
          level__158160 = G__158162;
          continue
        }else {
          return node__158159.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(pv.cnt)].join(""));
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret__158165 = cljs.core.pv_clone_node.call(null, node);
  if(level === 0) {
    cljs.core.pv_aset.call(null, ret__158165, i & 31, val);
    return ret__158165
  }else {
    var subidx__158166 = i >>> level & 31;
    cljs.core.pv_aset.call(null, ret__158165, subidx__158166, do_assoc.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__158166), i, val));
    return ret__158165
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx__158172 = pv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__158173 = pop_tail.call(null, pv, level - 5, cljs.core.pv_aget.call(null, node, subidx__158172));
    if(function() {
      var and__3860__auto____158174 = new_child__158173 == null;
      if(and__3860__auto____158174) {
        return subidx__158172 === 0
      }else {
        return and__3860__auto____158174
      }
    }()) {
      return null
    }else {
      var ret__158175 = cljs.core.pv_clone_node.call(null, node);
      cljs.core.pv_aset.call(null, ret__158175, subidx__158172, new_child__158173);
      return ret__158175
    }
  }else {
    if(subidx__158172 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        var ret__158176 = cljs.core.pv_clone_node.call(null, node);
        cljs.core.pv_aset.call(null, ret__158176, subidx__158172, null);
        return ret__158176
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 167668511
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentVector")
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__158179 = this;
  return new cljs.core.TransientVector(this__158179.cnt, this__158179.shift, cljs.core.tv_editable_root.call(null, this__158179.root), cljs.core.tv_editable_tail.call(null, this__158179.tail))
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158180 = this;
  var h__2229__auto____158181 = this__158180.__hash;
  if(!(h__2229__auto____158181 == null)) {
    return h__2229__auto____158181
  }else {
    var h__2229__auto____158182 = cljs.core.hash_coll.call(null, coll);
    this__158180.__hash = h__2229__auto____158182;
    return h__2229__auto____158182
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158183 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158184 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__158185 = this;
  if(function() {
    var and__3860__auto____158186 = 0 <= k;
    if(and__3860__auto____158186) {
      return k < this__158185.cnt
    }else {
      return and__3860__auto____158186
    }
  }()) {
    if(cljs.core.tail_off.call(null, coll) <= k) {
      var new_tail__158187 = this__158185.tail.slice();
      new_tail__158187[k & 31] = v;
      return new cljs.core.PersistentVector(this__158185.meta, this__158185.cnt, this__158185.shift, this__158185.root, new_tail__158187, null)
    }else {
      return new cljs.core.PersistentVector(this__158185.meta, this__158185.cnt, this__158185.shift, cljs.core.do_assoc.call(null, coll, this__158185.shift, this__158185.root, k, v), this__158185.tail, null)
    }
  }else {
    if(k === this__158185.cnt) {
      return coll.cljs$core$ICollection$_conj$arity$2(coll, v)
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Index "), cljs.core.str(k), cljs.core.str(" out of bounds  [0,"), cljs.core.str(this__158185.cnt), cljs.core.str("]")].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__158235 = null;
  var G__158235__2 = function(this_sym158188, k) {
    var this__158190 = this;
    var this_sym158188__158191 = this;
    var coll__158192 = this_sym158188__158191;
    return coll__158192.cljs$core$ILookup$_lookup$arity$2(coll__158192, k)
  };
  var G__158235__3 = function(this_sym158189, k, not_found) {
    var this__158190 = this;
    var this_sym158189__158193 = this;
    var coll__158194 = this_sym158189__158193;
    return coll__158194.cljs$core$ILookup$_lookup$arity$3(coll__158194, k, not_found)
  };
  G__158235 = function(this_sym158189, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158235__2.call(this, this_sym158189, k);
      case 3:
        return G__158235__3.call(this, this_sym158189, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158235
}();
cljs.core.PersistentVector.prototype.apply = function(this_sym158177, args158178) {
  var this__158195 = this;
  return this_sym158177.call.apply(this_sym158177, [this_sym158177].concat(args158178.slice()))
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var this__158196 = this;
  var step_init__158197 = [0, init];
  var i__158198 = 0;
  while(true) {
    if(i__158198 < this__158196.cnt) {
      var arr__158199 = cljs.core.array_for.call(null, v, i__158198);
      var len__158200 = arr__158199.length;
      var init__158204 = function() {
        var j__158201 = 0;
        var init__158202 = step_init__158197[1];
        while(true) {
          if(j__158201 < len__158200) {
            var init__158203 = f.call(null, init__158202, j__158201 + i__158198, arr__158199[j__158201]);
            if(cljs.core.reduced_QMARK_.call(null, init__158203)) {
              return init__158203
            }else {
              var G__158236 = j__158201 + 1;
              var G__158237 = init__158203;
              j__158201 = G__158236;
              init__158202 = G__158237;
              continue
            }
          }else {
            step_init__158197[0] = len__158200;
            step_init__158197[1] = init__158202;
            return init__158202
          }
          break
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__158204)) {
        return cljs.core.deref.call(null, init__158204)
      }else {
        var G__158238 = i__158198 + step_init__158197[0];
        i__158198 = G__158238;
        continue
      }
    }else {
      return step_init__158197[1]
    }
    break
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158205 = this;
  if(this__158205.cnt - cljs.core.tail_off.call(null, coll) < 32) {
    var new_tail__158206 = this__158205.tail.slice();
    new_tail__158206.push(o);
    return new cljs.core.PersistentVector(this__158205.meta, this__158205.cnt + 1, this__158205.shift, this__158205.root, new_tail__158206, null)
  }else {
    var root_overflow_QMARK___158207 = this__158205.cnt >>> 5 > 1 << this__158205.shift;
    var new_shift__158208 = root_overflow_QMARK___158207 ? this__158205.shift + 5 : this__158205.shift;
    var new_root__158210 = root_overflow_QMARK___158207 ? function() {
      var n_r__158209 = cljs.core.pv_fresh_node.call(null, null);
      cljs.core.pv_aset.call(null, n_r__158209, 0, this__158205.root);
      cljs.core.pv_aset.call(null, n_r__158209, 1, cljs.core.new_path.call(null, null, this__158205.shift, new cljs.core.VectorNode(null, this__158205.tail)));
      return n_r__158209
    }() : cljs.core.push_tail.call(null, coll, this__158205.shift, this__158205.root, new cljs.core.VectorNode(null, this__158205.tail));
    return new cljs.core.PersistentVector(this__158205.meta, this__158205.cnt + 1, new_shift__158208, new_root__158210, [o], null)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__158211 = this;
  if(this__158211.cnt > 0) {
    return new cljs.core.RSeq(coll, this__158211.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var this__158212 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 0)
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var this__158213 = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(coll, 1)
};
cljs.core.PersistentVector.prototype.toString = function() {
  var this__158214 = this;
  var this__158215 = this;
  return cljs.core.pr_str.call(null, this__158215)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var this__158216 = this;
  return cljs.core.ci_reduce.call(null, v, f)
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, start) {
  var this__158217 = this;
  return cljs.core.ci_reduce.call(null, v, f, start)
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158218 = this;
  if(this__158218.cnt === 0) {
    return null
  }else {
    return cljs.core.chunked_seq.call(null, coll, 0, 0)
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158219 = this;
  return this__158219.cnt
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__158220 = this;
  if(this__158220.cnt > 0) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, this__158220.cnt - 1)
  }else {
    return null
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__158221 = this;
  if(this__158221.cnt === 0) {
    throw new Error("Can't pop empty vector");
  }else {
    if(1 === this__158221.cnt) {
      return cljs.core._with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__158221.meta)
    }else {
      if(1 < this__158221.cnt - cljs.core.tail_off.call(null, coll)) {
        return new cljs.core.PersistentVector(this__158221.meta, this__158221.cnt - 1, this__158221.shift, this__158221.root, this__158221.tail.slice(0, -1), null)
      }else {
        if("\ufdd0'else") {
          var new_tail__158222 = cljs.core.array_for.call(null, coll, this__158221.cnt - 2);
          var nr__158223 = cljs.core.pop_tail.call(null, coll, this__158221.shift, this__158221.root);
          var new_root__158224 = nr__158223 == null ? cljs.core.PersistentVector.EMPTY_NODE : nr__158223;
          var cnt_1__158225 = this__158221.cnt - 1;
          if(function() {
            var and__3860__auto____158226 = 5 < this__158221.shift;
            if(and__3860__auto____158226) {
              return cljs.core.pv_aget.call(null, new_root__158224, 1) == null
            }else {
              return and__3860__auto____158226
            }
          }()) {
            return new cljs.core.PersistentVector(this__158221.meta, cnt_1__158225, this__158221.shift - 5, cljs.core.pv_aget.call(null, new_root__158224, 0), new_tail__158222, null)
          }else {
            return new cljs.core.PersistentVector(this__158221.meta, cnt_1__158225, this__158221.shift, new_root__158224, new_tail__158222, null)
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__158227 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158228 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158229 = this;
  return new cljs.core.PersistentVector(meta, this__158229.cnt, this__158229.shift, this__158229.root, this__158229.tail, this__158229.__hash)
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158230 = this;
  return this__158230.meta
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__158231 = this;
  return cljs.core.array_for.call(null, coll, n)[n & 31]
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__158232 = this;
  if(function() {
    var and__3860__auto____158233 = 0 <= n;
    if(and__3860__auto____158233) {
      return n < this__158232.cnt
    }else {
      return and__3860__auto____158233
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158234 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__158234.meta)
};
cljs.core.PersistentVector;
cljs.core.PersistentVector.EMPTY_NODE = cljs.core.pv_fresh_node.call(null, null);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], 0);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l__158239 = xs.length;
  var xs__158240 = no_clone === true ? xs : xs.slice();
  if(l__158239 < 32) {
    return new cljs.core.PersistentVector(null, l__158239, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__158240, null)
  }else {
    var node__158241 = xs__158240.slice(0, 32);
    var v__158242 = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node__158241, null);
    var i__158243 = 32;
    var out__158244 = cljs.core._as_transient.call(null, v__158242);
    while(true) {
      if(i__158243 < l__158239) {
        var G__158245 = i__158243 + 1;
        var G__158246 = cljs.core.conj_BANG_.call(null, out__158244, xs__158240[i__158243]);
        i__158243 = G__158245;
        out__158244 = G__158246;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__158244)
      }
      break
    }
  }
};
cljs.core.vec = function vec(coll) {
  return cljs.core._persistent_BANG_.call(null, cljs.core.reduce.call(null, cljs.core._conj_BANG_, cljs.core._as_transient.call(null, cljs.core.PersistentVector.EMPTY), coll))
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    return cljs.core.vec.call(null, args)
  };
  var vector = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vector__delegate.call(this, args)
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__158247) {
    var args = cljs.core.seq(arglist__158247);
    return vector__delegate(args)
  };
  vector.cljs$lang$arity$variadic = vector__delegate;
  return vector
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 27525356
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ChunkedSeq")
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var this__158248 = this;
  if(this__158248.off + 1 < this__158248.node.length) {
    var s__158249 = cljs.core.chunked_seq.call(null, this__158248.vec, this__158248.node, this__158248.i, this__158248.off + 1);
    if(s__158249 == null) {
      return null
    }else {
      return s__158249
    }
  }else {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158250 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158251 = this;
  return coll
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__158252 = this;
  return this__158252.node[this__158252.off]
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__158253 = this;
  if(this__158253.off + 1 < this__158253.node.length) {
    var s__158254 = cljs.core.chunked_seq.call(null, this__158253.vec, this__158253.node, this__158253.i, this__158253.off + 1);
    if(s__158254 == null) {
      return cljs.core.List.EMPTY
    }else {
      return s__158254
    }
  }else {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll)
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var this__158255 = this;
  var l__158256 = this__158255.node.length;
  var s__158257 = this__158255.i + l__158256 < cljs.core._count.call(null, this__158255.vec) ? cljs.core.chunked_seq.call(null, this__158255.vec, this__158255.i + l__158256, 0) : null;
  if(s__158257 == null) {
    return null
  }else {
    return s__158257
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158258 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var this__158259 = this;
  return cljs.core.chunked_seq.call(null, this__158259.vec, this__158259.node, this__158259.i, this__158259.off, m)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_meta$arity$1 = function(coll) {
  var this__158260 = this;
  return this__158260.meta
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158261 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.EMPTY, this__158261.meta)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var this__158262 = this;
  return cljs.core.array_chunk.call(null, this__158262.node, this__158262.off)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var this__158263 = this;
  var l__158264 = this__158263.node.length;
  var s__158265 = this__158263.i + l__158264 < cljs.core._count.call(null, this__158263.vec) ? cljs.core.chunked_seq.call(null, this__158263.vec, this__158263.i + l__158264, 0) : null;
  if(s__158265 == null) {
    return cljs.core.List.EMPTY
  }else {
    return s__158265
  }
};
cljs.core.ChunkedSeq;
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return chunked_seq.call(null, vec, cljs.core.array_for.call(null, vec, i), i, off, null)
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return chunked_seq.call(null, vec, node, i, off, null)
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta)
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta)
    }
    throw"Invalid arity: " + arguments.length;
  };
  chunked_seq.cljs$lang$arity$3 = chunked_seq__3;
  chunked_seq.cljs$lang$arity$4 = chunked_seq__4;
  chunked_seq.cljs$lang$arity$5 = chunked_seq__5;
  return chunked_seq
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32400159
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Subvec")
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158268 = this;
  var h__2229__auto____158269 = this__158268.__hash;
  if(!(h__2229__auto____158269 == null)) {
    return h__2229__auto____158269
  }else {
    var h__2229__auto____158270 = cljs.core.hash_coll.call(null, coll);
    this__158268.__hash = h__2229__auto____158270;
    return h__2229__auto____158270
  }
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158271 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158272 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var this__158273 = this;
  var v_pos__158274 = this__158273.start + key;
  return new cljs.core.Subvec(this__158273.meta, cljs.core._assoc.call(null, this__158273.v, v_pos__158274, val), this__158273.start, this__158273.end > v_pos__158274 + 1 ? this__158273.end : v_pos__158274 + 1, null)
};
cljs.core.Subvec.prototype.call = function() {
  var G__158300 = null;
  var G__158300__2 = function(this_sym158275, k) {
    var this__158277 = this;
    var this_sym158275__158278 = this;
    var coll__158279 = this_sym158275__158278;
    return coll__158279.cljs$core$ILookup$_lookup$arity$2(coll__158279, k)
  };
  var G__158300__3 = function(this_sym158276, k, not_found) {
    var this__158277 = this;
    var this_sym158276__158280 = this;
    var coll__158281 = this_sym158276__158280;
    return coll__158281.cljs$core$ILookup$_lookup$arity$3(coll__158281, k, not_found)
  };
  G__158300 = function(this_sym158276, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158300__2.call(this, this_sym158276, k);
      case 3:
        return G__158300__3.call(this, this_sym158276, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158300
}();
cljs.core.Subvec.prototype.apply = function(this_sym158266, args158267) {
  var this__158282 = this;
  return this_sym158266.call.apply(this_sym158266, [this_sym158266].concat(args158267.slice()))
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158283 = this;
  return new cljs.core.Subvec(this__158283.meta, cljs.core._assoc_n.call(null, this__158283.v, this__158283.end, o), this__158283.start, this__158283.end + 1, null)
};
cljs.core.Subvec.prototype.toString = function() {
  var this__158284 = this;
  var this__158285 = this;
  return cljs.core.pr_str.call(null, this__158285)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var this__158286 = this;
  return cljs.core.ci_reduce.call(null, coll, f)
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var this__158287 = this;
  return cljs.core.ci_reduce.call(null, coll, f, start)
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158288 = this;
  var subvec_seq__158289 = function subvec_seq(i) {
    if(i === this__158288.end) {
      return null
    }else {
      return cljs.core.cons.call(null, cljs.core._nth.call(null, this__158288.v, i), new cljs.core.LazySeq(null, false, function() {
        return subvec_seq.call(null, i + 1)
      }, null))
    }
  };
  return subvec_seq__158289.call(null, this__158288.start)
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158290 = this;
  return this__158290.end - this__158290.start
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__158291 = this;
  return cljs.core._nth.call(null, this__158291.v, this__158291.end - 1)
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__158292 = this;
  if(this__158292.start === this__158292.end) {
    throw new Error("Can't pop empty vector");
  }else {
    return new cljs.core.Subvec(this__158292.meta, this__158292.v, this__158292.start, this__158292.end - 1, null)
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var this__158293 = this;
  return coll.cljs$core$IAssociative$_assoc$arity$3(coll, n, val)
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158294 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158295 = this;
  return new cljs.core.Subvec(meta, this__158295.v, this__158295.start, this__158295.end, this__158295.__hash)
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158296 = this;
  return this__158296.meta
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__158297 = this;
  return cljs.core._nth.call(null, this__158297.v, this__158297.start + n)
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__158298 = this;
  return cljs.core._nth.call(null, this__158298.v, this__158298.start + n, not_found)
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158299 = this;
  return cljs.core.with_meta.call(null, cljs.core.Vector.EMPTY, this__158299.meta)
};
cljs.core.Subvec;
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.call(null, v, start, cljs.core.count.call(null, v))
  };
  var subvec__3 = function(v, start, end) {
    return new cljs.core.Subvec(null, v, start, end, null)
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subvec.cljs$lang$arity$2 = subvec__2;
  subvec.cljs$lang$arity$3 = subvec__3;
  return subvec
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if(edit === node.edit) {
    return node
  }else {
    return new cljs.core.VectorNode(edit, node.arr.slice())
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode({}, node.arr.slice())
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret__158302 = cljs.core.make_array.call(null, 32);
  cljs.core.array_copy.call(null, tl, 0, ret__158302, 0, tl.length);
  return ret__158302
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret__158306 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, parent);
  var subidx__158307 = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset.call(null, ret__158306, subidx__158307, level === 5 ? tail_node : function() {
    var child__158308 = cljs.core.pv_aget.call(null, ret__158306, subidx__158307);
    if(!(child__158308 == null)) {
      return tv_push_tail.call(null, tv, level - 5, child__158308, tail_node)
    }else {
      return cljs.core.new_path.call(null, tv.root.edit, level - 5, tail_node)
    }
  }());
  return ret__158306
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__158313 = cljs.core.tv_ensure_editable.call(null, tv.root.edit, node);
  var subidx__158314 = tv.cnt - 2 >>> level & 31;
  if(level > 5) {
    var new_child__158315 = tv_pop_tail.call(null, tv, level - 5, cljs.core.pv_aget.call(null, node__158313, subidx__158314));
    if(function() {
      var and__3860__auto____158316 = new_child__158315 == null;
      if(and__3860__auto____158316) {
        return subidx__158314 === 0
      }else {
        return and__3860__auto____158316
      }
    }()) {
      return null
    }else {
      cljs.core.pv_aset.call(null, node__158313, subidx__158314, new_child__158315);
      return node__158313
    }
  }else {
    if(subidx__158314 === 0) {
      return null
    }else {
      if("\ufdd0'else") {
        cljs.core.pv_aset.call(null, node__158313, subidx__158314, null);
        return node__158313
      }else {
        return null
      }
    }
  }
};
cljs.core.editable_array_for = function editable_array_for(tv, i) {
  if(function() {
    var and__3860__auto____158321 = 0 <= i;
    if(and__3860__auto____158321) {
      return i < tv.cnt
    }else {
      return and__3860__auto____158321
    }
  }()) {
    if(i >= cljs.core.tail_off.call(null, tv)) {
      return tv.tail
    }else {
      var root__158322 = tv.root;
      var node__158323 = root__158322;
      var level__158324 = tv.shift;
      while(true) {
        if(level__158324 > 0) {
          var G__158325 = cljs.core.tv_ensure_editable.call(null, root__158322.edit, cljs.core.pv_aget.call(null, node__158323, i >>> level__158324 & 31));
          var G__158326 = level__158324 - 5;
          node__158323 = G__158325;
          level__158324 = G__158326;
          continue
        }else {
          return node__158323.arr
        }
        break
      }
    }
  }else {
    throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in transient vector of length "), cljs.core.str(tv.cnt)].join(""));
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 22
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientVector")
};
cljs.core.TransientVector.prototype.call = function() {
  var G__158366 = null;
  var G__158366__2 = function(this_sym158329, k) {
    var this__158331 = this;
    var this_sym158329__158332 = this;
    var coll__158333 = this_sym158329__158332;
    return coll__158333.cljs$core$ILookup$_lookup$arity$2(coll__158333, k)
  };
  var G__158366__3 = function(this_sym158330, k, not_found) {
    var this__158331 = this;
    var this_sym158330__158334 = this;
    var coll__158335 = this_sym158330__158334;
    return coll__158335.cljs$core$ILookup$_lookup$arity$3(coll__158335, k, not_found)
  };
  G__158366 = function(this_sym158330, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158366__2.call(this, this_sym158330, k);
      case 3:
        return G__158366__3.call(this, this_sym158330, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158366
}();
cljs.core.TransientVector.prototype.apply = function(this_sym158327, args158328) {
  var this__158336 = this;
  return this_sym158327.call.apply(this_sym158327, [this_sym158327].concat(args158328.slice()))
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158337 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, null)
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158338 = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(coll, k, not_found)
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var this__158339 = this;
  if(this__158339.root.edit) {
    return cljs.core.array_for.call(null, coll, n)[n & 31]
  }else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var this__158340 = this;
  if(function() {
    var and__3860__auto____158341 = 0 <= n;
    if(and__3860__auto____158341) {
      return n < this__158340.cnt
    }else {
      return and__3860__auto____158341
    }
  }()) {
    return coll.cljs$core$IIndexed$_nth$arity$2(coll, n)
  }else {
    return not_found
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158342 = this;
  if(this__158342.root.edit) {
    return this__158342.cnt
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var this__158343 = this;
  if(this__158343.root.edit) {
    if(function() {
      var and__3860__auto____158344 = 0 <= n;
      if(and__3860__auto____158344) {
        return n < this__158343.cnt
      }else {
        return and__3860__auto____158344
      }
    }()) {
      if(cljs.core.tail_off.call(null, tcoll) <= n) {
        this__158343.tail[n & 31] = val;
        return tcoll
      }else {
        var new_root__158349 = function go(level, node) {
          var node__158347 = cljs.core.tv_ensure_editable.call(null, this__158343.root.edit, node);
          if(level === 0) {
            cljs.core.pv_aset.call(null, node__158347, n & 31, val);
            return node__158347
          }else {
            var subidx__158348 = n >>> level & 31;
            cljs.core.pv_aset.call(null, node__158347, subidx__158348, go.call(null, level - 5, cljs.core.pv_aget.call(null, node__158347, subidx__158348)));
            return node__158347
          }
        }.call(null, this__158343.shift, this__158343.root);
        this__158343.root = new_root__158349;
        return tcoll
      }
    }else {
      if(n === this__158343.cnt) {
        return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val)
      }else {
        if("\ufdd0'else") {
          throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(this__158343.cnt)].join(""));
        }else {
          return null
        }
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var this__158350 = this;
  if(this__158350.root.edit) {
    if(this__158350.cnt === 0) {
      throw new Error("Can't pop empty vector");
    }else {
      if(1 === this__158350.cnt) {
        this__158350.cnt = 0;
        return tcoll
      }else {
        if((this__158350.cnt - 1 & 31) > 0) {
          this__158350.cnt = this__158350.cnt - 1;
          return tcoll
        }else {
          if("\ufdd0'else") {
            var new_tail__158351 = cljs.core.editable_array_for.call(null, tcoll, this__158350.cnt - 2);
            var new_root__158353 = function() {
              var nr__158352 = cljs.core.tv_pop_tail.call(null, tcoll, this__158350.shift, this__158350.root);
              if(!(nr__158352 == null)) {
                return nr__158352
              }else {
                return new cljs.core.VectorNode(this__158350.root.edit, cljs.core.make_array.call(null, 32))
              }
            }();
            if(function() {
              var and__3860__auto____158354 = 5 < this__158350.shift;
              if(and__3860__auto____158354) {
                return cljs.core.pv_aget.call(null, new_root__158353, 1) == null
              }else {
                return and__3860__auto____158354
              }
            }()) {
              var new_root__158355 = cljs.core.tv_ensure_editable.call(null, this__158350.root.edit, cljs.core.pv_aget.call(null, new_root__158353, 0));
              this__158350.root = new_root__158355;
              this__158350.shift = this__158350.shift - 5;
              this__158350.cnt = this__158350.cnt - 1;
              this__158350.tail = new_tail__158351;
              return tcoll
            }else {
              this__158350.root = new_root__158353;
              this__158350.cnt = this__158350.cnt - 1;
              this__158350.tail = new_tail__158351;
              return tcoll
            }
          }else {
            return null
          }
        }
      }
    }
  }else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__158356 = this;
  return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, key, val)
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__158357 = this;
  if(this__158357.root.edit) {
    if(this__158357.cnt - cljs.core.tail_off.call(null, tcoll) < 32) {
      this__158357.tail[this__158357.cnt & 31] = o;
      this__158357.cnt = this__158357.cnt + 1;
      return tcoll
    }else {
      var tail_node__158358 = new cljs.core.VectorNode(this__158357.root.edit, this__158357.tail);
      var new_tail__158359 = cljs.core.make_array.call(null, 32);
      new_tail__158359[0] = o;
      this__158357.tail = new_tail__158359;
      if(this__158357.cnt >>> 5 > 1 << this__158357.shift) {
        var new_root_array__158360 = cljs.core.make_array.call(null, 32);
        var new_shift__158361 = this__158357.shift + 5;
        new_root_array__158360[0] = this__158357.root;
        new_root_array__158360[1] = cljs.core.new_path.call(null, this__158357.root.edit, this__158357.shift, tail_node__158358);
        this__158357.root = new cljs.core.VectorNode(this__158357.root.edit, new_root_array__158360);
        this__158357.shift = new_shift__158361;
        this__158357.cnt = this__158357.cnt + 1;
        return tcoll
      }else {
        var new_root__158362 = cljs.core.tv_push_tail.call(null, tcoll, this__158357.shift, this__158357.root, tail_node__158358);
        this__158357.root = new_root__158362;
        this__158357.cnt = this__158357.cnt + 1;
        return tcoll
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__158363 = this;
  if(this__158363.root.edit) {
    this__158363.root.edit = null;
    var len__158364 = this__158363.cnt - cljs.core.tail_off.call(null, tcoll);
    var trimmed_tail__158365 = cljs.core.make_array.call(null, len__158364);
    cljs.core.array_copy.call(null, this__158363.tail, 0, trimmed_tail__158365, 0, len__158364);
    return new cljs.core.PersistentVector(null, this__158363.cnt, this__158363.shift, this__158363.root, trimmed_tail__158365, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector;
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueueSeq")
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158367 = this;
  var h__2229__auto____158368 = this__158367.__hash;
  if(!(h__2229__auto____158368 == null)) {
    return h__2229__auto____158368
  }else {
    var h__2229__auto____158369 = cljs.core.hash_coll.call(null, coll);
    this__158367.__hash = h__2229__auto____158369;
    return h__2229__auto____158369
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158370 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var this__158371 = this;
  var this__158372 = this;
  return cljs.core.pr_str.call(null, this__158372)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158373 = this;
  return coll
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__158374 = this;
  return cljs.core._first.call(null, this__158374.front)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__158375 = this;
  var temp__4009__auto____158376 = cljs.core.next.call(null, this__158375.front);
  if(temp__4009__auto____158376) {
    var f1__158377 = temp__4009__auto____158376;
    return new cljs.core.PersistentQueueSeq(this__158375.meta, f1__158377, this__158375.rear, null)
  }else {
    if(this__158375.rear == null) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      return new cljs.core.PersistentQueueSeq(this__158375.meta, this__158375.rear, null, null)
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158378 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158379 = this;
  return new cljs.core.PersistentQueueSeq(meta, this__158379.front, this__158379.rear, this__158379.__hash)
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158380 = this;
  return this__158380.meta
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158381 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__158381.meta)
};
cljs.core.PersistentQueueSeq;
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31858766
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentQueue")
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158382 = this;
  var h__2229__auto____158383 = this__158382.__hash;
  if(!(h__2229__auto____158383 == null)) {
    return h__2229__auto____158383
  }else {
    var h__2229__auto____158384 = cljs.core.hash_coll.call(null, coll);
    this__158382.__hash = h__2229__auto____158384;
    return h__2229__auto____158384
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158385 = this;
  if(cljs.core.truth_(this__158385.front)) {
    return new cljs.core.PersistentQueue(this__158385.meta, this__158385.count + 1, this__158385.front, cljs.core.conj.call(null, function() {
      var or__3862__auto____158386 = this__158385.rear;
      if(cljs.core.truth_(or__3862__auto____158386)) {
        return or__3862__auto____158386
      }else {
        return cljs.core.PersistentVector.EMPTY
      }
    }(), o), null)
  }else {
    return new cljs.core.PersistentQueue(this__158385.meta, this__158385.count + 1, cljs.core.conj.call(null, this__158385.front, o), cljs.core.PersistentVector.EMPTY, null)
  }
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var this__158387 = this;
  var this__158388 = this;
  return cljs.core.pr_str.call(null, this__158388)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158389 = this;
  var rear__158390 = cljs.core.seq.call(null, this__158389.rear);
  if(cljs.core.truth_(function() {
    var or__3862__auto____158391 = this__158389.front;
    if(cljs.core.truth_(or__3862__auto____158391)) {
      return or__3862__auto____158391
    }else {
      return rear__158390
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, this__158389.front, cljs.core.seq.call(null, rear__158390), null)
  }else {
    return null
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158392 = this;
  return this__158392.count
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var this__158393 = this;
  return cljs.core._first.call(null, this__158393.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var this__158394 = this;
  if(cljs.core.truth_(this__158394.front)) {
    var temp__4009__auto____158395 = cljs.core.next.call(null, this__158394.front);
    if(temp__4009__auto____158395) {
      var f1__158396 = temp__4009__auto____158395;
      return new cljs.core.PersistentQueue(this__158394.meta, this__158394.count - 1, f1__158396, this__158394.rear, null)
    }else {
      return new cljs.core.PersistentQueue(this__158394.meta, this__158394.count - 1, cljs.core.seq.call(null, this__158394.rear), cljs.core.PersistentVector.EMPTY, null)
    }
  }else {
    return coll
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__158397 = this;
  return cljs.core.first.call(null, this__158397.front)
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__158398 = this;
  return cljs.core.rest.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158399 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158400 = this;
  return new cljs.core.PersistentQueue(meta, this__158400.count, this__158400.front, this__158400.rear, this__158400.__hash)
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158401 = this;
  return this__158401.meta
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158402 = this;
  return cljs.core.PersistentQueue.EMPTY
};
cljs.core.PersistentQueue;
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, 0);
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/NeverEquiv")
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__158403 = this;
  return false
};
cljs.core.NeverEquiv;
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$.call(null, cljs.core.map_QMARK_.call(null, y) ? cljs.core.count.call(null, x) === cljs.core.count.call(null, y) ? cljs.core.every_QMARK_.call(null, cljs.core.identity, cljs.core.map.call(null, function(xkv) {
    return cljs.core._EQ_.call(null, cljs.core._lookup.call(null, y, cljs.core.first.call(null, xkv), cljs.core.never_equiv), cljs.core.second.call(null, xkv))
  }, x)) : null : null)
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len__158406 = array.length;
  var i__158407 = 0;
  while(true) {
    if(i__158407 < len__158406) {
      if(k === array[i__158407]) {
        return i__158407
      }else {
        var G__158408 = i__158407 + incr;
        i__158407 = G__158408;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__158411 = cljs.core.hash.call(null, a);
  var b__158412 = cljs.core.hash.call(null, b);
  if(a__158411 < b__158412) {
    return-1
  }else {
    if(a__158411 > b__158412) {
      return 1
    }else {
      if("\ufdd0'else") {
        return 0
      }else {
        return null
      }
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks__158420 = m.keys;
  var len__158421 = ks__158420.length;
  var so__158422 = m.strobj;
  var out__158423 = cljs.core.with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, cljs.core.meta.call(null, m));
  var i__158424 = 0;
  var out__158425 = cljs.core.transient$.call(null, out__158423);
  while(true) {
    if(i__158424 < len__158421) {
      var k__158426 = ks__158420[i__158424];
      var G__158427 = i__158424 + 1;
      var G__158428 = cljs.core.assoc_BANG_.call(null, out__158425, k__158426, so__158422[k__158426]);
      i__158424 = G__158427;
      out__158425 = G__158428;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, out__158425, k, v))
    }
    break
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj__158434 = {};
  var l__158435 = ks.length;
  var i__158436 = 0;
  while(true) {
    if(i__158436 < l__158435) {
      var k__158437 = ks[i__158436];
      new_obj__158434[k__158437] = obj[k__158437];
      var G__158438 = i__158436 + 1;
      i__158436 = G__158438;
      continue
    }else {
    }
    break
  }
  return new_obj__158434
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ObjMap")
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__158441 = this;
  return cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.hash_map.call(null), coll))
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158442 = this;
  var h__2229__auto____158443 = this__158442.__hash;
  if(!(h__2229__auto____158443 == null)) {
    return h__2229__auto____158443
  }else {
    var h__2229__auto____158444 = cljs.core.hash_imap.call(null, coll);
    this__158442.__hash = h__2229__auto____158444;
    return h__2229__auto____158444
  }
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158445 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158446 = this;
  if(function() {
    var and__3860__auto____158447 = goog.isString(k);
    if(and__3860__auto____158447) {
      return!(cljs.core.scan_array.call(null, 1, k, this__158446.keys) == null)
    }else {
      return and__3860__auto____158447
    }
  }()) {
    return this__158446.strobj[k]
  }else {
    return not_found
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__158448 = this;
  if(goog.isString(k)) {
    if(function() {
      var or__3862__auto____158449 = this__158448.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD;
      if(or__3862__auto____158449) {
        return or__3862__auto____158449
      }else {
        return this__158448.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD
      }
    }()) {
      return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
    }else {
      if(!(cljs.core.scan_array.call(null, 1, k, this__158448.keys) == null)) {
        var new_strobj__158450 = cljs.core.obj_clone.call(null, this__158448.strobj, this__158448.keys);
        new_strobj__158450[k] = v;
        return new cljs.core.ObjMap(this__158448.meta, this__158448.keys, new_strobj__158450, this__158448.update_count + 1, null)
      }else {
        var new_strobj__158451 = cljs.core.obj_clone.call(null, this__158448.strobj, this__158448.keys);
        var new_keys__158452 = this__158448.keys.slice();
        new_strobj__158451[k] = v;
        new_keys__158452.push(k);
        return new cljs.core.ObjMap(this__158448.meta, new_keys__158452, new_strobj__158451, this__158448.update_count + 1, null)
      }
    }
  }else {
    return cljs.core.obj_map__GT_hash_map.call(null, coll, k, v)
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__158453 = this;
  if(function() {
    var and__3860__auto____158454 = goog.isString(k);
    if(and__3860__auto____158454) {
      return!(cljs.core.scan_array.call(null, 1, k, this__158453.keys) == null)
    }else {
      return and__3860__auto____158454
    }
  }()) {
    return true
  }else {
    return false
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__158476 = null;
  var G__158476__2 = function(this_sym158455, k) {
    var this__158457 = this;
    var this_sym158455__158458 = this;
    var coll__158459 = this_sym158455__158458;
    return coll__158459.cljs$core$ILookup$_lookup$arity$2(coll__158459, k)
  };
  var G__158476__3 = function(this_sym158456, k, not_found) {
    var this__158457 = this;
    var this_sym158456__158460 = this;
    var coll__158461 = this_sym158456__158460;
    return coll__158461.cljs$core$ILookup$_lookup$arity$3(coll__158461, k, not_found)
  };
  G__158476 = function(this_sym158456, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158476__2.call(this, this_sym158456, k);
      case 3:
        return G__158476__3.call(this, this_sym158456, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158476
}();
cljs.core.ObjMap.prototype.apply = function(this_sym158439, args158440) {
  var this__158462 = this;
  return this_sym158439.call.apply(this_sym158439, [this_sym158439].concat(args158440.slice()))
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__158463 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.ObjMap.prototype.toString = function() {
  var this__158464 = this;
  var this__158465 = this;
  return cljs.core.pr_str.call(null, this__158465)
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158466 = this;
  if(this__158466.keys.length > 0) {
    return cljs.core.map.call(null, function(p1__158429_SHARP_) {
      return cljs.core.vector.call(null, p1__158429_SHARP_, this__158466.strobj[p1__158429_SHARP_])
    }, this__158466.keys.sort(cljs.core.obj_map_compare_keys))
  }else {
    return null
  }
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158467 = this;
  return this__158467.keys.length
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158468 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158469 = this;
  return new cljs.core.ObjMap(meta, this__158469.keys, this__158469.strobj, this__158469.update_count, this__158469.__hash)
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158470 = this;
  return this__158470.meta
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158471 = this;
  return cljs.core.with_meta.call(null, cljs.core.ObjMap.EMPTY, this__158471.meta)
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__158472 = this;
  if(function() {
    var and__3860__auto____158473 = goog.isString(k);
    if(and__3860__auto____158473) {
      return!(cljs.core.scan_array.call(null, 1, k, this__158472.keys) == null)
    }else {
      return and__3860__auto____158473
    }
  }()) {
    var new_keys__158474 = this__158472.keys.slice();
    var new_strobj__158475 = cljs.core.obj_clone.call(null, this__158472.strobj, this__158472.keys);
    new_keys__158474.splice(cljs.core.scan_array.call(null, 1, k, new_keys__158474), 1);
    cljs.core.js_delete.call(null, new_strobj__158475, k);
    return new cljs.core.ObjMap(this__158472.meta, new_keys__158474, new_strobj__158475, this__158472.update_count + 1, null)
  }else {
    return coll
  }
};
cljs.core.ObjMap;
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], {}, 0, 0);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 32;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null)
};
cljs.core.HashMap = function(meta, count, hashobj, __hash) {
  this.meta = meta;
  this.count = count;
  this.hashobj = hashobj;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 15075087
};
cljs.core.HashMap.cljs$lang$type = true;
cljs.core.HashMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashMap")
};
cljs.core.HashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158480 = this;
  var h__2229__auto____158481 = this__158480.__hash;
  if(!(h__2229__auto____158481 == null)) {
    return h__2229__auto____158481
  }else {
    var h__2229__auto____158482 = cljs.core.hash_imap.call(null, coll);
    this__158480.__hash = h__2229__auto____158482;
    return h__2229__auto____158482
  }
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158483 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.HashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158484 = this;
  var bucket__158485 = this__158484.hashobj[cljs.core.hash.call(null, k)];
  var i__158486 = cljs.core.truth_(bucket__158485) ? cljs.core.scan_array.call(null, 2, k, bucket__158485) : null;
  if(cljs.core.truth_(i__158486)) {
    return bucket__158485[i__158486 + 1]
  }else {
    return not_found
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__158487 = this;
  var h__158488 = cljs.core.hash.call(null, k);
  var bucket__158489 = this__158487.hashobj[h__158488];
  if(cljs.core.truth_(bucket__158489)) {
    var new_bucket__158490 = bucket__158489.slice();
    var new_hashobj__158491 = goog.object.clone(this__158487.hashobj);
    new_hashobj__158491[h__158488] = new_bucket__158490;
    var temp__4009__auto____158492 = cljs.core.scan_array.call(null, 2, k, new_bucket__158490);
    if(cljs.core.truth_(temp__4009__auto____158492)) {
      var i__158493 = temp__4009__auto____158492;
      new_bucket__158490[i__158493 + 1] = v;
      return new cljs.core.HashMap(this__158487.meta, this__158487.count, new_hashobj__158491, null)
    }else {
      new_bucket__158490.push(k, v);
      return new cljs.core.HashMap(this__158487.meta, this__158487.count + 1, new_hashobj__158491, null)
    }
  }else {
    var new_hashobj__158494 = goog.object.clone(this__158487.hashobj);
    new_hashobj__158494[h__158488] = [k, v];
    return new cljs.core.HashMap(this__158487.meta, this__158487.count + 1, new_hashobj__158494, null)
  }
};
cljs.core.HashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__158495 = this;
  var bucket__158496 = this__158495.hashobj[cljs.core.hash.call(null, k)];
  var i__158497 = cljs.core.truth_(bucket__158496) ? cljs.core.scan_array.call(null, 2, k, bucket__158496) : null;
  if(cljs.core.truth_(i__158497)) {
    return true
  }else {
    return false
  }
};
cljs.core.HashMap.prototype.call = function() {
  var G__158522 = null;
  var G__158522__2 = function(this_sym158498, k) {
    var this__158500 = this;
    var this_sym158498__158501 = this;
    var coll__158502 = this_sym158498__158501;
    return coll__158502.cljs$core$ILookup$_lookup$arity$2(coll__158502, k)
  };
  var G__158522__3 = function(this_sym158499, k, not_found) {
    var this__158500 = this;
    var this_sym158499__158503 = this;
    var coll__158504 = this_sym158499__158503;
    return coll__158504.cljs$core$ILookup$_lookup$arity$3(coll__158504, k, not_found)
  };
  G__158522 = function(this_sym158499, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158522__2.call(this, this_sym158499, k);
      case 3:
        return G__158522__3.call(this, this_sym158499, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158522
}();
cljs.core.HashMap.prototype.apply = function(this_sym158478, args158479) {
  var this__158505 = this;
  return this_sym158478.call.apply(this_sym158478, [this_sym158478].concat(args158479.slice()))
};
cljs.core.HashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__158506 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.HashMap.prototype.toString = function() {
  var this__158507 = this;
  var this__158508 = this;
  return cljs.core.pr_str.call(null, this__158508)
};
cljs.core.HashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158509 = this;
  if(this__158509.count > 0) {
    var hashes__158510 = cljs.core.js_keys.call(null, this__158509.hashobj).sort();
    return cljs.core.mapcat.call(null, function(p1__158477_SHARP_) {
      return cljs.core.map.call(null, cljs.core.vec, cljs.core.partition.call(null, 2, this__158509.hashobj[p1__158477_SHARP_]))
    }, hashes__158510)
  }else {
    return null
  }
};
cljs.core.HashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158511 = this;
  return this__158511.count
};
cljs.core.HashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158512 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.HashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158513 = this;
  return new cljs.core.HashMap(meta, this__158513.count, this__158513.hashobj, this__158513.__hash)
};
cljs.core.HashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158514 = this;
  return this__158514.meta
};
cljs.core.HashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158515 = this;
  return cljs.core.with_meta.call(null, cljs.core.HashMap.EMPTY, this__158515.meta)
};
cljs.core.HashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__158516 = this;
  var h__158517 = cljs.core.hash.call(null, k);
  var bucket__158518 = this__158516.hashobj[h__158517];
  var i__158519 = cljs.core.truth_(bucket__158518) ? cljs.core.scan_array.call(null, 2, k, bucket__158518) : null;
  if(cljs.core.not.call(null, i__158519)) {
    return coll
  }else {
    var new_hashobj__158520 = goog.object.clone(this__158516.hashobj);
    if(3 > bucket__158518.length) {
      cljs.core.js_delete.call(null, new_hashobj__158520, h__158517)
    }else {
      var new_bucket__158521 = bucket__158518.slice();
      new_bucket__158521.splice(i__158519, 2);
      new_hashobj__158520[h__158517] = new_bucket__158521
    }
    return new cljs.core.HashMap(this__158516.meta, this__158516.count - 1, new_hashobj__158520, null)
  }
};
cljs.core.HashMap;
cljs.core.HashMap.EMPTY = new cljs.core.HashMap(null, 0, {}, 0);
cljs.core.HashMap.fromArrays = function(ks, vs) {
  var len__158523 = ks.length;
  var i__158524 = 0;
  var out__158525 = cljs.core.HashMap.EMPTY;
  while(true) {
    if(i__158524 < len__158523) {
      var G__158526 = i__158524 + 1;
      var G__158527 = cljs.core.assoc.call(null, out__158525, ks[i__158524], vs[i__158524]);
      i__158524 = G__158526;
      out__158525 = G__158527;
      continue
    }else {
      return out__158525
    }
    break
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr__158531 = m.arr;
  var len__158532 = arr__158531.length;
  var i__158533 = 0;
  while(true) {
    if(len__158532 <= i__158533) {
      return-1
    }else {
      if(cljs.core._EQ_.call(null, arr__158531[i__158533], k)) {
        return i__158533
      }else {
        if("\ufdd0'else") {
          var G__158534 = i__158533 + 2;
          i__158533 = G__158534;
          continue
        }else {
          return null
        }
      }
    }
    break
  }
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentArrayMap")
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__158537 = this;
  return new cljs.core.TransientArrayMap({}, this__158537.arr.length, this__158537.arr.slice())
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158538 = this;
  var h__2229__auto____158539 = this__158538.__hash;
  if(!(h__2229__auto____158539 == null)) {
    return h__2229__auto____158539
  }else {
    var h__2229__auto____158540 = cljs.core.hash_imap.call(null, coll);
    this__158538.__hash = h__2229__auto____158540;
    return h__2229__auto____158540
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158541 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158542 = this;
  var idx__158543 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__158543 === -1) {
    return not_found
  }else {
    return this__158542.arr[idx__158543 + 1]
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__158544 = this;
  var idx__158545 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__158545 === -1) {
    if(this__158544.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      return new cljs.core.PersistentArrayMap(this__158544.meta, this__158544.cnt + 1, function() {
        var G__158546__158547 = this__158544.arr.slice();
        G__158546__158547.push(k);
        G__158546__158547.push(v);
        return G__158546__158547
      }(), null)
    }else {
      return cljs.core.persistent_BANG_.call(null, cljs.core.assoc_BANG_.call(null, cljs.core.transient$.call(null, cljs.core.into.call(null, cljs.core.PersistentHashMap.EMPTY, coll)), k, v))
    }
  }else {
    if(v === this__158544.arr[idx__158545 + 1]) {
      return coll
    }else {
      if("\ufdd0'else") {
        return new cljs.core.PersistentArrayMap(this__158544.meta, this__158544.cnt, function() {
          var G__158548__158549 = this__158544.arr.slice();
          G__158548__158549[idx__158545 + 1] = v;
          return G__158548__158549
        }(), null)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__158550 = this;
  return!(cljs.core.array_map_index_of.call(null, coll, k) === -1)
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__158582 = null;
  var G__158582__2 = function(this_sym158551, k) {
    var this__158553 = this;
    var this_sym158551__158554 = this;
    var coll__158555 = this_sym158551__158554;
    return coll__158555.cljs$core$ILookup$_lookup$arity$2(coll__158555, k)
  };
  var G__158582__3 = function(this_sym158552, k, not_found) {
    var this__158553 = this;
    var this_sym158552__158556 = this;
    var coll__158557 = this_sym158552__158556;
    return coll__158557.cljs$core$ILookup$_lookup$arity$3(coll__158557, k, not_found)
  };
  G__158582 = function(this_sym158552, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158582__2.call(this, this_sym158552, k);
      case 3:
        return G__158582__3.call(this, this_sym158552, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158582
}();
cljs.core.PersistentArrayMap.prototype.apply = function(this_sym158535, args158536) {
  var this__158558 = this;
  return this_sym158535.call.apply(this_sym158535, [this_sym158535].concat(args158536.slice()))
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__158559 = this;
  var len__158560 = this__158559.arr.length;
  var i__158561 = 0;
  var init__158562 = init;
  while(true) {
    if(i__158561 < len__158560) {
      var init__158563 = f.call(null, init__158562, this__158559.arr[i__158561], this__158559.arr[i__158561 + 1]);
      if(cljs.core.reduced_QMARK_.call(null, init__158563)) {
        return cljs.core.deref.call(null, init__158563)
      }else {
        var G__158583 = i__158561 + 2;
        var G__158584 = init__158563;
        i__158561 = G__158583;
        init__158562 = G__158584;
        continue
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__158564 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var this__158565 = this;
  var this__158566 = this;
  return cljs.core.pr_str.call(null, this__158566)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158567 = this;
  if(this__158567.cnt > 0) {
    var len__158568 = this__158567.arr.length;
    var array_map_seq__158569 = function array_map_seq(i) {
      return new cljs.core.LazySeq(null, false, function() {
        if(i < len__158568) {
          return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([this__158567.arr[i], this__158567.arr[i + 1]], true), array_map_seq.call(null, i + 2))
        }else {
          return null
        }
      }, null)
    };
    return array_map_seq__158569.call(null, 0)
  }else {
    return null
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158570 = this;
  return this__158570.cnt
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158571 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158572 = this;
  return new cljs.core.PersistentArrayMap(meta, this__158572.cnt, this__158572.arr, this__158572.__hash)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158573 = this;
  return this__158573.meta
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158574 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentArrayMap.EMPTY, this__158574.meta)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__158575 = this;
  var idx__158576 = cljs.core.array_map_index_of.call(null, coll, k);
  if(idx__158576 >= 0) {
    var len__158577 = this__158575.arr.length;
    var new_len__158578 = len__158577 - 2;
    if(new_len__158578 === 0) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll)
    }else {
      var new_arr__158579 = cljs.core.make_array.call(null, new_len__158578);
      var s__158580 = 0;
      var d__158581 = 0;
      while(true) {
        if(s__158580 >= len__158577) {
          return new cljs.core.PersistentArrayMap(this__158575.meta, this__158575.cnt - 1, new_arr__158579, null)
        }else {
          if(cljs.core._EQ_.call(null, k, this__158575.arr[s__158580])) {
            var G__158585 = s__158580 + 2;
            var G__158586 = d__158581;
            s__158580 = G__158585;
            d__158581 = G__158586;
            continue
          }else {
            if("\ufdd0'else") {
              new_arr__158579[d__158581] = this__158575.arr[s__158580];
              new_arr__158579[d__158581 + 1] = this__158575.arr[s__158580 + 1];
              var G__158587 = s__158580 + 2;
              var G__158588 = d__158581 + 2;
              s__158580 = G__158587;
              d__158581 = G__158588;
              continue
            }else {
              return null
            }
          }
        }
        break
      }
    }
  }else {
    return coll
  }
};
cljs.core.PersistentArrayMap;
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], null);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 16;
cljs.core.PersistentArrayMap.fromArrays = function(ks, vs) {
  var len__158589 = cljs.core.count.call(null, ks);
  var i__158590 = 0;
  var out__158591 = cljs.core.transient$.call(null, cljs.core.PersistentArrayMap.EMPTY);
  while(true) {
    if(i__158590 < len__158589) {
      var G__158592 = i__158590 + 1;
      var G__158593 = cljs.core.assoc_BANG_.call(null, out__158591, ks[i__158590], vs[i__158590]);
      i__158590 = G__158592;
      out__158591 = G__158593;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__158591)
    }
    break
  }
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientArrayMap")
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__158594 = this;
  if(cljs.core.truth_(this__158594.editable_QMARK_)) {
    var idx__158595 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__158595 >= 0) {
      this__158594.arr[idx__158595] = this__158594.arr[this__158594.len - 2];
      this__158594.arr[idx__158595 + 1] = this__158594.arr[this__158594.len - 1];
      var G__158596__158597 = this__158594.arr;
      G__158596__158597.pop();
      G__158596__158597.pop();
      G__158596__158597;
      this__158594.len = this__158594.len - 2
    }else {
    }
    return tcoll
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__158598 = this;
  if(cljs.core.truth_(this__158598.editable_QMARK_)) {
    var idx__158599 = cljs.core.array_map_index_of.call(null, tcoll, key);
    if(idx__158599 === -1) {
      if(this__158598.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        this__158598.len = this__158598.len + 2;
        this__158598.arr.push(key);
        this__158598.arr.push(val);
        return tcoll
      }else {
        return cljs.core.assoc_BANG_.call(null, cljs.core.array__GT_transient_hash_map.call(null, this__158598.len, this__158598.arr), key, val)
      }
    }else {
      if(val === this__158598.arr[idx__158599 + 1]) {
        return tcoll
      }else {
        this__158598.arr[idx__158599 + 1] = val;
        return tcoll
      }
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__158600 = this;
  if(cljs.core.truth_(this__158600.editable_QMARK_)) {
    if(function() {
      var G__158601__158602 = o;
      if(G__158601__158602) {
        if(function() {
          var or__3862__auto____158603 = G__158601__158602.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3862__auto____158603) {
            return or__3862__auto____158603
          }else {
            return G__158601__158602.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__158601__158602.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__158601__158602)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__158601__158602)
      }
    }()) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__158604 = cljs.core.seq.call(null, o);
      var tcoll__158605 = tcoll;
      while(true) {
        var temp__4009__auto____158606 = cljs.core.first.call(null, es__158604);
        if(cljs.core.truth_(temp__4009__auto____158606)) {
          var e__158607 = temp__4009__auto____158606;
          var G__158613 = cljs.core.next.call(null, es__158604);
          var G__158614 = tcoll__158605.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll__158605, cljs.core.key.call(null, e__158607), cljs.core.val.call(null, e__158607));
          es__158604 = G__158613;
          tcoll__158605 = G__158614;
          continue
        }else {
          return tcoll__158605
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__158608 = this;
  if(cljs.core.truth_(this__158608.editable_QMARK_)) {
    this__158608.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, this__158608.len, 2), this__158608.arr, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__158609 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, k, null)
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__158610 = this;
  if(cljs.core.truth_(this__158610.editable_QMARK_)) {
    var idx__158611 = cljs.core.array_map_index_of.call(null, tcoll, k);
    if(idx__158611 === -1) {
      return not_found
    }else {
      return this__158610.arr[idx__158611 + 1]
    }
  }else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__158612 = this;
  if(cljs.core.truth_(this__158612.editable_QMARK_)) {
    return cljs.core.quot.call(null, this__158612.len, 2)
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap;
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out__158617 = cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY);
  var i__158618 = 0;
  while(true) {
    if(i__158618 < len) {
      var G__158619 = cljs.core.assoc_BANG_.call(null, out__158617, arr[i__158618], arr[i__158618 + 1]);
      var G__158620 = i__158618 + 2;
      out__158617 = G__158619;
      i__158618 = G__158620;
      continue
    }else {
      return out__158617
    }
    break
  }
};
cljs.core.Box = function(val) {
  this.val = val
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorPrSeq = function(this__2347__auto__) {
  return cljs.core.list.call(null, "cljs.core/Box")
};
cljs.core.Box;
cljs.core.key_test = function key_test(key, other) {
  if(goog.isString(key)) {
    return key === other
  }else {
    return cljs.core._EQ_.call(null, key, other)
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__158625__158626 = arr.slice();
    G__158625__158626[i] = a;
    return G__158625__158626
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__158627__158628 = arr.slice();
    G__158627__158628[i] = a;
    G__158627__158628[j] = b;
    return G__158627__158628
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  clone_and_set.cljs$lang$arity$3 = clone_and_set__3;
  clone_and_set.cljs$lang$arity$5 = clone_and_set__5;
  return clone_and_set
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr__158630 = cljs.core.make_array.call(null, arr.length - 2);
  cljs.core.array_copy.call(null, arr, 0, new_arr__158630, 0, 2 * i);
  cljs.core.array_copy.call(null, arr, 2 * (i + 1), new_arr__158630, 2 * i, new_arr__158630.length - 2 * i);
  return new_arr__158630
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count.call(null, bitmap & bit - 1)
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31)
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable__158633 = inode.ensure_editable(edit);
    editable__158633.arr[i] = a;
    return editable__158633
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable__158634 = inode.ensure_editable(edit);
    editable__158634.arr[i] = a;
    editable__158634.arr[j] = b;
    return editable__158634
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  edit_and_set.cljs$lang$arity$4 = edit_and_set__4;
  edit_and_set.cljs$lang$arity$6 = edit_and_set__6;
  return edit_and_set
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len__158641 = arr.length;
  var i__158642 = 0;
  var init__158643 = init;
  while(true) {
    if(i__158642 < len__158641) {
      var init__158646 = function() {
        var k__158644 = arr[i__158642];
        if(!(k__158644 == null)) {
          return f.call(null, init__158643, k__158644, arr[i__158642 + 1])
        }else {
          var node__158645 = arr[i__158642 + 1];
          if(!(node__158645 == null)) {
            return node__158645.kv_reduce(f, init__158643)
          }else {
            return init__158643
          }
        }
      }();
      if(cljs.core.reduced_QMARK_.call(null, init__158646)) {
        return cljs.core.deref.call(null, init__158646)
      }else {
        var G__158647 = i__158642 + 2;
        var G__158648 = init__158646;
        i__158642 = G__158647;
        init__158643 = G__158648;
        continue
      }
    }else {
      return init__158643
    }
    break
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/BitmapIndexedNode")
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var this__158649 = this;
  var inode__158650 = this;
  if(this__158649.bitmap === bit) {
    return null
  }else {
    var editable__158651 = inode__158650.ensure_editable(e);
    var earr__158652 = editable__158651.arr;
    var len__158653 = earr__158652.length;
    editable__158651.bitmap = bit ^ editable__158651.bitmap;
    cljs.core.array_copy.call(null, earr__158652, 2 * (i + 1), earr__158652, 2 * i, len__158653 - 2 * (i + 1));
    earr__158652[len__158653 - 2] = null;
    earr__158652[len__158653 - 1] = null;
    return editable__158651
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__158654 = this;
  var inode__158655 = this;
  var bit__158656 = 1 << (hash >>> shift & 31);
  var idx__158657 = cljs.core.bitmap_indexed_node_index.call(null, this__158654.bitmap, bit__158656);
  if((this__158654.bitmap & bit__158656) === 0) {
    var n__158658 = cljs.core.bit_count.call(null, this__158654.bitmap);
    if(2 * n__158658 < this__158654.arr.length) {
      var editable__158659 = inode__158655.ensure_editable(edit);
      var earr__158660 = editable__158659.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward.call(null, earr__158660, 2 * idx__158657, earr__158660, 2 * (idx__158657 + 1), 2 * (n__158658 - idx__158657));
      earr__158660[2 * idx__158657] = key;
      earr__158660[2 * idx__158657 + 1] = val;
      editable__158659.bitmap = editable__158659.bitmap | bit__158656;
      return editable__158659
    }else {
      if(n__158658 >= 16) {
        var nodes__158661 = cljs.core.make_array.call(null, 32);
        var jdx__158662 = hash >>> shift & 31;
        nodes__158661[jdx__158662] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i__158663 = 0;
        var j__158664 = 0;
        while(true) {
          if(i__158663 < 32) {
            if((this__158654.bitmap >>> i__158663 & 1) === 0) {
              var G__158717 = i__158663 + 1;
              var G__158718 = j__158664;
              i__158663 = G__158717;
              j__158664 = G__158718;
              continue
            }else {
              nodes__158661[i__158663] = !(this__158654.arr[j__158664] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, cljs.core.hash.call(null, this__158654.arr[j__158664]), this__158654.arr[j__158664], this__158654.arr[j__158664 + 1], added_leaf_QMARK_) : this__158654.arr[j__158664 + 1];
              var G__158719 = i__158663 + 1;
              var G__158720 = j__158664 + 2;
              i__158663 = G__158719;
              j__158664 = G__158720;
              continue
            }
          }else {
          }
          break
        }
        return new cljs.core.ArrayNode(edit, n__158658 + 1, nodes__158661)
      }else {
        if("\ufdd0'else") {
          var new_arr__158665 = cljs.core.make_array.call(null, 2 * (n__158658 + 4));
          cljs.core.array_copy.call(null, this__158654.arr, 0, new_arr__158665, 0, 2 * idx__158657);
          new_arr__158665[2 * idx__158657] = key;
          new_arr__158665[2 * idx__158657 + 1] = val;
          cljs.core.array_copy.call(null, this__158654.arr, 2 * idx__158657, new_arr__158665, 2 * (idx__158657 + 1), 2 * (n__158658 - idx__158657));
          added_leaf_QMARK_.val = true;
          var editable__158666 = inode__158655.ensure_editable(edit);
          editable__158666.arr = new_arr__158665;
          editable__158666.bitmap = editable__158666.bitmap | bit__158656;
          return editable__158666
        }else {
          return null
        }
      }
    }
  }else {
    var key_or_nil__158667 = this__158654.arr[2 * idx__158657];
    var val_or_node__158668 = this__158654.arr[2 * idx__158657 + 1];
    if(key_or_nil__158667 == null) {
      var n__158669 = val_or_node__158668.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__158669 === val_or_node__158668) {
        return inode__158655
      }else {
        return cljs.core.edit_and_set.call(null, inode__158655, edit, 2 * idx__158657 + 1, n__158669)
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__158667)) {
        if(val === val_or_node__158668) {
          return inode__158655
        }else {
          return cljs.core.edit_and_set.call(null, inode__158655, edit, 2 * idx__158657 + 1, val)
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return cljs.core.edit_and_set.call(null, inode__158655, edit, 2 * idx__158657, null, 2 * idx__158657 + 1, cljs.core.create_node.call(null, edit, shift + 5, key_or_nil__158667, val_or_node__158668, hash, key, val))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var this__158670 = this;
  var inode__158671 = this;
  return cljs.core.create_inode_seq.call(null, this__158670.arr)
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__158672 = this;
  var inode__158673 = this;
  var bit__158674 = 1 << (hash >>> shift & 31);
  if((this__158672.bitmap & bit__158674) === 0) {
    return inode__158673
  }else {
    var idx__158675 = cljs.core.bitmap_indexed_node_index.call(null, this__158672.bitmap, bit__158674);
    var key_or_nil__158676 = this__158672.arr[2 * idx__158675];
    var val_or_node__158677 = this__158672.arr[2 * idx__158675 + 1];
    if(key_or_nil__158676 == null) {
      var n__158678 = val_or_node__158677.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
      if(n__158678 === val_or_node__158677) {
        return inode__158673
      }else {
        if(!(n__158678 == null)) {
          return cljs.core.edit_and_set.call(null, inode__158673, edit, 2 * idx__158675 + 1, n__158678)
        }else {
          if(this__158672.bitmap === bit__158674) {
            return null
          }else {
            if("\ufdd0'else") {
              return inode__158673.edit_and_remove_pair(edit, bit__158674, idx__158675)
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__158676)) {
        removed_leaf_QMARK_[0] = true;
        return inode__158673.edit_and_remove_pair(edit, bit__158674, idx__158675)
      }else {
        if("\ufdd0'else") {
          return inode__158673
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var this__158679 = this;
  var inode__158680 = this;
  if(e === this__158679.edit) {
    return inode__158680
  }else {
    var n__158681 = cljs.core.bit_count.call(null, this__158679.bitmap);
    var new_arr__158682 = cljs.core.make_array.call(null, n__158681 < 0 ? 4 : 2 * (n__158681 + 1));
    cljs.core.array_copy.call(null, this__158679.arr, 0, new_arr__158682, 0, 2 * n__158681);
    return new cljs.core.BitmapIndexedNode(e, this__158679.bitmap, new_arr__158682)
  }
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var this__158683 = this;
  var inode__158684 = this;
  return cljs.core.inode_kv_reduce.call(null, this__158683.arr, f, init)
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__158685 = this;
  var inode__158686 = this;
  var bit__158687 = 1 << (hash >>> shift & 31);
  if((this__158685.bitmap & bit__158687) === 0) {
    return not_found
  }else {
    var idx__158688 = cljs.core.bitmap_indexed_node_index.call(null, this__158685.bitmap, bit__158687);
    var key_or_nil__158689 = this__158685.arr[2 * idx__158688];
    var val_or_node__158690 = this__158685.arr[2 * idx__158688 + 1];
    if(key_or_nil__158689 == null) {
      return val_or_node__158690.inode_find(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__158689)) {
        return cljs.core.PersistentVector.fromArray([key_or_nil__158689, val_or_node__158690], true)
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var this__158691 = this;
  var inode__158692 = this;
  var bit__158693 = 1 << (hash >>> shift & 31);
  if((this__158691.bitmap & bit__158693) === 0) {
    return inode__158692
  }else {
    var idx__158694 = cljs.core.bitmap_indexed_node_index.call(null, this__158691.bitmap, bit__158693);
    var key_or_nil__158695 = this__158691.arr[2 * idx__158694];
    var val_or_node__158696 = this__158691.arr[2 * idx__158694 + 1];
    if(key_or_nil__158695 == null) {
      var n__158697 = val_or_node__158696.inode_without(shift + 5, hash, key);
      if(n__158697 === val_or_node__158696) {
        return inode__158692
      }else {
        if(!(n__158697 == null)) {
          return new cljs.core.BitmapIndexedNode(null, this__158691.bitmap, cljs.core.clone_and_set.call(null, this__158691.arr, 2 * idx__158694 + 1, n__158697))
        }else {
          if(this__158691.bitmap === bit__158693) {
            return null
          }else {
            if("\ufdd0'else") {
              return new cljs.core.BitmapIndexedNode(null, this__158691.bitmap ^ bit__158693, cljs.core.remove_pair.call(null, this__158691.arr, idx__158694))
            }else {
              return null
            }
          }
        }
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__158695)) {
        return new cljs.core.BitmapIndexedNode(null, this__158691.bitmap ^ bit__158693, cljs.core.remove_pair.call(null, this__158691.arr, idx__158694))
      }else {
        if("\ufdd0'else") {
          return inode__158692
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__158698 = this;
  var inode__158699 = this;
  var bit__158700 = 1 << (hash >>> shift & 31);
  var idx__158701 = cljs.core.bitmap_indexed_node_index.call(null, this__158698.bitmap, bit__158700);
  if((this__158698.bitmap & bit__158700) === 0) {
    var n__158702 = cljs.core.bit_count.call(null, this__158698.bitmap);
    if(n__158702 >= 16) {
      var nodes__158703 = cljs.core.make_array.call(null, 32);
      var jdx__158704 = hash >>> shift & 31;
      nodes__158703[jdx__158704] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i__158705 = 0;
      var j__158706 = 0;
      while(true) {
        if(i__158705 < 32) {
          if((this__158698.bitmap >>> i__158705 & 1) === 0) {
            var G__158721 = i__158705 + 1;
            var G__158722 = j__158706;
            i__158705 = G__158721;
            j__158706 = G__158722;
            continue
          }else {
            nodes__158703[i__158705] = !(this__158698.arr[j__158706] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash.call(null, this__158698.arr[j__158706]), this__158698.arr[j__158706], this__158698.arr[j__158706 + 1], added_leaf_QMARK_) : this__158698.arr[j__158706 + 1];
            var G__158723 = i__158705 + 1;
            var G__158724 = j__158706 + 2;
            i__158705 = G__158723;
            j__158706 = G__158724;
            continue
          }
        }else {
        }
        break
      }
      return new cljs.core.ArrayNode(null, n__158702 + 1, nodes__158703)
    }else {
      var new_arr__158707 = cljs.core.make_array.call(null, 2 * (n__158702 + 1));
      cljs.core.array_copy.call(null, this__158698.arr, 0, new_arr__158707, 0, 2 * idx__158701);
      new_arr__158707[2 * idx__158701] = key;
      new_arr__158707[2 * idx__158701 + 1] = val;
      cljs.core.array_copy.call(null, this__158698.arr, 2 * idx__158701, new_arr__158707, 2 * (idx__158701 + 1), 2 * (n__158702 - idx__158701));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, this__158698.bitmap | bit__158700, new_arr__158707)
    }
  }else {
    var key_or_nil__158708 = this__158698.arr[2 * idx__158701];
    var val_or_node__158709 = this__158698.arr[2 * idx__158701 + 1];
    if(key_or_nil__158708 == null) {
      var n__158710 = val_or_node__158709.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if(n__158710 === val_or_node__158709) {
        return inode__158699
      }else {
        return new cljs.core.BitmapIndexedNode(null, this__158698.bitmap, cljs.core.clone_and_set.call(null, this__158698.arr, 2 * idx__158701 + 1, n__158710))
      }
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__158708)) {
        if(val === val_or_node__158709) {
          return inode__158699
        }else {
          return new cljs.core.BitmapIndexedNode(null, this__158698.bitmap, cljs.core.clone_and_set.call(null, this__158698.arr, 2 * idx__158701 + 1, val))
        }
      }else {
        if("\ufdd0'else") {
          added_leaf_QMARK_.val = true;
          return new cljs.core.BitmapIndexedNode(null, this__158698.bitmap, cljs.core.clone_and_set.call(null, this__158698.arr, 2 * idx__158701, null, 2 * idx__158701 + 1, cljs.core.create_node.call(null, shift + 5, key_or_nil__158708, val_or_node__158709, hash, key, val)))
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__158711 = this;
  var inode__158712 = this;
  var bit__158713 = 1 << (hash >>> shift & 31);
  if((this__158711.bitmap & bit__158713) === 0) {
    return not_found
  }else {
    var idx__158714 = cljs.core.bitmap_indexed_node_index.call(null, this__158711.bitmap, bit__158713);
    var key_or_nil__158715 = this__158711.arr[2 * idx__158714];
    var val_or_node__158716 = this__158711.arr[2 * idx__158714 + 1];
    if(key_or_nil__158715 == null) {
      return val_or_node__158716.inode_lookup(shift + 5, hash, key, not_found)
    }else {
      if(cljs.core.key_test.call(null, key, key_or_nil__158715)) {
        return val_or_node__158716
      }else {
        if("\ufdd0'else") {
          return not_found
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.BitmapIndexedNode;
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, cljs.core.make_array.call(null, 0));
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr__158732 = array_node.arr;
  var len__158733 = 2 * (array_node.cnt - 1);
  var new_arr__158734 = cljs.core.make_array.call(null, len__158733);
  var i__158735 = 0;
  var j__158736 = 1;
  var bitmap__158737 = 0;
  while(true) {
    if(i__158735 < len__158733) {
      if(function() {
        var and__3860__auto____158738 = !(i__158735 === idx);
        if(and__3860__auto____158738) {
          return!(arr__158732[i__158735] == null)
        }else {
          return and__3860__auto____158738
        }
      }()) {
        new_arr__158734[j__158736] = arr__158732[i__158735];
        var G__158739 = i__158735 + 1;
        var G__158740 = j__158736 + 2;
        var G__158741 = bitmap__158737 | 1 << i__158735;
        i__158735 = G__158739;
        j__158736 = G__158740;
        bitmap__158737 = G__158741;
        continue
      }else {
        var G__158742 = i__158735 + 1;
        var G__158743 = j__158736;
        var G__158744 = bitmap__158737;
        i__158735 = G__158742;
        j__158736 = G__158743;
        bitmap__158737 = G__158744;
        continue
      }
    }else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap__158737, new_arr__158734)
    }
    break
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNode")
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__158745 = this;
  var inode__158746 = this;
  var idx__158747 = hash >>> shift & 31;
  var node__158748 = this__158745.arr[idx__158747];
  if(node__158748 == null) {
    var editable__158749 = cljs.core.edit_and_set.call(null, inode__158746, edit, idx__158747, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable__158749.cnt = editable__158749.cnt + 1;
    return editable__158749
  }else {
    var n__158750 = node__158748.inode_assoc_BANG_(edit, shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__158750 === node__158748) {
      return inode__158746
    }else {
      return cljs.core.edit_and_set.call(null, inode__158746, edit, idx__158747, n__158750)
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var this__158751 = this;
  var inode__158752 = this;
  return cljs.core.create_array_node_seq.call(null, this__158751.arr)
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__158753 = this;
  var inode__158754 = this;
  var idx__158755 = hash >>> shift & 31;
  var node__158756 = this__158753.arr[idx__158755];
  if(node__158756 == null) {
    return inode__158754
  }else {
    var n__158757 = node__158756.inode_without_BANG_(edit, shift + 5, hash, key, removed_leaf_QMARK_);
    if(n__158757 === node__158756) {
      return inode__158754
    }else {
      if(n__158757 == null) {
        if(this__158753.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__158754, edit, idx__158755)
        }else {
          var editable__158758 = cljs.core.edit_and_set.call(null, inode__158754, edit, idx__158755, n__158757);
          editable__158758.cnt = editable__158758.cnt - 1;
          return editable__158758
        }
      }else {
        if("\ufdd0'else") {
          return cljs.core.edit_and_set.call(null, inode__158754, edit, idx__158755, n__158757)
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var this__158759 = this;
  var inode__158760 = this;
  if(e === this__158759.edit) {
    return inode__158760
  }else {
    return new cljs.core.ArrayNode(e, this__158759.cnt, this__158759.arr.slice())
  }
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var this__158761 = this;
  var inode__158762 = this;
  var len__158763 = this__158761.arr.length;
  var i__158764 = 0;
  var init__158765 = init;
  while(true) {
    if(i__158764 < len__158763) {
      var node__158766 = this__158761.arr[i__158764];
      if(!(node__158766 == null)) {
        var init__158767 = node__158766.kv_reduce(f, init__158765);
        if(cljs.core.reduced_QMARK_.call(null, init__158767)) {
          return cljs.core.deref.call(null, init__158767)
        }else {
          var G__158786 = i__158764 + 1;
          var G__158787 = init__158767;
          i__158764 = G__158786;
          init__158765 = G__158787;
          continue
        }
      }else {
        return null
      }
    }else {
      return init__158765
    }
    break
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__158768 = this;
  var inode__158769 = this;
  var idx__158770 = hash >>> shift & 31;
  var node__158771 = this__158768.arr[idx__158770];
  if(!(node__158771 == null)) {
    return node__158771.inode_find(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var this__158772 = this;
  var inode__158773 = this;
  var idx__158774 = hash >>> shift & 31;
  var node__158775 = this__158772.arr[idx__158774];
  if(!(node__158775 == null)) {
    var n__158776 = node__158775.inode_without(shift + 5, hash, key);
    if(n__158776 === node__158775) {
      return inode__158773
    }else {
      if(n__158776 == null) {
        if(this__158772.cnt <= 8) {
          return cljs.core.pack_array_node.call(null, inode__158773, null, idx__158774)
        }else {
          return new cljs.core.ArrayNode(null, this__158772.cnt - 1, cljs.core.clone_and_set.call(null, this__158772.arr, idx__158774, n__158776))
        }
      }else {
        if("\ufdd0'else") {
          return new cljs.core.ArrayNode(null, this__158772.cnt, cljs.core.clone_and_set.call(null, this__158772.arr, idx__158774, n__158776))
        }else {
          return null
        }
      }
    }
  }else {
    return inode__158773
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__158777 = this;
  var inode__158778 = this;
  var idx__158779 = hash >>> shift & 31;
  var node__158780 = this__158777.arr[idx__158779];
  if(node__158780 == null) {
    return new cljs.core.ArrayNode(null, this__158777.cnt + 1, cljs.core.clone_and_set.call(null, this__158777.arr, idx__158779, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)))
  }else {
    var n__158781 = node__158780.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if(n__158781 === node__158780) {
      return inode__158778
    }else {
      return new cljs.core.ArrayNode(null, this__158777.cnt, cljs.core.clone_and_set.call(null, this__158777.arr, idx__158779, n__158781))
    }
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__158782 = this;
  var inode__158783 = this;
  var idx__158784 = hash >>> shift & 31;
  var node__158785 = this__158782.arr[idx__158784];
  if(!(node__158785 == null)) {
    return node__158785.inode_lookup(shift + 5, hash, key, not_found)
  }else {
    return not_found
  }
};
cljs.core.ArrayNode;
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim__158790 = 2 * cnt;
  var i__158791 = 0;
  while(true) {
    if(i__158791 < lim__158790) {
      if(cljs.core.key_test.call(null, key, arr[i__158791])) {
        return i__158791
      }else {
        var G__158792 = i__158791 + 2;
        i__158791 = G__158792;
        continue
      }
    }else {
      return-1
    }
    break
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/HashCollisionNode")
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit, shift, hash, key, val, added_leaf_QMARK_) {
  var this__158793 = this;
  var inode__158794 = this;
  if(hash === this__158793.collision_hash) {
    var idx__158795 = cljs.core.hash_collision_node_find_index.call(null, this__158793.arr, this__158793.cnt, key);
    if(idx__158795 === -1) {
      if(this__158793.arr.length > 2 * this__158793.cnt) {
        var editable__158796 = cljs.core.edit_and_set.call(null, inode__158794, edit, 2 * this__158793.cnt, key, 2 * this__158793.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable__158796.cnt = editable__158796.cnt + 1;
        return editable__158796
      }else {
        var len__158797 = this__158793.arr.length;
        var new_arr__158798 = cljs.core.make_array.call(null, len__158797 + 2);
        cljs.core.array_copy.call(null, this__158793.arr, 0, new_arr__158798, 0, len__158797);
        new_arr__158798[len__158797] = key;
        new_arr__158798[len__158797 + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode__158794.ensure_editable_array(edit, this__158793.cnt + 1, new_arr__158798)
      }
    }else {
      if(this__158793.arr[idx__158795 + 1] === val) {
        return inode__158794
      }else {
        return cljs.core.edit_and_set.call(null, inode__158794, edit, idx__158795 + 1, val)
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(edit, 1 << (this__158793.collision_hash >>> shift & 31), [null, inode__158794, null, null])).inode_assoc_BANG_(edit, shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var this__158799 = this;
  var inode__158800 = this;
  return cljs.core.create_inode_seq.call(null, this__158799.arr)
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit, shift, hash, key, removed_leaf_QMARK_) {
  var this__158801 = this;
  var inode__158802 = this;
  var idx__158803 = cljs.core.hash_collision_node_find_index.call(null, this__158801.arr, this__158801.cnt, key);
  if(idx__158803 === -1) {
    return inode__158802
  }else {
    removed_leaf_QMARK_[0] = true;
    if(this__158801.cnt === 1) {
      return null
    }else {
      var editable__158804 = inode__158802.ensure_editable(edit);
      var earr__158805 = editable__158804.arr;
      earr__158805[idx__158803] = earr__158805[2 * this__158801.cnt - 2];
      earr__158805[idx__158803 + 1] = earr__158805[2 * this__158801.cnt - 1];
      earr__158805[2 * this__158801.cnt - 1] = null;
      earr__158805[2 * this__158801.cnt - 2] = null;
      editable__158804.cnt = editable__158804.cnt - 1;
      return editable__158804
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var this__158806 = this;
  var inode__158807 = this;
  if(e === this__158806.edit) {
    return inode__158807
  }else {
    var new_arr__158808 = cljs.core.make_array.call(null, 2 * (this__158806.cnt + 1));
    cljs.core.array_copy.call(null, this__158806.arr, 0, new_arr__158808, 0, 2 * this__158806.cnt);
    return new cljs.core.HashCollisionNode(e, this__158806.collision_hash, this__158806.cnt, new_arr__158808)
  }
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var this__158809 = this;
  var inode__158810 = this;
  return cljs.core.inode_kv_reduce.call(null, this__158809.arr, f, init)
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var this__158811 = this;
  var inode__158812 = this;
  var idx__158813 = cljs.core.hash_collision_node_find_index.call(null, this__158811.arr, this__158811.cnt, key);
  if(idx__158813 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__158811.arr[idx__158813])) {
      return cljs.core.PersistentVector.fromArray([this__158811.arr[idx__158813], this__158811.arr[idx__158813 + 1]], true)
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var this__158814 = this;
  var inode__158815 = this;
  var idx__158816 = cljs.core.hash_collision_node_find_index.call(null, this__158814.arr, this__158814.cnt, key);
  if(idx__158816 === -1) {
    return inode__158815
  }else {
    if(this__158814.cnt === 1) {
      return null
    }else {
      if("\ufdd0'else") {
        return new cljs.core.HashCollisionNode(null, this__158814.collision_hash, this__158814.cnt - 1, cljs.core.remove_pair.call(null, this__158814.arr, cljs.core.quot.call(null, idx__158816, 2)))
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var this__158817 = this;
  var inode__158818 = this;
  if(hash === this__158817.collision_hash) {
    var idx__158819 = cljs.core.hash_collision_node_find_index.call(null, this__158817.arr, this__158817.cnt, key);
    if(idx__158819 === -1) {
      var len__158820 = this__158817.arr.length;
      var new_arr__158821 = cljs.core.make_array.call(null, len__158820 + 2);
      cljs.core.array_copy.call(null, this__158817.arr, 0, new_arr__158821, 0, len__158820);
      new_arr__158821[len__158820] = key;
      new_arr__158821[len__158820 + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, this__158817.collision_hash, this__158817.cnt + 1, new_arr__158821)
    }else {
      if(cljs.core._EQ_.call(null, this__158817.arr[idx__158819], val)) {
        return inode__158818
      }else {
        return new cljs.core.HashCollisionNode(null, this__158817.collision_hash, this__158817.cnt, cljs.core.clone_and_set.call(null, this__158817.arr, idx__158819 + 1, val))
      }
    }
  }else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (this__158817.collision_hash >>> shift & 31), [null, inode__158818])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_)
  }
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var this__158822 = this;
  var inode__158823 = this;
  var idx__158824 = cljs.core.hash_collision_node_find_index.call(null, this__158822.arr, this__158822.cnt, key);
  if(idx__158824 < 0) {
    return not_found
  }else {
    if(cljs.core.key_test.call(null, key, this__158822.arr[idx__158824])) {
      return this__158822.arr[idx__158824 + 1]
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var this__158825 = this;
  var inode__158826 = this;
  if(e === this__158825.edit) {
    this__158825.arr = array;
    this__158825.cnt = count;
    return inode__158826
  }else {
    return new cljs.core.HashCollisionNode(this__158825.edit, this__158825.collision_hash, count, array)
  }
};
cljs.core.HashCollisionNode;
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash__158831 = cljs.core.hash.call(null, key1);
    if(key1hash__158831 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__158831, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___158832 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash__158831, key1, val1, added_leaf_QMARK___158832).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK___158832)
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash__158833 = cljs.core.hash.call(null, key1);
    if(key1hash__158833 === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash__158833, 2, [key1, val1, key2, val2])
    }else {
      var added_leaf_QMARK___158834 = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash__158833, key1, val1, added_leaf_QMARK___158834).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK___158834)
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_node.cljs$lang$arity$6 = create_node__6;
  create_node.cljs$lang$arity$7 = create_node__7;
  return create_node
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/NodeSeq")
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158835 = this;
  var h__2229__auto____158836 = this__158835.__hash;
  if(!(h__2229__auto____158836 == null)) {
    return h__2229__auto____158836
  }else {
    var h__2229__auto____158837 = cljs.core.hash_coll.call(null, coll);
    this__158835.__hash = h__2229__auto____158837;
    return h__2229__auto____158837
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158838 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.NodeSeq.prototype.toString = function() {
  var this__158839 = this;
  var this__158840 = this;
  return cljs.core.pr_str.call(null, this__158840)
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__158841 = this;
  return this$
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__158842 = this;
  if(this__158842.s == null) {
    return cljs.core.PersistentVector.fromArray([this__158842.nodes[this__158842.i], this__158842.nodes[this__158842.i + 1]], true)
  }else {
    return cljs.core.first.call(null, this__158842.s)
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__158843 = this;
  if(this__158843.s == null) {
    return cljs.core.create_inode_seq.call(null, this__158843.nodes, this__158843.i + 2, null)
  }else {
    return cljs.core.create_inode_seq.call(null, this__158843.nodes, this__158843.i, cljs.core.next.call(null, this__158843.s))
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158844 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158845 = this;
  return new cljs.core.NodeSeq(meta, this__158845.nodes, this__158845.i, this__158845.s, this__158845.__hash)
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158846 = this;
  return this__158846.meta
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158847 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__158847.meta)
};
cljs.core.NodeSeq;
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.call(null, nodes, 0, null)
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if(s == null) {
      var len__158854 = nodes.length;
      var j__158855 = i;
      while(true) {
        if(j__158855 < len__158854) {
          if(!(nodes[j__158855] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j__158855, null, null)
          }else {
            var temp__4009__auto____158856 = nodes[j__158855 + 1];
            if(cljs.core.truth_(temp__4009__auto____158856)) {
              var node__158857 = temp__4009__auto____158856;
              var temp__4009__auto____158858 = node__158857.inode_seq();
              if(cljs.core.truth_(temp__4009__auto____158858)) {
                var node_seq__158859 = temp__4009__auto____158858;
                return new cljs.core.NodeSeq(null, nodes, j__158855 + 2, node_seq__158859, null)
              }else {
                var G__158860 = j__158855 + 2;
                j__158855 = G__158860;
                continue
              }
            }else {
              var G__158861 = j__158855 + 2;
              j__158855 = G__158861;
              continue
            }
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null)
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_inode_seq.cljs$lang$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$lang$arity$3 = create_inode_seq__3;
  return create_inode_seq
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/ArrayNodeSeq")
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158862 = this;
  var h__2229__auto____158863 = this__158862.__hash;
  if(!(h__2229__auto____158863 == null)) {
    return h__2229__auto____158863
  }else {
    var h__2229__auto____158864 = cljs.core.hash_coll.call(null, coll);
    this__158862.__hash = h__2229__auto____158864;
    return h__2229__auto____158864
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158865 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var this__158866 = this;
  var this__158867 = this;
  return cljs.core.pr_str.call(null, this__158867)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__158868 = this;
  return this$
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var this__158869 = this;
  return cljs.core.first.call(null, this__158869.s)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var this__158870 = this;
  return cljs.core.create_array_node_seq.call(null, null, this__158870.nodes, this__158870.i, cljs.core.next.call(null, this__158870.s))
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158871 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158872 = this;
  return new cljs.core.ArrayNodeSeq(meta, this__158872.nodes, this__158872.i, this__158872.s, this__158872.__hash)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158873 = this;
  return this__158873.meta
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158874 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__158874.meta)
};
cljs.core.ArrayNodeSeq;
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.call(null, null, nodes, 0, null)
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if(s == null) {
      var len__158881 = nodes.length;
      var j__158882 = i;
      while(true) {
        if(j__158882 < len__158881) {
          var temp__4009__auto____158883 = nodes[j__158882];
          if(cljs.core.truth_(temp__4009__auto____158883)) {
            var nj__158884 = temp__4009__auto____158883;
            var temp__4009__auto____158885 = nj__158884.inode_seq();
            if(cljs.core.truth_(temp__4009__auto____158885)) {
              var ns__158886 = temp__4009__auto____158885;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j__158882 + 1, ns__158886, null)
            }else {
              var G__158887 = j__158882 + 1;
              j__158882 = G__158887;
              continue
            }
          }else {
            var G__158888 = j__158882 + 1;
            j__158882 = G__158888;
            continue
          }
        }else {
          return null
        }
        break
      }
    }else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null)
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s)
    }
    throw"Invalid arity: " + arguments.length;
  };
  create_array_node_seq.cljs$lang$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$lang$arity$4 = create_array_node_seq__4;
  return create_array_node_seq
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 16123663
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashMap")
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__158891 = this;
  return new cljs.core.TransientHashMap({}, this__158891.root, this__158891.cnt, this__158891.has_nil_QMARK_, this__158891.nil_val)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158892 = this;
  var h__2229__auto____158893 = this__158892.__hash;
  if(!(h__2229__auto____158893 == null)) {
    return h__2229__auto____158893
  }else {
    var h__2229__auto____158894 = cljs.core.hash_imap.call(null, coll);
    this__158892.__hash = h__2229__auto____158894;
    return h__2229__auto____158894
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__158895 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__158896 = this;
  if(k == null) {
    if(this__158896.has_nil_QMARK_) {
      return this__158896.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__158896.root == null) {
      return not_found
    }else {
      if("\ufdd0'else") {
        return this__158896.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__158897 = this;
  if(k == null) {
    if(function() {
      var and__3860__auto____158898 = this__158897.has_nil_QMARK_;
      if(and__3860__auto____158898) {
        return v === this__158897.nil_val
      }else {
        return and__3860__auto____158898
      }
    }()) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__158897.meta, this__158897.has_nil_QMARK_ ? this__158897.cnt : this__158897.cnt + 1, this__158897.root, true, v, null)
    }
  }else {
    var added_leaf_QMARK___158899 = new cljs.core.Box(false);
    var new_root__158900 = (this__158897.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__158897.root).inode_assoc(0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___158899);
    if(new_root__158900 === this__158897.root) {
      return coll
    }else {
      return new cljs.core.PersistentHashMap(this__158897.meta, added_leaf_QMARK___158899.val ? this__158897.cnt + 1 : this__158897.cnt, new_root__158900, this__158897.has_nil_QMARK_, this__158897.nil_val, null)
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__158901 = this;
  if(k == null) {
    return this__158901.has_nil_QMARK_
  }else {
    if(this__158901.root == null) {
      return false
    }else {
      if("\ufdd0'else") {
        return!(this__158901.root.inode_lookup(0, cljs.core.hash.call(null, k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel)
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__158924 = null;
  var G__158924__2 = function(this_sym158902, k) {
    var this__158904 = this;
    var this_sym158902__158905 = this;
    var coll__158906 = this_sym158902__158905;
    return coll__158906.cljs$core$ILookup$_lookup$arity$2(coll__158906, k)
  };
  var G__158924__3 = function(this_sym158903, k, not_found) {
    var this__158904 = this;
    var this_sym158903__158907 = this;
    var coll__158908 = this_sym158903__158907;
    return coll__158908.cljs$core$ILookup$_lookup$arity$3(coll__158908, k, not_found)
  };
  G__158924 = function(this_sym158903, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__158924__2.call(this, this_sym158903, k);
      case 3:
        return G__158924__3.call(this, this_sym158903, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__158924
}();
cljs.core.PersistentHashMap.prototype.apply = function(this_sym158889, args158890) {
  var this__158909 = this;
  return this_sym158889.call.apply(this_sym158889, [this_sym158889].concat(args158890.slice()))
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__158910 = this;
  var init__158911 = this__158910.has_nil_QMARK_ ? f.call(null, init, null, this__158910.nil_val) : init;
  if(cljs.core.reduced_QMARK_.call(null, init__158911)) {
    return cljs.core.deref.call(null, init__158911)
  }else {
    if(!(this__158910.root == null)) {
      return this__158910.root.kv_reduce(f, init__158911)
    }else {
      if("\ufdd0'else") {
        return init__158911
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__158912 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var this__158913 = this;
  var this__158914 = this;
  return cljs.core.pr_str.call(null, this__158914)
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__158915 = this;
  if(this__158915.cnt > 0) {
    var s__158916 = !(this__158915.root == null) ? this__158915.root.inode_seq() : null;
    if(this__158915.has_nil_QMARK_) {
      return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([null, this__158915.nil_val], true), s__158916)
    }else {
      return s__158916
    }
  }else {
    return null
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158917 = this;
  return this__158917.cnt
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158918 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158919 = this;
  return new cljs.core.PersistentHashMap(meta, this__158919.cnt, this__158919.root, this__158919.has_nil_QMARK_, this__158919.nil_val, this__158919.__hash)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158920 = this;
  return this__158920.meta
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__158921 = this;
  return cljs.core._with_meta.call(null, cljs.core.PersistentHashMap.EMPTY, this__158921.meta)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__158922 = this;
  if(k == null) {
    if(this__158922.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(this__158922.meta, this__158922.cnt - 1, this__158922.root, false, null, null)
    }else {
      return coll
    }
  }else {
    if(this__158922.root == null) {
      return coll
    }else {
      if("\ufdd0'else") {
        var new_root__158923 = this__158922.root.inode_without(0, cljs.core.hash.call(null, k), k);
        if(new_root__158923 === this__158922.root) {
          return coll
        }else {
          return new cljs.core.PersistentHashMap(this__158922.meta, this__158922.cnt - 1, new_root__158923, this__158922.has_nil_QMARK_, this__158922.nil_val, null)
        }
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentHashMap;
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, 0);
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len__158925 = ks.length;
  var i__158926 = 0;
  var out__158927 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
  while(true) {
    if(i__158926 < len__158925) {
      var G__158928 = i__158926 + 1;
      var G__158929 = cljs.core.assoc_BANG_.call(null, out__158927, ks[i__158926], vs[i__158926]);
      i__158926 = G__158928;
      out__158927 = G__158929;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__158927)
    }
    break
  }
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 14;
  this.cljs$lang$protocol_mask$partition0$ = 258
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashMap")
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var this__158930 = this;
  return tcoll.without_BANG_(key)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var this__158931 = this;
  return tcoll.assoc_BANG_(key, val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var this__158932 = this;
  return tcoll.conj_BANG_(val)
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__158933 = this;
  return tcoll.persistent_BANG_()
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var this__158934 = this;
  if(k == null) {
    if(this__158934.has_nil_QMARK_) {
      return this__158934.nil_val
    }else {
      return null
    }
  }else {
    if(this__158934.root == null) {
      return null
    }else {
      return this__158934.root.inode_lookup(0, cljs.core.hash.call(null, k), k)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var this__158935 = this;
  if(k == null) {
    if(this__158935.has_nil_QMARK_) {
      return this__158935.nil_val
    }else {
      return not_found
    }
  }else {
    if(this__158935.root == null) {
      return not_found
    }else {
      return this__158935.root.inode_lookup(0, cljs.core.hash.call(null, k), k, not_found)
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158936 = this;
  if(this__158936.edit) {
    return this__158936.count
  }else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var this__158937 = this;
  var tcoll__158938 = this;
  if(this__158937.edit) {
    if(function() {
      var G__158939__158940 = o;
      if(G__158939__158940) {
        if(function() {
          var or__3862__auto____158941 = G__158939__158940.cljs$lang$protocol_mask$partition0$ & 2048;
          if(or__3862__auto____158941) {
            return or__3862__auto____158941
          }else {
            return G__158939__158940.cljs$core$IMapEntry$
          }
        }()) {
          return true
        }else {
          if(!G__158939__158940.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__158939__158940)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, cljs.core.IMapEntry, G__158939__158940)
      }
    }()) {
      return tcoll__158938.assoc_BANG_(cljs.core.key.call(null, o), cljs.core.val.call(null, o))
    }else {
      var es__158942 = cljs.core.seq.call(null, o);
      var tcoll__158943 = tcoll__158938;
      while(true) {
        var temp__4009__auto____158944 = cljs.core.first.call(null, es__158942);
        if(cljs.core.truth_(temp__4009__auto____158944)) {
          var e__158945 = temp__4009__auto____158944;
          var G__158956 = cljs.core.next.call(null, es__158942);
          var G__158957 = tcoll__158943.assoc_BANG_(cljs.core.key.call(null, e__158945), cljs.core.val.call(null, e__158945));
          es__158942 = G__158956;
          tcoll__158943 = G__158957;
          continue
        }else {
          return tcoll__158943
        }
        break
      }
    }
  }else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var this__158946 = this;
  var tcoll__158947 = this;
  if(this__158946.edit) {
    if(k == null) {
      if(this__158946.nil_val === v) {
      }else {
        this__158946.nil_val = v
      }
      if(this__158946.has_nil_QMARK_) {
      }else {
        this__158946.count = this__158946.count + 1;
        this__158946.has_nil_QMARK_ = true
      }
      return tcoll__158947
    }else {
      var added_leaf_QMARK___158948 = new cljs.core.Box(false);
      var node__158949 = (this__158946.root == null ? cljs.core.BitmapIndexedNode.EMPTY : this__158946.root).inode_assoc_BANG_(this__158946.edit, 0, cljs.core.hash.call(null, k), k, v, added_leaf_QMARK___158948);
      if(node__158949 === this__158946.root) {
      }else {
        this__158946.root = node__158949
      }
      if(added_leaf_QMARK___158948.val) {
        this__158946.count = this__158946.count + 1
      }else {
      }
      return tcoll__158947
    }
  }else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var this__158950 = this;
  var tcoll__158951 = this;
  if(this__158950.edit) {
    if(k == null) {
      if(this__158950.has_nil_QMARK_) {
        this__158950.has_nil_QMARK_ = false;
        this__158950.nil_val = null;
        this__158950.count = this__158950.count - 1;
        return tcoll__158951
      }else {
        return tcoll__158951
      }
    }else {
      if(this__158950.root == null) {
        return tcoll__158951
      }else {
        var removed_leaf_QMARK___158952 = new cljs.core.Box(false);
        var node__158953 = this__158950.root.inode_without_BANG_(this__158950.edit, 0, cljs.core.hash.call(null, k), k, removed_leaf_QMARK___158952);
        if(node__158953 === this__158950.root) {
        }else {
          this__158950.root = node__158953
        }
        if(cljs.core.truth_(removed_leaf_QMARK___158952[0])) {
          this__158950.count = this__158950.count - 1
        }else {
        }
        return tcoll__158951
      }
    }
  }else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var this__158954 = this;
  var tcoll__158955 = this;
  if(this__158954.edit) {
    this__158954.edit = null;
    return new cljs.core.PersistentHashMap(null, this__158954.count, this__158954.root, this__158954.has_nil_QMARK_, this__158954.nil_val, null)
  }else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap;
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t__158960 = node;
  var stack__158961 = stack;
  while(true) {
    if(!(t__158960 == null)) {
      var G__158962 = ascending_QMARK_ ? t__158960.left : t__158960.right;
      var G__158963 = cljs.core.conj.call(null, stack__158961, t__158960);
      t__158960 = G__158962;
      stack__158961 = G__158963;
      continue
    }else {
      return stack__158961
    }
    break
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850570
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMapSeq")
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158964 = this;
  var h__2229__auto____158965 = this__158964.__hash;
  if(!(h__2229__auto____158965 == null)) {
    return h__2229__auto____158965
  }else {
    var h__2229__auto____158966 = cljs.core.hash_coll.call(null, coll);
    this__158964.__hash = h__2229__auto____158966;
    return h__2229__auto____158966
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__158967 = this;
  return cljs.core.cons.call(null, o, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var this__158968 = this;
  var this__158969 = this;
  return cljs.core.pr_str.call(null, this__158969)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var this__158970 = this;
  return this$
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__158971 = this;
  if(this__158971.cnt < 0) {
    return cljs.core.count.call(null, cljs.core.next.call(null, coll)) + 1
  }else {
    return this__158971.cnt
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var this__158972 = this;
  return cljs.core.peek.call(null, this__158972.stack)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var this__158973 = this;
  var t__158974 = cljs.core.first.call(null, this__158973.stack);
  var next_stack__158975 = cljs.core.tree_map_seq_push.call(null, this__158973.ascending_QMARK_ ? t__158974.right : t__158974.left, cljs.core.next.call(null, this__158973.stack), this__158973.ascending_QMARK_);
  if(!(next_stack__158975 == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack__158975, this__158973.ascending_QMARK_, this__158973.cnt - 1, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__158976 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__158977 = this;
  return new cljs.core.PersistentTreeMapSeq(meta, this__158977.stack, this__158977.ascending_QMARK_, this__158977.cnt, this__158977.__hash)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__158978 = this;
  return this__158978.meta
};
cljs.core.PersistentTreeMapSeq;
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push.call(null, tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null)
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, ins, right, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, ins, right, null)
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins)) {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.right)) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null)
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, ins.left)) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null)
      }else {
        if("\ufdd0'else") {
          return new cljs.core.BlackNode(key, val, left, ins, null)
        }else {
          return null
        }
      }
    }
  }else {
    return new cljs.core.BlackNode(key, val, left, ins, null)
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right)) {
      return cljs.core.balance_right.call(null, key, val, del, right.redden())
    }else {
      if(function() {
        var and__3860__auto____158980 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right);
        if(and__3860__auto____158980) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, right.left)
        }else {
          return and__3860__auto____158980
        }
      }()) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right.call(null, right.key, right.val, right.left.right, right.right.redden()), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, del)) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left)) {
      return cljs.core.balance_left.call(null, key, val, left.redden(), del)
    }else {
      if(function() {
        var and__3860__auto____158982 = cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left);
        if(and__3860__auto____158982) {
          return cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, left.right)
        }else {
          return and__3860__auto____158982
        }
      }()) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left.call(null, left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null)
      }else {
        if("\ufdd0'else") {
          throw new Error("red-black tree invariant violation");
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__158986 = f.call(null, init, node.key, node.val);
  if(cljs.core.reduced_QMARK_.call(null, init__158986)) {
    return cljs.core.deref.call(null, init__158986)
  }else {
    var init__158987 = !(node.left == null) ? tree_map_kv_reduce.call(null, node.left, f, init__158986) : init__158986;
    if(cljs.core.reduced_QMARK_.call(null, init__158987)) {
      return cljs.core.deref.call(null, init__158987)
    }else {
      var init__158988 = !(node.right == null) ? tree_map_kv_reduce.call(null, node.right, f, init__158987) : init__158987;
      if(cljs.core.reduced_QMARK_.call(null, init__158988)) {
        return cljs.core.deref.call(null, init__158988)
      }else {
        return init__158988
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/BlackNode")
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__158991 = this;
  var h__2229__auto____158992 = this__158991.__hash;
  if(!(h__2229__auto____158992 == null)) {
    return h__2229__auto____158992
  }else {
    var h__2229__auto____158993 = cljs.core.hash_coll.call(null, coll);
    this__158991.__hash = h__2229__auto____158993;
    return h__2229__auto____158993
  }
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__158994 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__158995 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__158996 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__158996.key, this__158996.val], true), k, v)
};
cljs.core.BlackNode.prototype.call = function() {
  var G__159044 = null;
  var G__159044__2 = function(this_sym158997, k) {
    var this__158999 = this;
    var this_sym158997__159000 = this;
    var node__159001 = this_sym158997__159000;
    return node__159001.cljs$core$ILookup$_lookup$arity$2(node__159001, k)
  };
  var G__159044__3 = function(this_sym158998, k, not_found) {
    var this__158999 = this;
    var this_sym158998__159002 = this;
    var node__159003 = this_sym158998__159002;
    return node__159003.cljs$core$ILookup$_lookup$arity$3(node__159003, k, not_found)
  };
  G__159044 = function(this_sym158998, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__159044__2.call(this, this_sym158998, k);
      case 3:
        return G__159044__3.call(this, this_sym158998, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159044
}();
cljs.core.BlackNode.prototype.apply = function(this_sym158989, args158990) {
  var this__159004 = this;
  return this_sym158989.call.apply(this_sym158989, [this_sym158989].concat(args158990.slice()))
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__159005 = this;
  return cljs.core.PersistentVector.fromArray([this__159005.key, this__159005.val, o], true)
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__159006 = this;
  return this__159006.key
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__159007 = this;
  return this__159007.val
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var this__159008 = this;
  var node__159009 = this;
  return ins.balance_right(node__159009)
};
cljs.core.BlackNode.prototype.redden = function() {
  var this__159010 = this;
  var node__159011 = this;
  return new cljs.core.RedNode(this__159010.key, this__159010.val, this__159010.left, this__159010.right, null)
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var this__159012 = this;
  var node__159013 = this;
  return cljs.core.balance_right_del.call(null, this__159012.key, this__159012.val, this__159012.left, del)
};
cljs.core.BlackNode.prototype.replace = function(key, val, left, right) {
  var this__159014 = this;
  var node__159015 = this;
  return new cljs.core.BlackNode(key, val, left, right, null)
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var this__159016 = this;
  var node__159017 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__159017, f, init)
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var this__159018 = this;
  var node__159019 = this;
  return cljs.core.balance_left_del.call(null, this__159018.key, this__159018.val, del, this__159018.right)
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var this__159020 = this;
  var node__159021 = this;
  return ins.balance_left(node__159021)
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var this__159022 = this;
  var node__159023 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node__159023, parent.right, null)
};
cljs.core.BlackNode.prototype.toString = function() {
  var G__159045 = null;
  var G__159045__0 = function() {
    var this__159024 = this;
    var this__159026 = this;
    return cljs.core.pr_str.call(null, this__159026)
  };
  G__159045 = function() {
    switch(arguments.length) {
      case 0:
        return G__159045__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159045
}();
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var this__159027 = this;
  var node__159028 = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__159028, null)
};
cljs.core.BlackNode.prototype.blacken = function() {
  var this__159029 = this;
  var node__159030 = this;
  return node__159030
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__159031 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__159032 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__159033 = this;
  return cljs.core.list.call(null, this__159033.key, this__159033.val)
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__159034 = this;
  return 2
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__159035 = this;
  return this__159035.val
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__159036 = this;
  return cljs.core.PersistentVector.fromArray([this__159036.key], true)
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__159037 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__159037.key, this__159037.val], true), n, v)
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__159038 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__159039 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__159039.key, this__159039.val], true), meta)
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__159040 = this;
  return null
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__159041 = this;
  if(n === 0) {
    return this__159041.key
  }else {
    if(n === 1) {
      return this__159041.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__159042 = this;
  if(n === 0) {
    return this__159042.key
  }else {
    if(n === 1) {
      return this__159042.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__159043 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.BlackNode;
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/RedNode")
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__159048 = this;
  var h__2229__auto____159049 = this__159048.__hash;
  if(!(h__2229__auto____159049 == null)) {
    return h__2229__auto____159049
  }else {
    var h__2229__auto____159050 = cljs.core.hash_coll.call(null, coll);
    this__159048.__hash = h__2229__auto____159050;
    return h__2229__auto____159050
  }
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var this__159051 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, null)
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var this__159052 = this;
  return node.cljs$core$IIndexed$_nth$arity$3(node, k, not_found)
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var this__159053 = this;
  return cljs.core.assoc.call(null, cljs.core.PersistentVector.fromArray([this__159053.key, this__159053.val], true), k, v)
};
cljs.core.RedNode.prototype.call = function() {
  var G__159101 = null;
  var G__159101__2 = function(this_sym159054, k) {
    var this__159056 = this;
    var this_sym159054__159057 = this;
    var node__159058 = this_sym159054__159057;
    return node__159058.cljs$core$ILookup$_lookup$arity$2(node__159058, k)
  };
  var G__159101__3 = function(this_sym159055, k, not_found) {
    var this__159056 = this;
    var this_sym159055__159059 = this;
    var node__159060 = this_sym159055__159059;
    return node__159060.cljs$core$ILookup$_lookup$arity$3(node__159060, k, not_found)
  };
  G__159101 = function(this_sym159055, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__159101__2.call(this, this_sym159055, k);
      case 3:
        return G__159101__3.call(this, this_sym159055, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159101
}();
cljs.core.RedNode.prototype.apply = function(this_sym159046, args159047) {
  var this__159061 = this;
  return this_sym159046.call.apply(this_sym159046, [this_sym159046].concat(args159047.slice()))
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var this__159062 = this;
  return cljs.core.PersistentVector.fromArray([this__159062.key, this__159062.val, o], true)
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var this__159063 = this;
  return this__159063.key
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var this__159064 = this;
  return this__159064.val
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var this__159065 = this;
  var node__159066 = this;
  return new cljs.core.RedNode(this__159065.key, this__159065.val, this__159065.left, ins, null)
};
cljs.core.RedNode.prototype.redden = function() {
  var this__159067 = this;
  var node__159068 = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var this__159069 = this;
  var node__159070 = this;
  return new cljs.core.RedNode(this__159069.key, this__159069.val, this__159069.left, del, null)
};
cljs.core.RedNode.prototype.replace = function(key, val, left, right) {
  var this__159071 = this;
  var node__159072 = this;
  return new cljs.core.RedNode(key, val, left, right, null)
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var this__159073 = this;
  var node__159074 = this;
  return cljs.core.tree_map_kv_reduce.call(null, node__159074, f, init)
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var this__159075 = this;
  var node__159076 = this;
  return new cljs.core.RedNode(this__159075.key, this__159075.val, del, this__159075.right, null)
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var this__159077 = this;
  var node__159078 = this;
  return new cljs.core.RedNode(this__159077.key, this__159077.val, ins, this__159077.right, null)
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var this__159079 = this;
  var node__159080 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__159079.left)) {
    return new cljs.core.RedNode(this__159079.key, this__159079.val, this__159079.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, this__159079.right, parent.right, null), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__159079.right)) {
      return new cljs.core.RedNode(this__159079.right.key, this__159079.right.val, new cljs.core.BlackNode(this__159079.key, this__159079.val, this__159079.left, this__159079.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, this__159079.right.right, parent.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, node__159080, parent.right, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.toString = function() {
  var G__159102 = null;
  var G__159102__0 = function() {
    var this__159081 = this;
    var this__159083 = this;
    return cljs.core.pr_str.call(null, this__159083)
  };
  G__159102 = function() {
    switch(arguments.length) {
      case 0:
        return G__159102__0.call(this)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159102
}();
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var this__159084 = this;
  var node__159085 = this;
  if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__159084.right)) {
    return new cljs.core.RedNode(this__159084.key, this__159084.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__159084.left, null), this__159084.right.blacken(), null)
  }else {
    if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, this__159084.left)) {
      return new cljs.core.RedNode(this__159084.left.key, this__159084.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, this__159084.left.left, null), new cljs.core.BlackNode(this__159084.key, this__159084.val, this__159084.left.right, this__159084.right, null), null)
    }else {
      if("\ufdd0'else") {
        return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node__159085, null)
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.blacken = function() {
  var this__159086 = this;
  var node__159087 = this;
  return new cljs.core.BlackNode(this__159086.key, this__159086.val, this__159086.left, this__159086.right, null)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var this__159088 = this;
  return cljs.core.ci_reduce.call(null, node, f)
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var this__159089 = this;
  return cljs.core.ci_reduce.call(null, node, f, start)
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var this__159090 = this;
  return cljs.core.list.call(null, this__159090.key, this__159090.val)
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var this__159091 = this;
  return 2
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var this__159092 = this;
  return this__159092.val
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var this__159093 = this;
  return cljs.core.PersistentVector.fromArray([this__159093.key], true)
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var this__159094 = this;
  return cljs.core._assoc_n.call(null, cljs.core.PersistentVector.fromArray([this__159094.key, this__159094.val], true), n, v)
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__159095 = this;
  return cljs.core.equiv_sequential.call(null, coll, other)
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var this__159096 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([this__159096.key, this__159096.val], true), meta)
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var this__159097 = this;
  return null
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var this__159098 = this;
  if(n === 0) {
    return this__159098.key
  }else {
    if(n === 1) {
      return this__159098.val
    }else {
      if("\ufdd0'else") {
        return null
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var this__159099 = this;
  if(n === 0) {
    return this__159099.key
  }else {
    if(n === 1) {
      return this__159099.val
    }else {
      if("\ufdd0'else") {
        return not_found
      }else {
        return null
      }
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var this__159100 = this;
  return cljs.core.PersistentVector.EMPTY
};
cljs.core.RedNode;
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if(tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null)
  }else {
    var c__159106 = comp.call(null, k, tree.key);
    if(c__159106 === 0) {
      found[0] = tree;
      return null
    }else {
      if(c__159106 < 0) {
        var ins__159107 = tree_map_add.call(null, comp, tree.left, k, v, found);
        if(!(ins__159107 == null)) {
          return tree.add_left(ins__159107)
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var ins__159108 = tree_map_add.call(null, comp, tree.right, k, v, found);
          if(!(ins__159108 == null)) {
            return tree.add_right(ins__159108)
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if(left == null) {
    return right
  }else {
    if(right == null) {
      return left
    }else {
      if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, left)) {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          var app__159111 = tree_map_append.call(null, left.right, right.left);
          if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__159111)) {
            return new cljs.core.RedNode(app__159111.key, app__159111.val, new cljs.core.RedNode(left.key, left.val, left.left, app__159111.left, null), new cljs.core.RedNode(right.key, right.val, app__159111.right, right.right, null), null)
          }else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app__159111, right.right, null), null)
          }
        }else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append.call(null, left.right, right), null)
        }
      }else {
        if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, right)) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append.call(null, left, right.left), right.right, null)
        }else {
          if("\ufdd0'else") {
            var app__159112 = tree_map_append.call(null, left.right, right.left);
            if(cljs.core.instance_QMARK_.call(null, cljs.core.RedNode, app__159112)) {
              return new cljs.core.RedNode(app__159112.key, app__159112.val, new cljs.core.BlackNode(left.key, left.val, left.left, app__159112.left, null), new cljs.core.BlackNode(right.key, right.val, app__159112.right, right.right, null), null)
            }else {
              return cljs.core.balance_left_del.call(null, left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app__159112, right.right, null))
            }
          }else {
            return null
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if(!(tree == null)) {
    var c__159118 = comp.call(null, k, tree.key);
    if(c__159118 === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append.call(null, tree.left, tree.right)
    }else {
      if(c__159118 < 0) {
        var del__159119 = tree_map_remove.call(null, comp, tree.left, k, found);
        if(function() {
          var or__3862__auto____159120 = !(del__159119 == null);
          if(or__3862__auto____159120) {
            return or__3862__auto____159120
          }else {
            return!(found[0] == null)
          }
        }()) {
          if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.left)) {
            return cljs.core.balance_left_del.call(null, tree.key, tree.val, del__159119, tree.right)
          }else {
            return new cljs.core.RedNode(tree.key, tree.val, del__159119, tree.right, null)
          }
        }else {
          return null
        }
      }else {
        if("\ufdd0'else") {
          var del__159121 = tree_map_remove.call(null, comp, tree.right, k, found);
          if(function() {
            var or__3862__auto____159122 = !(del__159121 == null);
            if(or__3862__auto____159122) {
              return or__3862__auto____159122
            }else {
              return!(found[0] == null)
            }
          }()) {
            if(cljs.core.instance_QMARK_.call(null, cljs.core.BlackNode, tree.right)) {
              return cljs.core.balance_right_del.call(null, tree.key, tree.val, tree.left, del__159121)
            }else {
              return new cljs.core.RedNode(tree.key, tree.val, tree.left, del__159121, null)
            }
          }else {
            return null
          }
        }else {
          return null
        }
      }
    }
  }else {
    return null
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk__159125 = tree.key;
  var c__159126 = comp.call(null, k, tk__159125);
  if(c__159126 === 0) {
    return tree.replace(tk__159125, v, tree.left, tree.right)
  }else {
    if(c__159126 < 0) {
      return tree.replace(tk__159125, tree.val, tree_map_replace.call(null, comp, tree.left, k, v), tree.right)
    }else {
      if("\ufdd0'else") {
        return tree.replace(tk__159125, tree.val, tree.left, tree_map_replace.call(null, comp, tree.right, k, v))
      }else {
        return null
      }
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 418776847
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeMap")
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__159129 = this;
  var h__2229__auto____159130 = this__159129.__hash;
  if(!(h__2229__auto____159130 == null)) {
    return h__2229__auto____159130
  }else {
    var h__2229__auto____159131 = cljs.core.hash_imap.call(null, coll);
    this__159129.__hash = h__2229__auto____159131;
    return h__2229__auto____159131
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var this__159132 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, k, null)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var this__159133 = this;
  var n__159134 = coll.entry_at(k);
  if(!(n__159134 == null)) {
    return n__159134.val
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var this__159135 = this;
  var found__159136 = [null];
  var t__159137 = cljs.core.tree_map_add.call(null, this__159135.comp, this__159135.tree, k, v, found__159136);
  if(t__159137 == null) {
    var found_node__159138 = cljs.core.nth.call(null, found__159136, 0);
    if(cljs.core._EQ_.call(null, v, found_node__159138.val)) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__159135.comp, cljs.core.tree_map_replace.call(null, this__159135.comp, this__159135.tree, k, v), this__159135.cnt, this__159135.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__159135.comp, t__159137.blacken(), this__159135.cnt + 1, this__159135.meta, null)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var this__159139 = this;
  return!(coll.entry_at(k) == null)
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__159173 = null;
  var G__159173__2 = function(this_sym159140, k) {
    var this__159142 = this;
    var this_sym159140__159143 = this;
    var coll__159144 = this_sym159140__159143;
    return coll__159144.cljs$core$ILookup$_lookup$arity$2(coll__159144, k)
  };
  var G__159173__3 = function(this_sym159141, k, not_found) {
    var this__159142 = this;
    var this_sym159141__159145 = this;
    var coll__159146 = this_sym159141__159145;
    return coll__159146.cljs$core$ILookup$_lookup$arity$3(coll__159146, k, not_found)
  };
  G__159173 = function(this_sym159141, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__159173__2.call(this, this_sym159141, k);
      case 3:
        return G__159173__3.call(this, this_sym159141, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159173
}();
cljs.core.PersistentTreeMap.prototype.apply = function(this_sym159127, args159128) {
  var this__159147 = this;
  return this_sym159127.call.apply(this_sym159127, [this_sym159127].concat(args159128.slice()))
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var this__159148 = this;
  if(!(this__159148.tree == null)) {
    return cljs.core.tree_map_kv_reduce.call(null, this__159148.tree, f, init)
  }else {
    return init
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var this__159149 = this;
  if(cljs.core.vector_QMARK_.call(null, entry)) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, cljs.core._nth.call(null, entry, 0), cljs.core._nth.call(null, entry, 1))
  }else {
    return cljs.core.reduce.call(null, cljs.core._conj, coll, entry)
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__159150 = this;
  if(this__159150.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__159150.tree, false, this__159150.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var this__159151 = this;
  var this__159152 = this;
  return cljs.core.pr_str.call(null, this__159152)
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var this__159153 = this;
  var coll__159154 = this;
  var t__159155 = this__159153.tree;
  while(true) {
    if(!(t__159155 == null)) {
      var c__159156 = this__159153.comp.call(null, k, t__159155.key);
      if(c__159156 === 0) {
        return t__159155
      }else {
        if(c__159156 < 0) {
          var G__159174 = t__159155.left;
          t__159155 = G__159174;
          continue
        }else {
          if("\ufdd0'else") {
            var G__159175 = t__159155.right;
            t__159155 = G__159175;
            continue
          }else {
            return null
          }
        }
      }
    }else {
      return null
    }
    break
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__159157 = this;
  if(this__159157.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__159157.tree, ascending_QMARK_, this__159157.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__159158 = this;
  if(this__159158.cnt > 0) {
    var stack__159159 = null;
    var t__159160 = this__159158.tree;
    while(true) {
      if(!(t__159160 == null)) {
        var c__159161 = this__159158.comp.call(null, k, t__159160.key);
        if(c__159161 === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.call(null, stack__159159, t__159160), ascending_QMARK_, -1, null)
        }else {
          if(cljs.core.truth_(ascending_QMARK_)) {
            if(c__159161 < 0) {
              var G__159176 = cljs.core.conj.call(null, stack__159159, t__159160);
              var G__159177 = t__159160.left;
              stack__159159 = G__159176;
              t__159160 = G__159177;
              continue
            }else {
              var G__159178 = stack__159159;
              var G__159179 = t__159160.right;
              stack__159159 = G__159178;
              t__159160 = G__159179;
              continue
            }
          }else {
            if("\ufdd0'else") {
              if(c__159161 > 0) {
                var G__159180 = cljs.core.conj.call(null, stack__159159, t__159160);
                var G__159181 = t__159160.right;
                stack__159159 = G__159180;
                t__159160 = G__159181;
                continue
              }else {
                var G__159182 = stack__159159;
                var G__159183 = t__159160.left;
                stack__159159 = G__159182;
                t__159160 = G__159183;
                continue
              }
            }else {
              return null
            }
          }
        }
      }else {
        if(stack__159159 == null) {
          return new cljs.core.PersistentTreeMapSeq(null, stack__159159, ascending_QMARK_, -1, null)
        }else {
          return null
        }
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__159162 = this;
  return cljs.core.key.call(null, entry)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__159163 = this;
  return this__159163.comp
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__159164 = this;
  if(this__159164.cnt > 0) {
    return cljs.core.create_tree_map_seq.call(null, this__159164.tree, true, this__159164.cnt)
  }else {
    return null
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__159165 = this;
  return this__159165.cnt
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__159166 = this;
  return cljs.core.equiv_map.call(null, coll, other)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__159167 = this;
  return new cljs.core.PersistentTreeMap(this__159167.comp, this__159167.tree, this__159167.cnt, meta, this__159167.__hash)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__159168 = this;
  return this__159168.meta
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__159169 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeMap.EMPTY, this__159169.meta)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var this__159170 = this;
  var found__159171 = [null];
  var t__159172 = cljs.core.tree_map_remove.call(null, this__159170.comp, this__159170.tree, k, found__159171);
  if(t__159172 == null) {
    if(cljs.core.nth.call(null, found__159171, 0) == null) {
      return coll
    }else {
      return new cljs.core.PersistentTreeMap(this__159170.comp, null, 0, this__159170.meta, null)
    }
  }else {
    return new cljs.core.PersistentTreeMap(this__159170.comp, t__159172.blacken(), this__159170.cnt - 1, this__159170.meta, null)
  }
};
cljs.core.PersistentTreeMap;
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, 0);
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in__159186 = cljs.core.seq.call(null, keyvals);
    var out__159187 = cljs.core.transient$.call(null, cljs.core.PersistentHashMap.EMPTY);
    while(true) {
      if(in__159186) {
        var G__159188 = cljs.core.nnext.call(null, in__159186);
        var G__159189 = cljs.core.assoc_BANG_.call(null, out__159187, cljs.core.first.call(null, in__159186), cljs.core.second.call(null, in__159186));
        in__159186 = G__159188;
        out__159187 = G__159189;
        continue
      }else {
        return cljs.core.persistent_BANG_.call(null, out__159187)
      }
      break
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return hash_map__delegate.call(this, keyvals)
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__159190) {
    var keyvals = cljs.core.seq(arglist__159190);
    return hash_map__delegate(keyvals)
  };
  hash_map.cljs$lang$arity$variadic = hash_map__delegate;
  return hash_map
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot.call(null, cljs.core.count.call(null, keyvals), 2), cljs.core.apply.call(null, cljs.core.array, keyvals), null)
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return array_map__delegate.call(this, keyvals)
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__159191) {
    var keyvals = cljs.core.seq(arglist__159191);
    return array_map__delegate(keyvals)
  };
  array_map.cljs$lang$arity$variadic = array_map__delegate;
  return array_map
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks__159195 = [];
    var obj__159196 = {};
    var kvs__159197 = cljs.core.seq.call(null, keyvals);
    while(true) {
      if(kvs__159197) {
        ks__159195.push(cljs.core.first.call(null, kvs__159197));
        obj__159196[cljs.core.first.call(null, kvs__159197)] = cljs.core.second.call(null, kvs__159197);
        var G__159198 = cljs.core.nnext.call(null, kvs__159197);
        kvs__159197 = G__159198;
        continue
      }else {
        return cljs.core.ObjMap.fromObject.call(null, ks__159195, obj__159196)
      }
      break
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return obj_map__delegate.call(this, keyvals)
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__159199) {
    var keyvals = cljs.core.seq(arglist__159199);
    return obj_map__delegate(keyvals)
  };
  obj_map.cljs$lang$arity$variadic = obj_map__delegate;
  return obj_map
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in__159202 = cljs.core.seq.call(null, keyvals);
    var out__159203 = cljs.core.PersistentTreeMap.EMPTY;
    while(true) {
      if(in__159202) {
        var G__159204 = cljs.core.nnext.call(null, in__159202);
        var G__159205 = cljs.core.assoc.call(null, out__159203, cljs.core.first.call(null, in__159202), cljs.core.second.call(null, in__159202));
        in__159202 = G__159204;
        out__159203 = G__159205;
        continue
      }else {
        return out__159203
      }
      break
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_map__delegate.call(this, keyvals)
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__159206) {
    var keyvals = cljs.core.seq(arglist__159206);
    return sorted_map__delegate(keyvals)
  };
  sorted_map.cljs$lang$arity$variadic = sorted_map__delegate;
  return sorted_map
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in__159209 = cljs.core.seq.call(null, keyvals);
    var out__159210 = new cljs.core.PersistentTreeMap(comparator, null, 0, null, 0);
    while(true) {
      if(in__159209) {
        var G__159211 = cljs.core.nnext.call(null, in__159209);
        var G__159212 = cljs.core.assoc.call(null, out__159210, cljs.core.first.call(null, in__159209), cljs.core.second.call(null, in__159209));
        in__159209 = G__159211;
        out__159210 = G__159212;
        continue
      }else {
        return out__159210
      }
      break
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if(goog.isDef(var_args)) {
      keyvals = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals)
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__159213) {
    var comparator = cljs.core.first(arglist__159213);
    var keyvals = cljs.core.rest(arglist__159213);
    return sorted_map_by__delegate(comparator, keyvals)
  };
  sorted_map_by.cljs$lang$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by
}();
cljs.core.keys = function keys(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.first, hash_map))
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key.call(null, map_entry)
};
cljs.core.vals = function vals(hash_map) {
  return cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.second, hash_map))
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val.call(null, map_entry)
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      return cljs.core.reduce.call(null, function(p1__159214_SHARP_, p2__159215_SHARP_) {
        return cljs.core.conj.call(null, function() {
          var or__3862__auto____159217 = p1__159214_SHARP_;
          if(cljs.core.truth_(or__3862__auto____159217)) {
            return or__3862__auto____159217
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), p2__159215_SHARP_)
      }, maps)
    }else {
      return null
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return merge__delegate.call(this, maps)
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__159218) {
    var maps = cljs.core.seq(arglist__159218);
    return merge__delegate(maps)
  };
  merge.cljs$lang$arity$variadic = merge__delegate;
  return merge
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if(cljs.core.truth_(cljs.core.some.call(null, cljs.core.identity, maps))) {
      var merge_entry__159226 = function(m, e) {
        var k__159224 = cljs.core.first.call(null, e);
        var v__159225 = cljs.core.second.call(null, e);
        if(cljs.core.contains_QMARK_.call(null, m, k__159224)) {
          return cljs.core.assoc.call(null, m, k__159224, f.call(null, cljs.core._lookup.call(null, m, k__159224, null), v__159225))
        }else {
          return cljs.core.assoc.call(null, m, k__159224, v__159225)
        }
      };
      var merge2__159228 = function(m1, m2) {
        return cljs.core.reduce.call(null, merge_entry__159226, function() {
          var or__3862__auto____159227 = m1;
          if(cljs.core.truth_(or__3862__auto____159227)) {
            return or__3862__auto____159227
          }else {
            return cljs.core.ObjMap.EMPTY
          }
        }(), cljs.core.seq.call(null, m2))
      };
      return cljs.core.reduce.call(null, merge2__159228, maps)
    }else {
      return null
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if(goog.isDef(var_args)) {
      maps = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return merge_with__delegate.call(this, f, maps)
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__159229) {
    var f = cljs.core.first(arglist__159229);
    var maps = cljs.core.rest(arglist__159229);
    return merge_with__delegate(f, maps)
  };
  merge_with.cljs$lang$arity$variadic = merge_with__delegate;
  return merge_with
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret__159234 = cljs.core.ObjMap.EMPTY;
  var keys__159235 = cljs.core.seq.call(null, keyseq);
  while(true) {
    if(keys__159235) {
      var key__159236 = cljs.core.first.call(null, keys__159235);
      var entry__159237 = cljs.core._lookup.call(null, map, key__159236, "\ufdd0'cljs.core/not-found");
      var G__159238 = cljs.core.not_EQ_.call(null, entry__159237, "\ufdd0'cljs.core/not-found") ? cljs.core.assoc.call(null, ret__159234, key__159236, entry__159237) : ret__159234;
      var G__159239 = cljs.core.next.call(null, keys__159235);
      ret__159234 = G__159238;
      keys__159235 = G__159239;
      continue
    }else {
      return ret__159234
    }
    break
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 15077647
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentHashSet")
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var this__159243 = this;
  return new cljs.core.TransientHashSet(cljs.core.transient$.call(null, this__159243.hash_map))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__159244 = this;
  var h__2229__auto____159245 = this__159244.__hash;
  if(!(h__2229__auto____159245 == null)) {
    return h__2229__auto____159245
  }else {
    var h__2229__auto____159246 = cljs.core.hash_iset.call(null, coll);
    this__159244.__hash = h__2229__auto____159246;
    return h__2229__auto____159246
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__159247 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__159248 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__159248.hash_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__159269 = null;
  var G__159269__2 = function(this_sym159249, k) {
    var this__159251 = this;
    var this_sym159249__159252 = this;
    var coll__159253 = this_sym159249__159252;
    return coll__159253.cljs$core$ILookup$_lookup$arity$2(coll__159253, k)
  };
  var G__159269__3 = function(this_sym159250, k, not_found) {
    var this__159251 = this;
    var this_sym159250__159254 = this;
    var coll__159255 = this_sym159250__159254;
    return coll__159255.cljs$core$ILookup$_lookup$arity$3(coll__159255, k, not_found)
  };
  G__159269 = function(this_sym159250, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__159269__2.call(this, this_sym159250, k);
      case 3:
        return G__159269__3.call(this, this_sym159250, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159269
}();
cljs.core.PersistentHashSet.prototype.apply = function(this_sym159241, args159242) {
  var this__159256 = this;
  return this_sym159241.call.apply(this_sym159241, [this_sym159241].concat(args159242.slice()))
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__159257 = this;
  return new cljs.core.PersistentHashSet(this__159257.meta, cljs.core.assoc.call(null, this__159257.hash_map, o, null), null)
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var this__159258 = this;
  var this__159259 = this;
  return cljs.core.pr_str.call(null, this__159259)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__159260 = this;
  return cljs.core.keys.call(null, this__159260.hash_map)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__159261 = this;
  return new cljs.core.PersistentHashSet(this__159261.meta, cljs.core.dissoc.call(null, this__159261.hash_map, v), null)
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__159262 = this;
  return cljs.core.count.call(null, cljs.core.seq.call(null, coll))
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__159263 = this;
  var and__3860__auto____159264 = cljs.core.set_QMARK_.call(null, other);
  if(and__3860__auto____159264) {
    var and__3860__auto____159265 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3860__auto____159265) {
      return cljs.core.every_QMARK_.call(null, function(p1__159240_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__159240_SHARP_)
      }, other)
    }else {
      return and__3860__auto____159265
    }
  }else {
    return and__3860__auto____159264
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__159266 = this;
  return new cljs.core.PersistentHashSet(meta, this__159266.hash_map, this__159266.__hash)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__159267 = this;
  return this__159267.meta
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__159268 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentHashSet.EMPTY, this__159268.meta)
};
cljs.core.PersistentHashSet;
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.hash_map.call(null), 0);
cljs.core.PersistentHashSet.fromArray = function(items) {
  var len__159270 = cljs.core.count.call(null, items);
  var i__159271 = 0;
  var out__159272 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
  while(true) {
    if(i__159271 < len__159270) {
      var G__159273 = i__159271 + 1;
      var G__159274 = cljs.core.conj_BANG_.call(null, out__159272, items[i__159271]);
      i__159271 = G__159273;
      out__159272 = G__159274;
      continue
    }else {
      return cljs.core.persistent_BANG_.call(null, out__159272)
    }
    break
  }
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 34
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/TransientHashSet")
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__159292 = null;
  var G__159292__2 = function(this_sym159278, k) {
    var this__159280 = this;
    var this_sym159278__159281 = this;
    var tcoll__159282 = this_sym159278__159281;
    if(cljs.core._lookup.call(null, this__159280.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null
    }else {
      return k
    }
  };
  var G__159292__3 = function(this_sym159279, k, not_found) {
    var this__159280 = this;
    var this_sym159279__159283 = this;
    var tcoll__159284 = this_sym159279__159283;
    if(cljs.core._lookup.call(null, this__159280.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found
    }else {
      return k
    }
  };
  G__159292 = function(this_sym159279, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__159292__2.call(this, this_sym159279, k);
      case 3:
        return G__159292__3.call(this, this_sym159279, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159292
}();
cljs.core.TransientHashSet.prototype.apply = function(this_sym159276, args159277) {
  var this__159285 = this;
  return this_sym159276.call.apply(this_sym159276, [this_sym159276].concat(args159277.slice()))
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var this__159286 = this;
  return tcoll.cljs$core$ILookup$_lookup$arity$3(tcoll, v, null)
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var this__159287 = this;
  if(cljs.core._lookup.call(null, this__159287.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found
  }else {
    return v
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var this__159288 = this;
  return cljs.core.count.call(null, this__159288.transient_map)
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var this__159289 = this;
  this__159289.transient_map = cljs.core.dissoc_BANG_.call(null, this__159289.transient_map, v);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var this__159290 = this;
  this__159290.transient_map = cljs.core.assoc_BANG_.call(null, this__159290.transient_map, o, null);
  return tcoll
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var this__159291 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_.call(null, this__159291.transient_map), null)
};
cljs.core.TransientHashSet;
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 417730831
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/PersistentTreeSet")
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var this__159295 = this;
  var h__2229__auto____159296 = this__159295.__hash;
  if(!(h__2229__auto____159296 == null)) {
    return h__2229__auto____159296
  }else {
    var h__2229__auto____159297 = cljs.core.hash_iset.call(null, coll);
    this__159295.__hash = h__2229__auto____159297;
    return h__2229__auto____159297
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var this__159298 = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(coll, v, null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var this__159299 = this;
  if(cljs.core.truth_(cljs.core._contains_key_QMARK_.call(null, this__159299.tree_map, v))) {
    return v
  }else {
    return not_found
  }
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__159325 = null;
  var G__159325__2 = function(this_sym159300, k) {
    var this__159302 = this;
    var this_sym159300__159303 = this;
    var coll__159304 = this_sym159300__159303;
    return coll__159304.cljs$core$ILookup$_lookup$arity$2(coll__159304, k)
  };
  var G__159325__3 = function(this_sym159301, k, not_found) {
    var this__159302 = this;
    var this_sym159301__159305 = this;
    var coll__159306 = this_sym159301__159305;
    return coll__159306.cljs$core$ILookup$_lookup$arity$3(coll__159306, k, not_found)
  };
  G__159325 = function(this_sym159301, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__159325__2.call(this, this_sym159301, k);
      case 3:
        return G__159325__3.call(this, this_sym159301, k, not_found)
    }
    throw"Invalid arity: " + arguments.length;
  };
  return G__159325
}();
cljs.core.PersistentTreeSet.prototype.apply = function(this_sym159293, args159294) {
  var this__159307 = this;
  return this_sym159293.call.apply(this_sym159293, [this_sym159293].concat(args159294.slice()))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var this__159308 = this;
  return new cljs.core.PersistentTreeSet(this__159308.meta, cljs.core.assoc.call(null, this__159308.tree_map, o, null), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var this__159309 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core.rseq.call(null, this__159309.tree_map))
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var this__159310 = this;
  var this__159311 = this;
  return cljs.core.pr_str.call(null, this__159311)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var this__159312 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq.call(null, this__159312.tree_map, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var this__159313 = this;
  return cljs.core.map.call(null, cljs.core.key, cljs.core._sorted_seq_from.call(null, this__159313.tree_map, k, ascending_QMARK_))
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var this__159314 = this;
  return entry
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var this__159315 = this;
  return cljs.core._comparator.call(null, this__159315.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var this__159316 = this;
  return cljs.core.keys.call(null, this__159316.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var this__159317 = this;
  return new cljs.core.PersistentTreeSet(this__159317.meta, cljs.core.dissoc.call(null, this__159317.tree_map, v), null)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var this__159318 = this;
  return cljs.core.count.call(null, this__159318.tree_map)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var this__159319 = this;
  var and__3860__auto____159320 = cljs.core.set_QMARK_.call(null, other);
  if(and__3860__auto____159320) {
    var and__3860__auto____159321 = cljs.core.count.call(null, coll) === cljs.core.count.call(null, other);
    if(and__3860__auto____159321) {
      return cljs.core.every_QMARK_.call(null, function(p1__159275_SHARP_) {
        return cljs.core.contains_QMARK_.call(null, coll, p1__159275_SHARP_)
      }, other)
    }else {
      return and__3860__auto____159321
    }
  }else {
    return and__3860__auto____159320
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta) {
  var this__159322 = this;
  return new cljs.core.PersistentTreeSet(meta, this__159322.tree_map, this__159322.__hash)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var this__159323 = this;
  return this__159323.meta
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var this__159324 = this;
  return cljs.core.with_meta.call(null, cljs.core.PersistentTreeSet.EMPTY, this__159324.meta)
};
cljs.core.PersistentTreeSet;
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map.call(null), 0);
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY
  };
  var hash_set__1 = function() {
    var G__159330__delegate = function(keys) {
      var in__159328 = cljs.core.seq.call(null, keys);
      var out__159329 = cljs.core.transient$.call(null, cljs.core.PersistentHashSet.EMPTY);
      while(true) {
        if(cljs.core.seq.call(null, in__159328)) {
          var G__159331 = cljs.core.next.call(null, in__159328);
          var G__159332 = cljs.core.conj_BANG_.call(null, out__159329, cljs.core.first.call(null, in__159328));
          in__159328 = G__159331;
          out__159329 = G__159332;
          continue
        }else {
          return cljs.core.persistent_BANG_.call(null, out__159329)
        }
        break
      }
    };
    var G__159330 = function(var_args) {
      var keys = null;
      if(goog.isDef(var_args)) {
        keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__159330__delegate.call(this, keys)
    };
    G__159330.cljs$lang$maxFixedArity = 0;
    G__159330.cljs$lang$applyTo = function(arglist__159333) {
      var keys = cljs.core.seq(arglist__159333);
      return G__159330__delegate(keys)
    };
    G__159330.cljs$lang$arity$variadic = G__159330__delegate;
    return G__159330
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        return hash_set__1.cljs$lang$arity$variadic(cljs.core.array_seq(arguments, 0))
    }
    throw"Invalid arity: " + arguments.length;
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$lang$arity$0 = hash_set__0;
  hash_set.cljs$lang$arity$variadic = hash_set__1.cljs$lang$arity$variadic;
  return hash_set
}();
cljs.core.set = function set(coll) {
  return cljs.core.apply.call(null, cljs.core.hash_set, coll)
};
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys)
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return sorted_set__delegate.call(this, keys)
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__159334) {
    var keys = cljs.core.seq(arglist__159334);
    return sorted_set__delegate(keys)
  };
  sorted_set.cljs$lang$arity$variadic = sorted_set__delegate;
  return sorted_set
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.call(null, cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by.call(null, comparator), 0), keys)
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if(goog.isDef(var_args)) {
      keys = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return sorted_set_by__delegate.call(this, comparator, keys)
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__159336) {
    var comparator = cljs.core.first(arglist__159336);
    var keys = cljs.core.rest(arglist__159336);
    return sorted_set_by__delegate(comparator, keys)
  };
  sorted_set_by.cljs$lang$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by
}();
cljs.core.replace = function replace(smap, coll) {
  if(cljs.core.vector_QMARK_.call(null, coll)) {
    var n__159342 = cljs.core.count.call(null, coll);
    return cljs.core.reduce.call(null, function(v, i) {
      var temp__4009__auto____159343 = cljs.core.find.call(null, smap, cljs.core.nth.call(null, v, i));
      if(cljs.core.truth_(temp__4009__auto____159343)) {
        var e__159344 = temp__4009__auto____159343;
        return cljs.core.assoc.call(null, v, i, cljs.core.second.call(null, e__159344))
      }else {
        return v
      }
    }, coll, cljs.core.take.call(null, n__159342, cljs.core.iterate.call(null, cljs.core.inc, 0)))
  }else {
    return cljs.core.map.call(null, function(p1__159335_SHARP_) {
      var temp__4009__auto____159345 = cljs.core.find.call(null, smap, p1__159335_SHARP_);
      if(cljs.core.truth_(temp__4009__auto____159345)) {
        var e__159346 = temp__4009__auto____159345;
        return cljs.core.second.call(null, e__159346)
      }else {
        return p1__159335_SHARP_
      }
    }, coll)
  }
};
cljs.core.distinct = function distinct(coll) {
  var step__159376 = function step(xs, seen) {
    return new cljs.core.LazySeq(null, false, function() {
      return function(p__159369, seen) {
        while(true) {
          var vec__159370__159371 = p__159369;
          var f__159372 = cljs.core.nth.call(null, vec__159370__159371, 0, null);
          var xs__159373 = vec__159370__159371;
          var temp__4011__auto____159374 = cljs.core.seq.call(null, xs__159373);
          if(temp__4011__auto____159374) {
            var s__159375 = temp__4011__auto____159374;
            if(cljs.core.contains_QMARK_.call(null, seen, f__159372)) {
              var G__159377 = cljs.core.rest.call(null, s__159375);
              var G__159378 = seen;
              p__159369 = G__159377;
              seen = G__159378;
              continue
            }else {
              return cljs.core.cons.call(null, f__159372, step.call(null, cljs.core.rest.call(null, s__159375), cljs.core.conj.call(null, seen, f__159372)))
            }
          }else {
            return null
          }
          break
        }
      }.call(null, xs, seen)
    }, null)
  };
  return step__159376.call(null, coll, cljs.core.PersistentHashSet.EMPTY)
};
cljs.core.butlast = function butlast(s) {
  var ret__159381 = cljs.core.PersistentVector.EMPTY;
  var s__159382 = s;
  while(true) {
    if(cljs.core.next.call(null, s__159382)) {
      var G__159383 = cljs.core.conj.call(null, ret__159381, cljs.core.first.call(null, s__159382));
      var G__159384 = cljs.core.next.call(null, s__159382);
      ret__159381 = G__159383;
      s__159382 = G__159384;
      continue
    }else {
      return cljs.core.seq.call(null, ret__159381)
    }
    break
  }
};
cljs.core.name = function name(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(function() {
      var or__3862__auto____159387 = cljs.core.keyword_QMARK_.call(null, x);
      if(or__3862__auto____159387) {
        return or__3862__auto____159387
      }else {
        return cljs.core.symbol_QMARK_.call(null, x)
      }
    }()) {
      var i__159388 = x.lastIndexOf("/");
      if(i__159388 < 0) {
        return cljs.core.subs.call(null, x, 2)
      }else {
        return cljs.core.subs.call(null, x, i__159388 + 1)
      }
    }else {
      if("\ufdd0'else") {
        throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
      }else {
        return null
      }
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if(function() {
    var or__3862__auto____159391 = cljs.core.keyword_QMARK_.call(null, x);
    if(or__3862__auto____159391) {
      return or__3862__auto____159391
    }else {
      return cljs.core.symbol_QMARK_.call(null, x)
    }
  }()) {
    var i__159392 = x.lastIndexOf("/");
    if(i__159392 > -1) {
      return cljs.core.subs.call(null, x, 2, i__159392)
    }else {
      return null
    }
  }else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map__159399 = cljs.core.ObjMap.EMPTY;
  var ks__159400 = cljs.core.seq.call(null, keys);
  var vs__159401 = cljs.core.seq.call(null, vals);
  while(true) {
    if(function() {
      var and__3860__auto____159402 = ks__159400;
      if(and__3860__auto____159402) {
        return vs__159401
      }else {
        return and__3860__auto____159402
      }
    }()) {
      var G__159403 = cljs.core.assoc.call(null, map__159399, cljs.core.first.call(null, ks__159400), cljs.core.first.call(null, vs__159401));
      var G__159404 = cljs.core.next.call(null, ks__159400);
      var G__159405 = cljs.core.next.call(null, vs__159401);
      map__159399 = G__159403;
      ks__159400 = G__159404;
      vs__159401 = G__159405;
      continue
    }else {
      return map__159399
    }
    break
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x
  };
  var max_key__3 = function(k, x, y) {
    if(k.call(null, x) > k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var max_key__4 = function() {
    var G__159408__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__159393_SHARP_, p2__159394_SHARP_) {
        return max_key.call(null, k, p1__159393_SHARP_, p2__159394_SHARP_)
      }, max_key.call(null, k, x, y), more)
    };
    var G__159408 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__159408__delegate.call(this, k, x, y, more)
    };
    G__159408.cljs$lang$maxFixedArity = 3;
    G__159408.cljs$lang$applyTo = function(arglist__159409) {
      var k = cljs.core.first(arglist__159409);
      var x = cljs.core.first(cljs.core.next(arglist__159409));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159409)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159409)));
      return G__159408__delegate(k, x, y, more)
    };
    G__159408.cljs$lang$arity$variadic = G__159408__delegate;
    return G__159408
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        return max_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$lang$arity$2 = max_key__2;
  max_key.cljs$lang$arity$3 = max_key__3;
  max_key.cljs$lang$arity$variadic = max_key__4.cljs$lang$arity$variadic;
  return max_key
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x
  };
  var min_key__3 = function(k, x, y) {
    if(k.call(null, x) < k.call(null, y)) {
      return x
    }else {
      return y
    }
  };
  var min_key__4 = function() {
    var G__159410__delegate = function(k, x, y, more) {
      return cljs.core.reduce.call(null, function(p1__159406_SHARP_, p2__159407_SHARP_) {
        return min_key.call(null, k, p1__159406_SHARP_, p2__159407_SHARP_)
      }, min_key.call(null, k, x, y), more)
    };
    var G__159410 = function(k, x, y, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__159410__delegate.call(this, k, x, y, more)
    };
    G__159410.cljs$lang$maxFixedArity = 3;
    G__159410.cljs$lang$applyTo = function(arglist__159411) {
      var k = cljs.core.first(arglist__159411);
      var x = cljs.core.first(cljs.core.next(arglist__159411));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159411)));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159411)));
      return G__159410__delegate(k, x, y, more)
    };
    G__159410.cljs$lang$arity$variadic = G__159410__delegate;
    return G__159410
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        return min_key__4.cljs$lang$arity$variadic(k, x, y, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$lang$arity$2 = min_key__2;
  min_key.cljs$lang$arity$3 = min_key__3;
  min_key.cljs$lang$arity$variadic = min_key__4.cljs$lang$arity$variadic;
  return min_key
}();
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__2 = function(n, coll) {
    return partition_all.call(null, n, n, coll)
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____159414 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____159414) {
        var s__159415 = temp__4011__auto____159414;
        return cljs.core.cons.call(null, cljs.core.take.call(null, n, s__159415), partition_all.call(null, n, step, cljs.core.drop.call(null, step, s__159415)))
      }else {
        return null
      }
    }, null)
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  partition_all.cljs$lang$arity$2 = partition_all__2;
  partition_all.cljs$lang$arity$3 = partition_all__3;
  return partition_all
}();
cljs.core.take_while = function take_while(pred, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4011__auto____159418 = cljs.core.seq.call(null, coll);
    if(temp__4011__auto____159418) {
      var s__159419 = temp__4011__auto____159418;
      if(cljs.core.truth_(pred.call(null, cljs.core.first.call(null, s__159419)))) {
        return cljs.core.cons.call(null, cljs.core.first.call(null, s__159419), take_while.call(null, pred, cljs.core.rest.call(null, s__159419)))
      }else {
        return null
      }
    }else {
      return null
    }
  }, null)
};
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp__159421 = cljs.core._comparator.call(null, sc);
    return test.call(null, comp__159421.call(null, cljs.core._entry_key.call(null, sc, e), key), 0)
  }
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include__159433 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_]).call(null, test))) {
      var temp__4011__auto____159434 = cljs.core._sorted_seq_from.call(null, sc, key, true);
      if(cljs.core.truth_(temp__4011__auto____159434)) {
        var vec__159435__159436 = temp__4011__auto____159434;
        var e__159437 = cljs.core.nth.call(null, vec__159435__159436, 0, null);
        var s__159438 = vec__159435__159436;
        if(cljs.core.truth_(include__159433.call(null, e__159437))) {
          return s__159438
        }else {
          return cljs.core.next.call(null, s__159438)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__159433, cljs.core._sorted_seq.call(null, sc, true))
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4011__auto____159439 = cljs.core._sorted_seq_from.call(null, sc, start_key, true);
    if(cljs.core.truth_(temp__4011__auto____159439)) {
      var vec__159440__159441 = temp__4011__auto____159439;
      var e__159442 = cljs.core.nth.call(null, vec__159440__159441, 0, null);
      var s__159443 = vec__159440__159441;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, start_test, start_key).call(null, e__159442)) ? s__159443 : cljs.core.next.call(null, s__159443))
    }else {
      return null
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  subseq.cljs$lang$arity$3 = subseq__3;
  subseq.cljs$lang$arity$5 = subseq__5;
  return subseq
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include__159455 = cljs.core.mk_bound_fn.call(null, sc, test, key);
    if(cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_]).call(null, test))) {
      var temp__4011__auto____159456 = cljs.core._sorted_seq_from.call(null, sc, key, false);
      if(cljs.core.truth_(temp__4011__auto____159456)) {
        var vec__159457__159458 = temp__4011__auto____159456;
        var e__159459 = cljs.core.nth.call(null, vec__159457__159458, 0, null);
        var s__159460 = vec__159457__159458;
        if(cljs.core.truth_(include__159455.call(null, e__159459))) {
          return s__159460
        }else {
          return cljs.core.next.call(null, s__159460)
        }
      }else {
        return null
      }
    }else {
      return cljs.core.take_while.call(null, include__159455, cljs.core._sorted_seq.call(null, sc, false))
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4011__auto____159461 = cljs.core._sorted_seq_from.call(null, sc, end_key, false);
    if(cljs.core.truth_(temp__4011__auto____159461)) {
      var vec__159462__159463 = temp__4011__auto____159461;
      var e__159464 = cljs.core.nth.call(null, vec__159462__159463, 0, null);
      var s__159465 = vec__159462__159463;
      return cljs.core.take_while.call(null, cljs.core.mk_bound_fn.call(null, sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn.call(null, sc, end_test, end_key).call(null, e__159464)) ? s__159465 : cljs.core.next.call(null, s__159465))
    }else {
      return null
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rsubseq.cljs$lang$arity$3 = rsubseq__3;
  rsubseq.cljs$lang$arity$5 = rsubseq__5;
  return rsubseq
}();
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32375006
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Range")
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var this__159466 = this;
  var h__2229__auto____159467 = this__159466.__hash;
  if(!(h__2229__auto____159467 == null)) {
    return h__2229__auto____159467
  }else {
    var h__2229__auto____159468 = cljs.core.hash_coll.call(null, rng);
    this__159466.__hash = h__2229__auto____159468;
    return h__2229__auto____159468
  }
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var this__159469 = this;
  if(this__159469.step > 0) {
    if(this__159469.start + this__159469.step < this__159469.end) {
      return new cljs.core.Range(this__159469.meta, this__159469.start + this__159469.step, this__159469.end, this__159469.step, null)
    }else {
      return null
    }
  }else {
    if(this__159469.start + this__159469.step > this__159469.end) {
      return new cljs.core.Range(this__159469.meta, this__159469.start + this__159469.step, this__159469.end, this__159469.step, null)
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var this__159470 = this;
  return cljs.core.cons.call(null, o, rng)
};
cljs.core.Range.prototype.toString = function() {
  var this__159471 = this;
  var this__159472 = this;
  return cljs.core.pr_str.call(null, this__159472)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var this__159473 = this;
  return cljs.core.ci_reduce.call(null, rng, f)
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, s) {
  var this__159474 = this;
  return cljs.core.ci_reduce.call(null, rng, f, s)
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var this__159475 = this;
  if(this__159475.step > 0) {
    if(this__159475.start < this__159475.end) {
      return rng
    }else {
      return null
    }
  }else {
    if(this__159475.start > this__159475.end) {
      return rng
    }else {
      return null
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var this__159476 = this;
  if(cljs.core.not.call(null, rng.cljs$core$ISeqable$_seq$arity$1(rng))) {
    return 0
  }else {
    return Math.ceil((this__159476.end - this__159476.start) / this__159476.step)
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var this__159477 = this;
  return this__159477.start
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var this__159478 = this;
  if(!(rng.cljs$core$ISeqable$_seq$arity$1(rng) == null)) {
    return new cljs.core.Range(this__159478.meta, this__159478.start + this__159478.step, this__159478.end, this__159478.step, null)
  }else {
    return cljs.core.List.EMPTY
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var this__159479 = this;
  return cljs.core.equiv_sequential.call(null, rng, other)
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta) {
  var this__159480 = this;
  return new cljs.core.Range(meta, this__159480.start, this__159480.end, this__159480.step, this__159480.__hash)
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var this__159481 = this;
  return this__159481.meta
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var this__159482 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__159482.start + n * this__159482.step
  }else {
    if(function() {
      var and__3860__auto____159483 = this__159482.start > this__159482.end;
      if(and__3860__auto____159483) {
        return this__159482.step === 0
      }else {
        return and__3860__auto____159483
      }
    }()) {
      return this__159482.start
    }else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var this__159484 = this;
  if(n < rng.cljs$core$ICounted$_count$arity$1(rng)) {
    return this__159484.start + n * this__159484.step
  }else {
    if(function() {
      var and__3860__auto____159485 = this__159484.start > this__159484.end;
      if(and__3860__auto____159485) {
        return this__159484.step === 0
      }else {
        return and__3860__auto____159485
      }
    }()) {
      return this__159484.start
    }else {
      return not_found
    }
  }
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var this__159486 = this;
  return cljs.core.with_meta.call(null, cljs.core.List.EMPTY, this__159486.meta)
};
cljs.core.Range;
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.call(null, 0, Number.MAX_VALUE, 1)
  };
  var range__1 = function(end) {
    return range.call(null, 0, end, 1)
  };
  var range__2 = function(start, end) {
    return range.call(null, start, end, 1)
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null)
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step)
    }
    throw"Invalid arity: " + arguments.length;
  };
  range.cljs$lang$arity$0 = range__0;
  range.cljs$lang$arity$1 = range__1;
  range.cljs$lang$arity$2 = range__2;
  range.cljs$lang$arity$3 = range__3;
  return range
}();
cljs.core.take_nth = function take_nth(n, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4011__auto____159489 = cljs.core.seq.call(null, coll);
    if(temp__4011__auto____159489) {
      var s__159490 = temp__4011__auto____159489;
      return cljs.core.cons.call(null, cljs.core.first.call(null, s__159490), take_nth.call(null, n, cljs.core.drop.call(null, n, s__159490)))
    }else {
      return null
    }
  }, null)
};
cljs.core.split_with = function split_with(pred, coll) {
  return cljs.core.PersistentVector.fromArray([cljs.core.take_while.call(null, pred, coll), cljs.core.drop_while.call(null, pred, coll)], true)
};
cljs.core.partition_by = function partition_by(f, coll) {
  return new cljs.core.LazySeq(null, false, function() {
    var temp__4011__auto____159497 = cljs.core.seq.call(null, coll);
    if(temp__4011__auto____159497) {
      var s__159498 = temp__4011__auto____159497;
      var fst__159499 = cljs.core.first.call(null, s__159498);
      var fv__159500 = f.call(null, fst__159499);
      var run__159501 = cljs.core.cons.call(null, fst__159499, cljs.core.take_while.call(null, function(p1__159491_SHARP_) {
        return cljs.core._EQ_.call(null, fv__159500, f.call(null, p1__159491_SHARP_))
      }, cljs.core.next.call(null, s__159498)));
      return cljs.core.cons.call(null, run__159501, partition_by.call(null, f, cljs.core.seq.call(null, cljs.core.drop.call(null, cljs.core.count.call(null, run__159501), s__159498))))
    }else {
      return null
    }
  }, null)
};
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_.call(null, cljs.core.reduce.call(null, function(counts, x) {
    return cljs.core.assoc_BANG_.call(null, counts, x, cljs.core._lookup.call(null, counts, x, 0) + 1)
  }, cljs.core.transient$.call(null, cljs.core.ObjMap.EMPTY), coll))
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, false, function() {
      var temp__4009__auto____159516 = cljs.core.seq.call(null, coll);
      if(temp__4009__auto____159516) {
        var s__159517 = temp__4009__auto____159516;
        return reductions.call(null, f, cljs.core.first.call(null, s__159517), cljs.core.rest.call(null, s__159517))
      }else {
        return cljs.core.list.call(null, f.call(null))
      }
    }, null)
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons.call(null, init, new cljs.core.LazySeq(null, false, function() {
      var temp__4011__auto____159518 = cljs.core.seq.call(null, coll);
      if(temp__4011__auto____159518) {
        var s__159519 = temp__4011__auto____159518;
        return reductions.call(null, f, f.call(null, init, cljs.core.first.call(null, s__159519)), cljs.core.rest.call(null, s__159519))
      }else {
        return null
      }
    }, null))
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  reductions.cljs$lang$arity$2 = reductions__2;
  reductions.cljs$lang$arity$3 = reductions__3;
  return reductions
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__159522 = null;
      var G__159522__0 = function() {
        return cljs.core.vector.call(null, f.call(null))
      };
      var G__159522__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x))
      };
      var G__159522__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y))
      };
      var G__159522__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z))
      };
      var G__159522__4 = function() {
        var G__159523__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args))
        };
        var G__159523 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__159523__delegate.call(this, x, y, z, args)
        };
        G__159523.cljs$lang$maxFixedArity = 3;
        G__159523.cljs$lang$applyTo = function(arglist__159524) {
          var x = cljs.core.first(arglist__159524);
          var y = cljs.core.first(cljs.core.next(arglist__159524));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159524)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159524)));
          return G__159523__delegate(x, y, z, args)
        };
        G__159523.cljs$lang$arity$variadic = G__159523__delegate;
        return G__159523
      }();
      G__159522 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__159522__0.call(this);
          case 1:
            return G__159522__1.call(this, x);
          case 2:
            return G__159522__2.call(this, x, y);
          case 3:
            return G__159522__3.call(this, x, y, z);
          default:
            return G__159522__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__159522.cljs$lang$maxFixedArity = 3;
      G__159522.cljs$lang$applyTo = G__159522__4.cljs$lang$applyTo;
      return G__159522
    }()
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__159525 = null;
      var G__159525__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null))
      };
      var G__159525__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x))
      };
      var G__159525__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y))
      };
      var G__159525__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z))
      };
      var G__159525__4 = function() {
        var G__159526__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args))
        };
        var G__159526 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__159526__delegate.call(this, x, y, z, args)
        };
        G__159526.cljs$lang$maxFixedArity = 3;
        G__159526.cljs$lang$applyTo = function(arglist__159527) {
          var x = cljs.core.first(arglist__159527);
          var y = cljs.core.first(cljs.core.next(arglist__159527));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159527)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159527)));
          return G__159526__delegate(x, y, z, args)
        };
        G__159526.cljs$lang$arity$variadic = G__159526__delegate;
        return G__159526
      }();
      G__159525 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__159525__0.call(this);
          case 1:
            return G__159525__1.call(this, x);
          case 2:
            return G__159525__2.call(this, x, y);
          case 3:
            return G__159525__3.call(this, x, y, z);
          default:
            return G__159525__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__159525.cljs$lang$maxFixedArity = 3;
      G__159525.cljs$lang$applyTo = G__159525__4.cljs$lang$applyTo;
      return G__159525
    }()
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__159528 = null;
      var G__159528__0 = function() {
        return cljs.core.vector.call(null, f.call(null), g.call(null), h.call(null))
      };
      var G__159528__1 = function(x) {
        return cljs.core.vector.call(null, f.call(null, x), g.call(null, x), h.call(null, x))
      };
      var G__159528__2 = function(x, y) {
        return cljs.core.vector.call(null, f.call(null, x, y), g.call(null, x, y), h.call(null, x, y))
      };
      var G__159528__3 = function(x, y, z) {
        return cljs.core.vector.call(null, f.call(null, x, y, z), g.call(null, x, y, z), h.call(null, x, y, z))
      };
      var G__159528__4 = function() {
        var G__159529__delegate = function(x, y, z, args) {
          return cljs.core.vector.call(null, cljs.core.apply.call(null, f, x, y, z, args), cljs.core.apply.call(null, g, x, y, z, args), cljs.core.apply.call(null, h, x, y, z, args))
        };
        var G__159529 = function(x, y, z, var_args) {
          var args = null;
          if(goog.isDef(var_args)) {
            args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
          }
          return G__159529__delegate.call(this, x, y, z, args)
        };
        G__159529.cljs$lang$maxFixedArity = 3;
        G__159529.cljs$lang$applyTo = function(arglist__159530) {
          var x = cljs.core.first(arglist__159530);
          var y = cljs.core.first(cljs.core.next(arglist__159530));
          var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159530)));
          var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159530)));
          return G__159529__delegate(x, y, z, args)
        };
        G__159529.cljs$lang$arity$variadic = G__159529__delegate;
        return G__159529
      }();
      G__159528 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__159528__0.call(this);
          case 1:
            return G__159528__1.call(this, x);
          case 2:
            return G__159528__2.call(this, x, y);
          case 3:
            return G__159528__3.call(this, x, y, z);
          default:
            return G__159528__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
        }
        throw"Invalid arity: " + arguments.length;
      };
      G__159528.cljs$lang$maxFixedArity = 3;
      G__159528.cljs$lang$applyTo = G__159528__4.cljs$lang$applyTo;
      return G__159528
    }()
  };
  var juxt__4 = function() {
    var G__159531__delegate = function(f, g, h, fs) {
      var fs__159521 = cljs.core.list_STAR_.call(null, f, g, h, fs);
      return function() {
        var G__159532 = null;
        var G__159532__0 = function() {
          return cljs.core.reduce.call(null, function(p1__159502_SHARP_, p2__159503_SHARP_) {
            return cljs.core.conj.call(null, p1__159502_SHARP_, p2__159503_SHARP_.call(null))
          }, cljs.core.PersistentVector.EMPTY, fs__159521)
        };
        var G__159532__1 = function(x) {
          return cljs.core.reduce.call(null, function(p1__159504_SHARP_, p2__159505_SHARP_) {
            return cljs.core.conj.call(null, p1__159504_SHARP_, p2__159505_SHARP_.call(null, x))
          }, cljs.core.PersistentVector.EMPTY, fs__159521)
        };
        var G__159532__2 = function(x, y) {
          return cljs.core.reduce.call(null, function(p1__159506_SHARP_, p2__159507_SHARP_) {
            return cljs.core.conj.call(null, p1__159506_SHARP_, p2__159507_SHARP_.call(null, x, y))
          }, cljs.core.PersistentVector.EMPTY, fs__159521)
        };
        var G__159532__3 = function(x, y, z) {
          return cljs.core.reduce.call(null, function(p1__159508_SHARP_, p2__159509_SHARP_) {
            return cljs.core.conj.call(null, p1__159508_SHARP_, p2__159509_SHARP_.call(null, x, y, z))
          }, cljs.core.PersistentVector.EMPTY, fs__159521)
        };
        var G__159532__4 = function() {
          var G__159533__delegate = function(x, y, z, args) {
            return cljs.core.reduce.call(null, function(p1__159510_SHARP_, p2__159511_SHARP_) {
              return cljs.core.conj.call(null, p1__159510_SHARP_, cljs.core.apply.call(null, p2__159511_SHARP_, x, y, z, args))
            }, cljs.core.PersistentVector.EMPTY, fs__159521)
          };
          var G__159533 = function(x, y, z, var_args) {
            var args = null;
            if(goog.isDef(var_args)) {
              args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
            }
            return G__159533__delegate.call(this, x, y, z, args)
          };
          G__159533.cljs$lang$maxFixedArity = 3;
          G__159533.cljs$lang$applyTo = function(arglist__159534) {
            var x = cljs.core.first(arglist__159534);
            var y = cljs.core.first(cljs.core.next(arglist__159534));
            var z = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159534)));
            var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159534)));
            return G__159533__delegate(x, y, z, args)
          };
          G__159533.cljs$lang$arity$variadic = G__159533__delegate;
          return G__159533
        }();
        G__159532 = function(x, y, z, var_args) {
          var args = var_args;
          switch(arguments.length) {
            case 0:
              return G__159532__0.call(this);
            case 1:
              return G__159532__1.call(this, x);
            case 2:
              return G__159532__2.call(this, x, y);
            case 3:
              return G__159532__3.call(this, x, y, z);
            default:
              return G__159532__4.cljs$lang$arity$variadic(x, y, z, cljs.core.array_seq(arguments, 3))
          }
          throw"Invalid arity: " + arguments.length;
        };
        G__159532.cljs$lang$maxFixedArity = 3;
        G__159532.cljs$lang$applyTo = G__159532__4.cljs$lang$applyTo;
        return G__159532
      }()
    };
    var G__159531 = function(f, g, h, var_args) {
      var fs = null;
      if(goog.isDef(var_args)) {
        fs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
      }
      return G__159531__delegate.call(this, f, g, h, fs)
    };
    G__159531.cljs$lang$maxFixedArity = 3;
    G__159531.cljs$lang$applyTo = function(arglist__159535) {
      var f = cljs.core.first(arglist__159535);
      var g = cljs.core.first(cljs.core.next(arglist__159535));
      var h = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159535)));
      var fs = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__159535)));
      return G__159531__delegate(f, g, h, fs)
    };
    G__159531.cljs$lang$arity$variadic = G__159531__delegate;
    return G__159531
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        return juxt__4.cljs$lang$arity$variadic(f, g, h, cljs.core.array_seq(arguments, 3))
    }
    throw"Invalid arity: " + arguments.length;
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$lang$arity$1 = juxt__1;
  juxt.cljs$lang$arity$2 = juxt__2;
  juxt.cljs$lang$arity$3 = juxt__3;
  juxt.cljs$lang$arity$variadic = juxt__4.cljs$lang$arity$variadic;
  return juxt
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while(true) {
      if(cljs.core.seq.call(null, coll)) {
        var G__159538 = cljs.core.next.call(null, coll);
        coll = G__159538;
        continue
      }else {
        return null
      }
      break
    }
  };
  var dorun__2 = function(n, coll) {
    while(true) {
      if(cljs.core.truth_(function() {
        var and__3860__auto____159537 = cljs.core.seq.call(null, coll);
        if(and__3860__auto____159537) {
          return n > 0
        }else {
          return and__3860__auto____159537
        }
      }())) {
        var G__159539 = n - 1;
        var G__159540 = cljs.core.next.call(null, coll);
        n = G__159539;
        coll = G__159540;
        continue
      }else {
        return null
      }
      break
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  dorun.cljs$lang$arity$1 = dorun__1;
  dorun.cljs$lang$arity$2 = dorun__2;
  return dorun
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.call(null, coll);
    return coll
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.call(null, n, coll);
    return coll
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  doall.cljs$lang$arity$1 = doall__1;
  doall.cljs$lang$arity$2 = doall__2;
  return doall
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp
};
cljs.core.re_matches = function re_matches(re, s) {
  var matches__159542 = re.exec(s);
  if(cljs.core._EQ_.call(null, cljs.core.first.call(null, matches__159542), s)) {
    if(cljs.core.count.call(null, matches__159542) === 1) {
      return cljs.core.first.call(null, matches__159542)
    }else {
      return cljs.core.vec.call(null, matches__159542)
    }
  }else {
    return null
  }
};
cljs.core.re_find = function re_find(re, s) {
  var matches__159544 = re.exec(s);
  if(matches__159544 == null) {
    return null
  }else {
    if(cljs.core.count.call(null, matches__159544) === 1) {
      return cljs.core.first.call(null, matches__159544)
    }else {
      return cljs.core.vec.call(null, matches__159544)
    }
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data__159549 = cljs.core.re_find.call(null, re, s);
  var match_idx__159550 = s.search(re);
  var match_str__159551 = cljs.core.coll_QMARK_.call(null, match_data__159549) ? cljs.core.first.call(null, match_data__159549) : match_data__159549;
  var post_match__159552 = cljs.core.subs.call(null, s, match_idx__159550 + cljs.core.count.call(null, match_str__159551));
  if(cljs.core.truth_(match_data__159549)) {
    return new cljs.core.LazySeq(null, false, function() {
      return cljs.core.cons.call(null, match_data__159549, re_seq.call(null, re, post_match__159552))
    }, null)
  }else {
    return null
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  var vec__159559__159560 = cljs.core.re_find.call(null, /^(?:\(\?([idmsux]*)\))?(.*)/, s);
  var ___159561 = cljs.core.nth.call(null, vec__159559__159560, 0, null);
  var flags__159562 = cljs.core.nth.call(null, vec__159559__159560, 1, null);
  var pattern__159563 = cljs.core.nth.call(null, vec__159559__159560, 2, null);
  return new RegExp(pattern__159563, flags__159562)
};
cljs.core.pr_sequential = function pr_sequential(print_one, begin, sep, end, opts, coll) {
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray([begin], true), cljs.core.flatten1.call(null, cljs.core.interpose.call(null, cljs.core.PersistentVector.fromArray([sep], true), cljs.core.map.call(null, function(p1__159553_SHARP_) {
    return print_one.call(null, p1__159553_SHARP_, opts)
  }, coll))), cljs.core.PersistentVector.fromArray([end], true))
};
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null
};
cljs.core.flush = function flush() {
  return null
};
cljs.core.pr_seq = function pr_seq(obj, opts) {
  if(obj == null) {
    return cljs.core.list.call(null, "nil")
  }else {
    if(void 0 === obj) {
      return cljs.core.list.call(null, "#<undefined>")
    }else {
      if("\ufdd0'else") {
        return cljs.core.concat.call(null, cljs.core.truth_(function() {
          var and__3860__auto____159573 = cljs.core._lookup.call(null, opts, "\ufdd0'meta", null);
          if(cljs.core.truth_(and__3860__auto____159573)) {
            var and__3860__auto____159577 = function() {
              var G__159574__159575 = obj;
              if(G__159574__159575) {
                if(function() {
                  var or__3862__auto____159576 = G__159574__159575.cljs$lang$protocol_mask$partition0$ & 131072;
                  if(or__3862__auto____159576) {
                    return or__3862__auto____159576
                  }else {
                    return G__159574__159575.cljs$core$IMeta$
                  }
                }()) {
                  return true
                }else {
                  if(!G__159574__159575.cljs$lang$protocol_mask$partition0$) {
                    return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__159574__159575)
                  }else {
                    return false
                  }
                }
              }else {
                return cljs.core.type_satisfies_.call(null, cljs.core.IMeta, G__159574__159575)
              }
            }();
            if(cljs.core.truth_(and__3860__auto____159577)) {
              return cljs.core.meta.call(null, obj)
            }else {
              return and__3860__auto____159577
            }
          }else {
            return and__3860__auto____159573
          }
        }()) ? cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["^"], true), pr_seq.call(null, cljs.core.meta.call(null, obj), opts), cljs.core.PersistentVector.fromArray([" "], true)) : null, function() {
          var and__3860__auto____159578 = !(obj == null);
          if(and__3860__auto____159578) {
            return obj.cljs$lang$type
          }else {
            return and__3860__auto____159578
          }
        }() ? obj.cljs$lang$ctorPrSeq(obj) : function() {
          var G__159579__159580 = obj;
          if(G__159579__159580) {
            if(function() {
              var or__3862__auto____159581 = G__159579__159580.cljs$lang$protocol_mask$partition0$ & 536870912;
              if(or__3862__auto____159581) {
                return or__3862__auto____159581
              }else {
                return G__159579__159580.cljs$core$IPrintable$
              }
            }()) {
              return true
            }else {
              if(!G__159579__159580.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__159579__159580)
              }else {
                return false
              }
            }
          }else {
            return cljs.core.type_satisfies_.call(null, cljs.core.IPrintable, G__159579__159580)
          }
        }() ? cljs.core._pr_seq.call(null, obj, opts) : cljs.core.truth_(cljs.core.regexp_QMARK_.call(null, obj)) ? cljs.core.list.call(null, '#"', obj.source, '"') : "\ufdd0'else" ? cljs.core.list.call(null, "#<", [cljs.core.str(obj)].join(""), ">") : null)
      }else {
        return null
      }
    }
  }
};
cljs.core.pr_sb = function pr_sb(objs, opts) {
  var sb__159601 = new goog.string.StringBuffer;
  var G__159602__159603 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__159602__159603) {
    var string__159604 = cljs.core.first.call(null, G__159602__159603);
    var G__159602__159605 = G__159602__159603;
    while(true) {
      sb__159601.append(string__159604);
      var temp__4011__auto____159606 = cljs.core.next.call(null, G__159602__159605);
      if(temp__4011__auto____159606) {
        var G__159602__159607 = temp__4011__auto____159606;
        var G__159620 = cljs.core.first.call(null, G__159602__159607);
        var G__159621 = G__159602__159607;
        string__159604 = G__159620;
        G__159602__159605 = G__159621;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__159608__159609 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__159608__159609) {
    var obj__159610 = cljs.core.first.call(null, G__159608__159609);
    var G__159608__159611 = G__159608__159609;
    while(true) {
      sb__159601.append(" ");
      var G__159612__159613 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__159610, opts));
      if(G__159612__159613) {
        var string__159614 = cljs.core.first.call(null, G__159612__159613);
        var G__159612__159615 = G__159612__159613;
        while(true) {
          sb__159601.append(string__159614);
          var temp__4011__auto____159616 = cljs.core.next.call(null, G__159612__159615);
          if(temp__4011__auto____159616) {
            var G__159612__159617 = temp__4011__auto____159616;
            var G__159622 = cljs.core.first.call(null, G__159612__159617);
            var G__159623 = G__159612__159617;
            string__159614 = G__159622;
            G__159612__159615 = G__159623;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4011__auto____159618 = cljs.core.next.call(null, G__159608__159611);
      if(temp__4011__auto____159618) {
        var G__159608__159619 = temp__4011__auto____159618;
        var G__159624 = cljs.core.first.call(null, G__159608__159619);
        var G__159625 = G__159608__159619;
        obj__159610 = G__159624;
        G__159608__159611 = G__159625;
        continue
      }else {
      }
      break
    }
  }else {
  }
  return sb__159601
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  return[cljs.core.str(cljs.core.pr_sb.call(null, objs, opts))].join("")
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  var sb__159627 = cljs.core.pr_sb.call(null, objs, opts);
  sb__159627.append("\n");
  return[cljs.core.str(sb__159627)].join("")
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  var G__159646__159647 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, cljs.core.first.call(null, objs), opts));
  if(G__159646__159647) {
    var string__159648 = cljs.core.first.call(null, G__159646__159647);
    var G__159646__159649 = G__159646__159647;
    while(true) {
      cljs.core.string_print.call(null, string__159648);
      var temp__4011__auto____159650 = cljs.core.next.call(null, G__159646__159649);
      if(temp__4011__auto____159650) {
        var G__159646__159651 = temp__4011__auto____159650;
        var G__159664 = cljs.core.first.call(null, G__159646__159651);
        var G__159665 = G__159646__159651;
        string__159648 = G__159664;
        G__159646__159649 = G__159665;
        continue
      }else {
      }
      break
    }
  }else {
  }
  var G__159652__159653 = cljs.core.seq.call(null, cljs.core.next.call(null, objs));
  if(G__159652__159653) {
    var obj__159654 = cljs.core.first.call(null, G__159652__159653);
    var G__159652__159655 = G__159652__159653;
    while(true) {
      cljs.core.string_print.call(null, " ");
      var G__159656__159657 = cljs.core.seq.call(null, cljs.core.pr_seq.call(null, obj__159654, opts));
      if(G__159656__159657) {
        var string__159658 = cljs.core.first.call(null, G__159656__159657);
        var G__159656__159659 = G__159656__159657;
        while(true) {
          cljs.core.string_print.call(null, string__159658);
          var temp__4011__auto____159660 = cljs.core.next.call(null, G__159656__159659);
          if(temp__4011__auto____159660) {
            var G__159656__159661 = temp__4011__auto____159660;
            var G__159666 = cljs.core.first.call(null, G__159656__159661);
            var G__159667 = G__159656__159661;
            string__159658 = G__159666;
            G__159656__159659 = G__159667;
            continue
          }else {
          }
          break
        }
      }else {
      }
      var temp__4011__auto____159662 = cljs.core.next.call(null, G__159652__159655);
      if(temp__4011__auto____159662) {
        var G__159652__159663 = temp__4011__auto____159662;
        var G__159668 = cljs.core.first.call(null, G__159652__159663);
        var G__159669 = G__159652__159663;
        obj__159654 = G__159668;
        G__159652__159655 = G__159669;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print.call(null, "\n");
  if(cljs.core.truth_(cljs.core._lookup.call(null, opts, "\ufdd0'flush-on-newline", null))) {
    return cljs.core.flush.call(null)
  }else {
    return null
  }
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core.pr_opts = function pr_opts() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'flush-on-newline", "\ufdd0'readably", "\ufdd0'meta", "\ufdd0'dup"], {"\ufdd0'flush-on-newline":cljs.core._STAR_flush_on_newline_STAR_, "\ufdd0'readably":cljs.core._STAR_print_readably_STAR_, "\ufdd0'meta":cljs.core._STAR_print_meta_STAR_, "\ufdd0'dup":cljs.core._STAR_print_dup_STAR_})
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr_str__delegate.call(this, objs)
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__159670) {
    var objs = cljs.core.seq(arglist__159670);
    return pr_str__delegate(objs)
  };
  pr_str.cljs$lang$arity$variadic = pr_str__delegate;
  return pr_str
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var prn_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn_str__delegate.call(this, objs)
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__159671) {
    var objs = cljs.core.seq(arglist__159671);
    return prn_str__delegate(objs)
  };
  prn_str.cljs$lang$arity$variadic = prn_str__delegate;
  return prn_str
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null))
  };
  var pr = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return pr__delegate.call(this, objs)
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__159672) {
    var objs = cljs.core.seq(arglist__159672);
    return pr__delegate(objs)
  };
  pr.cljs$lang$arity$variadic = pr__delegate;
  return pr
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return cljs_core_print__delegate.call(this, objs)
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__159673) {
    var objs = cljs.core.seq(arglist__159673);
    return cljs_core_print__delegate(objs)
  };
  cljs_core_print.cljs$lang$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var print_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return print_str__delegate.call(this, objs)
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__159674) {
    var objs = cljs.core.seq(arglist__159674);
    return print_str__delegate(objs)
  };
  print_str.cljs$lang$arity$variadic = print_str__delegate;
  return print_str
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var println = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println__delegate.call(this, objs)
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__159675) {
    var objs = cljs.core.seq(arglist__159675);
    return println__delegate(objs)
  };
  println.cljs$lang$arity$variadic = println__delegate;
  return println
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts.call(null, objs, cljs.core.assoc.call(null, cljs.core.pr_opts.call(null), "\ufdd0'readably", false))
  };
  var println_str = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return println_str__delegate.call(this, objs)
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__159676) {
    var objs = cljs.core.seq(arglist__159676);
    return println_str__delegate(objs)
  };
  println_str.cljs$lang$arity$variadic = println_str__delegate;
  return println_str
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts.call(null, objs, cljs.core.pr_opts.call(null));
    return cljs.core.newline.call(null, cljs.core.pr_opts.call(null))
  };
  var prn = function(var_args) {
    var objs = null;
    if(goog.isDef(var_args)) {
      objs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return prn__delegate.call(this, objs)
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__159677) {
    var objs = cljs.core.seq(arglist__159677);
    return prn__delegate(objs)
  };
  prn.cljs$lang$arity$variadic = prn__delegate;
  return prn
}();
cljs.core.printf = function() {
  var printf__delegate = function(fmt, args) {
    return cljs.core.print.call(null, cljs.core.apply.call(null, cljs.core.format, fmt, args))
  };
  var printf = function(fmt, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return printf__delegate.call(this, fmt, args)
  };
  printf.cljs$lang$maxFixedArity = 1;
  printf.cljs$lang$applyTo = function(arglist__159678) {
    var fmt = cljs.core.first(arglist__159678);
    var args = cljs.core.rest(arglist__159678);
    return printf__delegate(fmt, args)
  };
  printf.cljs$lang$arity$variadic = printf__delegate;
  return printf
}();
cljs.core.HashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.HashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__159679 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__159679, "{", ", ", "}", opts, coll)
};
cljs.core.IPrintable["number"] = true;
cljs.core._pr_seq["number"] = function(n, opts) {
  return cljs.core.list.call(null, [cljs.core.str(n)].join(""))
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Subvec.prototype.cljs$core$IPrintable$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__159680 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__159680, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__159681 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__159681, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#queue [", " ", "]", opts, cljs.core.seq.call(null, coll))
};
cljs.core.LazySeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.IPrintable["boolean"] = true;
cljs.core._pr_seq["boolean"] = function(bool, opts) {
  return cljs.core.list.call(null, [cljs.core.str(bool)].join(""))
};
cljs.core.IPrintable["string"] = true;
cljs.core._pr_seq["string"] = function(obj, opts) {
  if(cljs.core.keyword_QMARK_.call(null, obj)) {
    return cljs.core.list.call(null, [cljs.core.str(":"), cljs.core.str(function() {
      var temp__4011__auto____159682 = cljs.core.namespace.call(null, obj);
      if(cljs.core.truth_(temp__4011__auto____159682)) {
        var nspc__159683 = temp__4011__auto____159682;
        return[cljs.core.str(nspc__159683), cljs.core.str("/")].join("")
      }else {
        return null
      }
    }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
  }else {
    if(cljs.core.symbol_QMARK_.call(null, obj)) {
      return cljs.core.list.call(null, [cljs.core.str(function() {
        var temp__4011__auto____159684 = cljs.core.namespace.call(null, obj);
        if(cljs.core.truth_(temp__4011__auto____159684)) {
          var nspc__159685 = temp__4011__auto____159684;
          return[cljs.core.str(nspc__159685), cljs.core.str("/")].join("")
        }else {
          return null
        }
      }()), cljs.core.str(cljs.core.name.call(null, obj))].join(""))
    }else {
      if("\ufdd0'else") {
        return cljs.core.list.call(null, cljs.core.truth_((new cljs.core.Keyword("\ufdd0'readably")).call(null, opts)) ? goog.string.quote(obj) : obj)
      }else {
        return null
      }
    }
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.RedNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__159686 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__159686, "{", ", ", "}", opts, coll)
};
cljs.core.Vector.prototype.cljs$core$IPrintable$ = true;
cljs.core.Vector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#{", " ", "}", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
cljs.core.List.prototype.cljs$core$IPrintable$ = true;
cljs.core.List.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.IPrintable["array"] = true;
cljs.core._pr_seq["array"] = function(a, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "#<Array [", ", ", "]>", opts, a)
};
cljs.core.IPrintable["function"] = true;
cljs.core._pr_seq["function"] = function(this$) {
  return cljs.core.list.call(null, "#<", [cljs.core.str(this$)].join(""), ">")
};
cljs.core.EmptyList.prototype.cljs$core$IPrintable$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.list.call(null, "()")
};
cljs.core.BlackNode.prototype.cljs$core$IPrintable$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "[", " ", "]", opts, coll)
};
Date.prototype.cljs$core$IPrintable$ = true;
Date.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(d, _) {
  var normalize__159688 = function(n, len) {
    var ns__159687 = [cljs.core.str(n)].join("");
    while(true) {
      if(cljs.core.count.call(null, ns__159687) < len) {
        var G__159690 = [cljs.core.str("0"), cljs.core.str(ns__159687)].join("");
        ns__159687 = G__159690;
        continue
      }else {
        return ns__159687
      }
      break
    }
  };
  return cljs.core.list.call(null, [cljs.core.str('#inst "'), cljs.core.str(d.getUTCFullYear()), cljs.core.str("-"), cljs.core.str(normalize__159688.call(null, d.getUTCMonth() + 1, 2)), cljs.core.str("-"), cljs.core.str(normalize__159688.call(null, d.getUTCDate(), 2)), cljs.core.str("T"), cljs.core.str(normalize__159688.call(null, d.getUTCHours(), 2)), cljs.core.str(":"), cljs.core.str(normalize__159688.call(null, d.getUTCMinutes(), 2)), cljs.core.str(":"), cljs.core.str(normalize__159688.call(null, 
  d.getUTCSeconds(), 2)), cljs.core.str("."), cljs.core.str(normalize__159688.call(null, d.getUTCMilliseconds(), 3)), cljs.core.str("-"), cljs.core.str('00:00"')].join(""))
};
cljs.core.Cons.prototype.cljs$core$IPrintable$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.Range.prototype.cljs$core$IPrintable$ = true;
cljs.core.Range.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.ObjMap.prototype.cljs$core$IPrintable$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  var pr_pair__159689 = function(keyval) {
    return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "", " ", "", opts, keyval)
  };
  return cljs.core.pr_sequential.call(null, pr_pair__159689, "{", ", ", "}", opts, coll)
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(coll, opts) {
  return cljs.core.pr_sequential.call(null, cljs.core.pr_seq, "(", " ", ")", opts, coll)
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  return cljs.core.compare_indexed.call(null, x, y)
};
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2690809856
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Atom")
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__159691 = this;
  return goog.getUid(this$)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var this__159692 = this;
  var G__159693__159694 = cljs.core.seq.call(null, this__159692.watches);
  if(G__159693__159694) {
    var G__159696__159698 = cljs.core.first.call(null, G__159693__159694);
    var vec__159697__159699 = G__159696__159698;
    var key__159700 = cljs.core.nth.call(null, vec__159697__159699, 0, null);
    var f__159701 = cljs.core.nth.call(null, vec__159697__159699, 1, null);
    var G__159693__159702 = G__159693__159694;
    var G__159696__159703 = G__159696__159698;
    var G__159693__159704 = G__159693__159702;
    while(true) {
      var vec__159705__159706 = G__159696__159703;
      var key__159707 = cljs.core.nth.call(null, vec__159705__159706, 0, null);
      var f__159708 = cljs.core.nth.call(null, vec__159705__159706, 1, null);
      var G__159693__159709 = G__159693__159704;
      f__159708.call(null, key__159707, this$, oldval, newval);
      var temp__4011__auto____159710 = cljs.core.next.call(null, G__159693__159709);
      if(temp__4011__auto____159710) {
        var G__159693__159711 = temp__4011__auto____159710;
        var G__159718 = cljs.core.first.call(null, G__159693__159711);
        var G__159719 = G__159693__159711;
        G__159696__159703 = G__159718;
        G__159693__159704 = G__159719;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var this__159712 = this;
  return this$.watches = cljs.core.assoc.call(null, this__159712.watches, key, f)
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var this__159713 = this;
  return this$.watches = cljs.core.dissoc.call(null, this__159713.watches, key)
};
cljs.core.Atom.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(a, opts) {
  var this__159714 = this;
  return cljs.core.concat.call(null, cljs.core.PersistentVector.fromArray(["#<Atom: "], true), cljs.core._pr_seq.call(null, this__159714.state, opts), ">")
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var this__159715 = this;
  return this__159715.meta
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__159716 = this;
  return this__159716.state
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var this__159717 = this;
  return o === other
};
cljs.core.Atom;
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null)
  };
  var atom__2 = function() {
    var G__159731__delegate = function(x, p__159720) {
      var map__159726__159727 = p__159720;
      var map__159726__159728 = cljs.core.seq_QMARK_.call(null, map__159726__159727) ? cljs.core.apply.call(null, cljs.core.hash_map, map__159726__159727) : map__159726__159727;
      var validator__159729 = cljs.core._lookup.call(null, map__159726__159728, "\ufdd0'validator", null);
      var meta__159730 = cljs.core._lookup.call(null, map__159726__159728, "\ufdd0'meta", null);
      return new cljs.core.Atom(x, meta__159730, validator__159729, null)
    };
    var G__159731 = function(x, var_args) {
      var p__159720 = null;
      if(goog.isDef(var_args)) {
        p__159720 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__159731__delegate.call(this, x, p__159720)
    };
    G__159731.cljs$lang$maxFixedArity = 1;
    G__159731.cljs$lang$applyTo = function(arglist__159732) {
      var x = cljs.core.first(arglist__159732);
      var p__159720 = cljs.core.rest(arglist__159732);
      return G__159731__delegate(x, p__159720)
    };
    G__159731.cljs$lang$arity$variadic = G__159731__delegate;
    return G__159731
  }();
  atom = function(x, var_args) {
    var p__159720 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        return atom__2.cljs$lang$arity$variadic(x, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$lang$arity$1 = atom__1;
  atom.cljs$lang$arity$variadic = atom__2.cljs$lang$arity$variadic;
  return atom
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  var temp__4011__auto____159736 = a.validator;
  if(cljs.core.truth_(temp__4011__auto____159736)) {
    var validate__159737 = temp__4011__auto____159736;
    if(cljs.core.truth_(validate__159737.call(null, new_value))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'validate", "\ufdd1'new-value"), cljs.core.hash_map("\ufdd0'line", 6440))))].join(""));
    }
  }else {
  }
  var old_value__159738 = a.state;
  a.state = new_value;
  cljs.core._notify_watches.call(null, a, old_value__159738, new_value);
  return new_value
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state))
  };
  var swap_BANG___3 = function(a, f, x) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x))
  };
  var swap_BANG___4 = function(a, f, x, y) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y))
  };
  var swap_BANG___5 = function(a, f, x, y, z) {
    return cljs.core.reset_BANG_.call(null, a, f.call(null, a.state, x, y, z))
  };
  var swap_BANG___6 = function() {
    var G__159739__delegate = function(a, f, x, y, z, more) {
      return cljs.core.reset_BANG_.call(null, a, cljs.core.apply.call(null, f, a.state, x, y, z, more))
    };
    var G__159739 = function(a, f, x, y, z, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 5), 0)
      }
      return G__159739__delegate.call(this, a, f, x, y, z, more)
    };
    G__159739.cljs$lang$maxFixedArity = 5;
    G__159739.cljs$lang$applyTo = function(arglist__159740) {
      var a = cljs.core.first(arglist__159740);
      var f = cljs.core.first(cljs.core.next(arglist__159740));
      var x = cljs.core.first(cljs.core.next(cljs.core.next(arglist__159740)));
      var y = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(arglist__159740))));
      var z = cljs.core.first(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__159740)))));
      var more = cljs.core.rest(cljs.core.next(cljs.core.next(cljs.core.next(cljs.core.next(arglist__159740)))));
      return G__159739__delegate(a, f, x, y, z, more)
    };
    G__159739.cljs$lang$arity$variadic = G__159739__delegate;
    return G__159739
  }();
  swap_BANG_ = function(a, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      case 5:
        return swap_BANG___5.call(this, a, f, x, y, z);
      default:
        return swap_BANG___6.cljs$lang$arity$variadic(a, f, x, y, z, cljs.core.array_seq(arguments, 5))
    }
    throw"Invalid arity: " + arguments.length;
  };
  swap_BANG_.cljs$lang$maxFixedArity = 5;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___6.cljs$lang$applyTo;
  swap_BANG_.cljs$lang$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$lang$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$lang$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$lang$arity$5 = swap_BANG___5;
  swap_BANG_.cljs$lang$arity$variadic = swap_BANG___6.cljs$lang$arity$variadic;
  return swap_BANG_
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if(cljs.core._EQ_.call(null, a.state, oldval)) {
    cljs.core.reset_BANG_.call(null, a, newval);
    return true
  }else {
    return false
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref.call(null, o)
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.call(null, f, iref.meta, args)
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__159741) {
    var iref = cljs.core.first(arglist__159741);
    var f = cljs.core.first(cljs.core.next(arglist__159741));
    var args = cljs.core.rest(cljs.core.next(arglist__159741));
    return alter_meta_BANG___delegate(iref, f, args)
  };
  alter_meta_BANG_.cljs$lang$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  return cljs.core._add_watch.call(null, iref, key, f)
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  return cljs.core._remove_watch.call(null, iref, key)
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.call(null, "G__")
  };
  var gensym__1 = function(prefix_string) {
    if(cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = cljs.core.atom.call(null, 0)
    }else {
    }
    return cljs.core.symbol.call(null, [cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.call(null, cljs.core.gensym_counter, cljs.core.inc))].join(""))
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string)
    }
    throw"Invalid arity: " + arguments.length;
  };
  gensym.cljs$lang$arity$0 = gensym__0;
  gensym.cljs$lang$arity$1 = gensym__1;
  return gensym
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(state, f) {
  this.state = state;
  this.f = f;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073774592
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/Delay")
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var this__159742 = this;
  return(new cljs.core.Keyword("\ufdd0'done")).call(null, cljs.core.deref.call(null, this__159742.state))
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var this__159743 = this;
  return(new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__159743.state, function(p__159744) {
    var map__159745__159746 = p__159744;
    var map__159745__159747 = cljs.core.seq_QMARK_.call(null, map__159745__159746) ? cljs.core.apply.call(null, cljs.core.hash_map, map__159745__159746) : map__159745__159746;
    var curr_state__159748 = map__159745__159747;
    var done__159749 = cljs.core._lookup.call(null, map__159745__159747, "\ufdd0'done", null);
    if(cljs.core.truth_(done__159749)) {
      return curr_state__159748
    }else {
      return cljs.core.ObjMap.fromObject(["\ufdd0'done", "\ufdd0'value"], {"\ufdd0'done":true, "\ufdd0'value":this__159743.f.call(null)})
    }
  }))
};
cljs.core.Delay;
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return cljs.core.instance_QMARK_.call(null, cljs.core.Delay, x)
};
cljs.core.force = function force(x) {
  if(cljs.core.delay_QMARK_.call(null, x)) {
    return cljs.core.deref.call(null, x)
  }else {
    return x
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_.call(null, d)
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj__delegate = function(x, options) {
    var map__159770__159771 = options;
    var map__159770__159772 = cljs.core.seq_QMARK_.call(null, map__159770__159771) ? cljs.core.apply.call(null, cljs.core.hash_map, map__159770__159771) : map__159770__159771;
    var keywordize_keys__159773 = cljs.core._lookup.call(null, map__159770__159772, "\ufdd0'keywordize-keys", null);
    var keyfn__159774 = cljs.core.truth_(keywordize_keys__159773) ? cljs.core.keyword : cljs.core.str;
    var f__159789 = function thisfn(x) {
      if(cljs.core.seq_QMARK_.call(null, x)) {
        return cljs.core.doall.call(null, cljs.core.map.call(null, thisfn, x))
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.into.call(null, cljs.core.empty.call(null, x), cljs.core.map.call(null, thisfn, x))
        }else {
          if(cljs.core.truth_(goog.isArray(x))) {
            return cljs.core.vec.call(null, cljs.core.map.call(null, thisfn, x))
          }else {
            if(cljs.core.type.call(null, x) === Object) {
              return cljs.core.into.call(null, cljs.core.ObjMap.EMPTY, function() {
                var iter__2499__auto____159788 = function iter__159782(s__159783) {
                  return new cljs.core.LazySeq(null, false, function() {
                    var s__159783__159786 = s__159783;
                    while(true) {
                      if(cljs.core.seq.call(null, s__159783__159786)) {
                        var k__159787 = cljs.core.first.call(null, s__159783__159786);
                        return cljs.core.cons.call(null, cljs.core.PersistentVector.fromArray([keyfn__159774.call(null, k__159787), thisfn.call(null, x[k__159787])], true), iter__159782.call(null, cljs.core.rest.call(null, s__159783__159786)))
                      }else {
                        return null
                      }
                      break
                    }
                  }, null)
                };
                return iter__2499__auto____159788.call(null, cljs.core.js_keys.call(null, x))
              }())
            }else {
              if("\ufdd0'else") {
                return x
              }else {
                return null
              }
            }
          }
        }
      }
    };
    return f__159789.call(null, x)
  };
  var js__GT_clj = function(x, var_args) {
    var options = null;
    if(goog.isDef(var_args)) {
      options = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return js__GT_clj__delegate.call(this, x, options)
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = function(arglist__159790) {
    var x = cljs.core.first(arglist__159790);
    var options = cljs.core.rest(arglist__159790);
    return js__GT_clj__delegate(x, options)
  };
  js__GT_clj.cljs$lang$arity$variadic = js__GT_clj__delegate;
  return js__GT_clj
}();
cljs.core.memoize = function memoize(f) {
  var mem__159795 = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY);
  return function() {
    var G__159799__delegate = function(args) {
      var temp__4009__auto____159796 = cljs.core._lookup.call(null, cljs.core.deref.call(null, mem__159795), args, null);
      if(cljs.core.truth_(temp__4009__auto____159796)) {
        var v__159797 = temp__4009__auto____159796;
        return v__159797
      }else {
        var ret__159798 = cljs.core.apply.call(null, f, args);
        cljs.core.swap_BANG_.call(null, mem__159795, cljs.core.assoc, args, ret__159798);
        return ret__159798
      }
    };
    var G__159799 = function(var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__159799__delegate.call(this, args)
    };
    G__159799.cljs$lang$maxFixedArity = 0;
    G__159799.cljs$lang$applyTo = function(arglist__159800) {
      var args = cljs.core.seq(arglist__159800);
      return G__159799__delegate(args)
    };
    G__159799.cljs$lang$arity$variadic = G__159799__delegate;
    return G__159799
  }()
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while(true) {
      var ret__159802 = f.call(null);
      if(cljs.core.fn_QMARK_.call(null, ret__159802)) {
        var G__159803 = ret__159802;
        f = G__159803;
        continue
      }else {
        return ret__159802
      }
      break
    }
  };
  var trampoline__2 = function() {
    var G__159804__delegate = function(f, args) {
      return trampoline.call(null, function() {
        return cljs.core.apply.call(null, f, args)
      })
    };
    var G__159804 = function(f, var_args) {
      var args = null;
      if(goog.isDef(var_args)) {
        args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__159804__delegate.call(this, f, args)
    };
    G__159804.cljs$lang$maxFixedArity = 1;
    G__159804.cljs$lang$applyTo = function(arglist__159805) {
      var f = cljs.core.first(arglist__159805);
      var args = cljs.core.rest(arglist__159805);
      return G__159804__delegate(f, args)
    };
    G__159804.cljs$lang$arity$variadic = G__159804__delegate;
    return G__159804
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        return trampoline__2.cljs$lang$arity$variadic(f, cljs.core.array_seq(arguments, 1))
    }
    throw"Invalid arity: " + arguments.length;
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$lang$arity$1 = trampoline__1;
  trampoline.cljs$lang$arity$variadic = trampoline__2.cljs$lang$arity$variadic;
  return trampoline
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.call(null, 1)
  };
  var rand__1 = function(n) {
    return Math.random.call(null) * n
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n)
    }
    throw"Invalid arity: " + arguments.length;
  };
  rand.cljs$lang$arity$0 = rand__0;
  rand.cljs$lang$arity$1 = rand__1;
  return rand
}();
cljs.core.rand_int = function rand_int(n) {
  return Math.floor.call(null, Math.random.call(null) * n)
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.call(null, coll, cljs.core.rand_int.call(null, cljs.core.count.call(null, coll)))
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.reduce.call(null, function(ret, x) {
    var k__159807 = f.call(null, x);
    return cljs.core.assoc.call(null, ret, k__159807, cljs.core.conj.call(null, cljs.core._lookup.call(null, ret, k__159807, cljs.core.PersistentVector.EMPTY), x))
  }, cljs.core.ObjMap.EMPTY, coll)
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'descendants", "\ufdd0'ancestors"], {"\ufdd0'parents":cljs.core.ObjMap.EMPTY, "\ufdd0'descendants":cljs.core.ObjMap.EMPTY, "\ufdd0'ancestors":cljs.core.ObjMap.EMPTY})
};
cljs.core.global_hierarchy = cljs.core.atom.call(null, cljs.core.make_hierarchy.call(null));
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), child, parent)
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3862__auto____159816 = cljs.core._EQ_.call(null, child, parent);
    if(or__3862__auto____159816) {
      return or__3862__auto____159816
    }else {
      var or__3862__auto____159817 = cljs.core.contains_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h).call(null, child), parent);
      if(or__3862__auto____159817) {
        return or__3862__auto____159817
      }else {
        var and__3860__auto____159818 = cljs.core.vector_QMARK_.call(null, parent);
        if(and__3860__auto____159818) {
          var and__3860__auto____159819 = cljs.core.vector_QMARK_.call(null, child);
          if(and__3860__auto____159819) {
            var and__3860__auto____159820 = cljs.core.count.call(null, parent) === cljs.core.count.call(null, child);
            if(and__3860__auto____159820) {
              var ret__159821 = true;
              var i__159822 = 0;
              while(true) {
                if(function() {
                  var or__3862__auto____159823 = cljs.core.not.call(null, ret__159821);
                  if(or__3862__auto____159823) {
                    return or__3862__auto____159823
                  }else {
                    return i__159822 === cljs.core.count.call(null, parent)
                  }
                }()) {
                  return ret__159821
                }else {
                  var G__159824 = isa_QMARK_.call(null, h, child.call(null, i__159822), parent.call(null, i__159822));
                  var G__159825 = i__159822 + 1;
                  ret__159821 = G__159824;
                  i__159822 = G__159825;
                  continue
                }
                break
              }
            }else {
              return and__3860__auto____159820
            }
          }else {
            return and__3860__auto____159819
          }
        }else {
          return and__3860__auto____159818
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  isa_QMARK_.cljs$lang$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$lang$arity$3 = isa_QMARK___3;
  return isa_QMARK_
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, null))
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  parents.cljs$lang$arity$1 = parents__1;
  parents.cljs$lang$arity$2 = parents__2;
  return parents
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, null))
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  ancestors.cljs$lang$arity$1 = ancestors__1;
  ancestors.cljs$lang$arity$2 = ancestors__2;
  return ancestors
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.call(null, cljs.core.deref.call(null, cljs.core.global_hierarchy), tag)
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty.call(null, cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), tag, null))
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag)
    }
    throw"Invalid arity: " + arguments.length;
  };
  descendants.cljs$lang$arity$1 = descendants__1;
  descendants.cljs$lang$arity$2 = descendants__2;
  return descendants
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if(cljs.core.truth_(cljs.core.namespace.call(null, parent))) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'namespace", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6724))))].join(""));
    }
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, derive, tag, parent);
    return null
  };
  var derive__3 = function(h, tag, parent) {
    if(cljs.core.not_EQ_.call(null, tag, parent)) {
    }else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.with_meta(cljs.core.list("\ufdd1'not=", "\ufdd1'tag", "\ufdd1'parent"), cljs.core.hash_map("\ufdd0'line", 6728))))].join(""));
    }
    var tp__159834 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var td__159835 = (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h);
    var ta__159836 = (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h);
    var tf__159837 = function(m, source, sources, target, targets) {
      return cljs.core.reduce.call(null, function(ret, k) {
        return cljs.core.assoc.call(null, ret, k, cljs.core.reduce.call(null, cljs.core.conj, cljs.core._lookup.call(null, targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons.call(null, target, targets.call(null, target))))
      }, m, cljs.core.cons.call(null, source, sources.call(null, source)))
    };
    var or__3862__auto____159838 = cljs.core.contains_QMARK_.call(null, tp__159834.call(null, tag), parent) ? null : function() {
      if(cljs.core.contains_QMARK_.call(null, ta__159836.call(null, tag), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      if(cljs.core.contains_QMARK_.call(null, ta__159836.call(null, parent), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      }else {
      }
      return cljs.core.ObjMap.fromObject(["\ufdd0'parents", "\ufdd0'ancestors", "\ufdd0'descendants"], {"\ufdd0'parents":cljs.core.assoc.call(null, (new cljs.core.Keyword("\ufdd0'parents")).call(null, h), tag, cljs.core.conj.call(null, cljs.core._lookup.call(null, tp__159834, tag, cljs.core.PersistentHashSet.EMPTY), parent)), "\ufdd0'ancestors":tf__159837.call(null, (new cljs.core.Keyword("\ufdd0'ancestors")).call(null, h), tag, td__159835, parent, ta__159836), "\ufdd0'descendants":tf__159837.call(null, 
      (new cljs.core.Keyword("\ufdd0'descendants")).call(null, h), parent, ta__159836, tag, td__159835)})
    }();
    if(cljs.core.truth_(or__3862__auto____159838)) {
      return or__3862__auto____159838
    }else {
      return h
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  derive.cljs$lang$arity$2 = derive__2;
  derive.cljs$lang$arity$3 = derive__3;
  return derive
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_BANG_.call(null, cljs.core.global_hierarchy, underive, tag, parent);
    return null
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap__159843 = (new cljs.core.Keyword("\ufdd0'parents")).call(null, h);
    var childsParents__159844 = cljs.core.truth_(parentMap__159843.call(null, tag)) ? cljs.core.disj.call(null, parentMap__159843.call(null, tag), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents__159845 = cljs.core.truth_(cljs.core.not_empty.call(null, childsParents__159844)) ? cljs.core.assoc.call(null, parentMap__159843, tag, childsParents__159844) : cljs.core.dissoc.call(null, parentMap__159843, tag);
    var deriv_seq__159846 = cljs.core.flatten.call(null, cljs.core.map.call(null, function(p1__159826_SHARP_) {
      return cljs.core.cons.call(null, cljs.core.first.call(null, p1__159826_SHARP_), cljs.core.interpose.call(null, cljs.core.first.call(null, p1__159826_SHARP_), cljs.core.second.call(null, p1__159826_SHARP_)))
    }, cljs.core.seq.call(null, newParents__159845)));
    if(cljs.core.contains_QMARK_.call(null, parentMap__159843.call(null, tag), parent)) {
      return cljs.core.reduce.call(null, function(p1__159827_SHARP_, p2__159828_SHARP_) {
        return cljs.core.apply.call(null, cljs.core.derive, p1__159827_SHARP_, p2__159828_SHARP_)
      }, cljs.core.make_hierarchy.call(null), cljs.core.partition.call(null, 2, deriv_seq__159846))
    }else {
      return h
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent)
    }
    throw"Invalid arity: " + arguments.length;
  };
  underive.cljs$lang$arity$2 = underive__2;
  underive.cljs$lang$arity$3 = underive__3;
  return underive
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.call(null, method_cache, function(_) {
    return cljs.core.deref.call(null, method_table)
  });
  return cljs.core.swap_BANG_.call(null, cached_hierarchy, function(_) {
    return cljs.core.deref.call(null, hierarchy)
  })
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs__159854 = cljs.core.deref.call(null, prefer_table).call(null, x);
  var or__3862__auto____159856 = cljs.core.truth_(function() {
    var and__3860__auto____159855 = xprefs__159854;
    if(cljs.core.truth_(and__3860__auto____159855)) {
      return xprefs__159854.call(null, y)
    }else {
      return and__3860__auto____159855
    }
  }()) ? true : null;
  if(cljs.core.truth_(or__3862__auto____159856)) {
    return or__3862__auto____159856
  }else {
    var or__3862__auto____159858 = function() {
      var ps__159857 = cljs.core.parents.call(null, y);
      while(true) {
        if(cljs.core.count.call(null, ps__159857) > 0) {
          if(cljs.core.truth_(prefers_STAR_.call(null, x, cljs.core.first.call(null, ps__159857), prefer_table))) {
          }else {
          }
          var G__159861 = cljs.core.rest.call(null, ps__159857);
          ps__159857 = G__159861;
          continue
        }else {
          return null
        }
        break
      }
    }();
    if(cljs.core.truth_(or__3862__auto____159858)) {
      return or__3862__auto____159858
    }else {
      var or__3862__auto____159860 = function() {
        var ps__159859 = cljs.core.parents.call(null, x);
        while(true) {
          if(cljs.core.count.call(null, ps__159859) > 0) {
            if(cljs.core.truth_(prefers_STAR_.call(null, cljs.core.first.call(null, ps__159859), y, prefer_table))) {
            }else {
            }
            var G__159862 = cljs.core.rest.call(null, ps__159859);
            ps__159859 = G__159862;
            continue
          }else {
            return null
          }
          break
        }
      }();
      if(cljs.core.truth_(or__3862__auto____159860)) {
        return or__3862__auto____159860
      }else {
        return false
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3862__auto____159864 = cljs.core.prefers_STAR_.call(null, x, y, prefer_table);
  if(cljs.core.truth_(or__3862__auto____159864)) {
    return or__3862__auto____159864
  }else {
    return cljs.core.isa_QMARK_.call(null, x, y)
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry__159882 = cljs.core.reduce.call(null, function(be, p__159874) {
    var vec__159875__159876 = p__159874;
    var k__159877 = cljs.core.nth.call(null, vec__159875__159876, 0, null);
    var ___159878 = cljs.core.nth.call(null, vec__159875__159876, 1, null);
    var e__159879 = vec__159875__159876;
    if(cljs.core.isa_QMARK_.call(null, dispatch_val, k__159877)) {
      var be2__159881 = cljs.core.truth_(function() {
        var or__3862__auto____159880 = be == null;
        if(or__3862__auto____159880) {
          return or__3862__auto____159880
        }else {
          return cljs.core.dominates.call(null, k__159877, cljs.core.first.call(null, be), prefer_table)
        }
      }()) ? e__159879 : be;
      if(cljs.core.truth_(cljs.core.dominates.call(null, cljs.core.first.call(null, be2__159881), k__159877, prefer_table))) {
      }else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -> "), cljs.core.str(k__159877), cljs.core.str(" and "), cljs.core.str(cljs.core.first.call(null, be2__159881)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2__159881
    }else {
      return be
    }
  }, null, cljs.core.deref.call(null, method_table));
  if(cljs.core.truth_(best_entry__159882)) {
    if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, cached_hierarchy), cljs.core.deref.call(null, hierarchy))) {
      cljs.core.swap_BANG_.call(null, method_cache, cljs.core.assoc, dispatch_val, cljs.core.second.call(null, best_entry__159882));
      return cljs.core.second.call(null, best_entry__159882)
    }else {
      cljs.core.reset_cache.call(null, method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method.call(null, name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy)
    }
  }else {
    return null
  }
};
cljs.core.IMultiFn = {};
cljs.core._reset = function _reset(mf) {
  if(function() {
    var and__3860__auto____159887 = mf;
    if(and__3860__auto____159887) {
      return mf.cljs$core$IMultiFn$_reset$arity$1
    }else {
      return and__3860__auto____159887
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf)
  }else {
    var x__2400__auto____159888 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159889 = cljs.core._reset[goog.typeOf(x__2400__auto____159888)];
      if(or__3862__auto____159889) {
        return or__3862__auto____159889
      }else {
        var or__3862__auto____159890 = cljs.core._reset["_"];
        if(or__3862__auto____159890) {
          return or__3862__auto____159890
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if(function() {
    var and__3860__auto____159895 = mf;
    if(and__3860__auto____159895) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3
    }else {
      return and__3860__auto____159895
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method)
  }else {
    var x__2400__auto____159896 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159897 = cljs.core._add_method[goog.typeOf(x__2400__auto____159896)];
      if(or__3862__auto____159897) {
        return or__3862__auto____159897
      }else {
        var or__3862__auto____159898 = cljs.core._add_method["_"];
        if(or__3862__auto____159898) {
          return or__3862__auto____159898
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method)
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if(function() {
    var and__3860__auto____159903 = mf;
    if(and__3860__auto____159903) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2
    }else {
      return and__3860__auto____159903
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val)
  }else {
    var x__2400__auto____159904 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159905 = cljs.core._remove_method[goog.typeOf(x__2400__auto____159904)];
      if(or__3862__auto____159905) {
        return or__3862__auto____159905
      }else {
        var or__3862__auto____159906 = cljs.core._remove_method["_"];
        if(or__3862__auto____159906) {
          return or__3862__auto____159906
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if(function() {
    var and__3860__auto____159911 = mf;
    if(and__3860__auto____159911) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3
    }else {
      return and__3860__auto____159911
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y)
  }else {
    var x__2400__auto____159912 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159913 = cljs.core._prefer_method[goog.typeOf(x__2400__auto____159912)];
      if(or__3862__auto____159913) {
        return or__3862__auto____159913
      }else {
        var or__3862__auto____159914 = cljs.core._prefer_method["_"];
        if(or__3862__auto____159914) {
          return or__3862__auto____159914
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y)
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if(function() {
    var and__3860__auto____159919 = mf;
    if(and__3860__auto____159919) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2
    }else {
      return and__3860__auto____159919
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val)
  }else {
    var x__2400__auto____159920 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159921 = cljs.core._get_method[goog.typeOf(x__2400__auto____159920)];
      if(or__3862__auto____159921) {
        return or__3862__auto____159921
      }else {
        var or__3862__auto____159922 = cljs.core._get_method["_"];
        if(or__3862__auto____159922) {
          return or__3862__auto____159922
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val)
  }
};
cljs.core._methods = function _methods(mf) {
  if(function() {
    var and__3860__auto____159927 = mf;
    if(and__3860__auto____159927) {
      return mf.cljs$core$IMultiFn$_methods$arity$1
    }else {
      return and__3860__auto____159927
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf)
  }else {
    var x__2400__auto____159928 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159929 = cljs.core._methods[goog.typeOf(x__2400__auto____159928)];
      if(or__3862__auto____159929) {
        return or__3862__auto____159929
      }else {
        var or__3862__auto____159930 = cljs.core._methods["_"];
        if(or__3862__auto____159930) {
          return or__3862__auto____159930
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._prefers = function _prefers(mf) {
  if(function() {
    var and__3860__auto____159935 = mf;
    if(and__3860__auto____159935) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1
    }else {
      return and__3860__auto____159935
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf)
  }else {
    var x__2400__auto____159936 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159937 = cljs.core._prefers[goog.typeOf(x__2400__auto____159936)];
      if(or__3862__auto____159937) {
        return or__3862__auto____159937
      }else {
        var or__3862__auto____159938 = cljs.core._prefers["_"];
        if(or__3862__auto____159938) {
          return or__3862__auto____159938
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf)
  }
};
cljs.core._dispatch = function _dispatch(mf, args) {
  if(function() {
    var and__3860__auto____159943 = mf;
    if(and__3860__auto____159943) {
      return mf.cljs$core$IMultiFn$_dispatch$arity$2
    }else {
      return and__3860__auto____159943
    }
  }()) {
    return mf.cljs$core$IMultiFn$_dispatch$arity$2(mf, args)
  }else {
    var x__2400__auto____159944 = mf == null ? null : mf;
    return function() {
      var or__3862__auto____159945 = cljs.core._dispatch[goog.typeOf(x__2400__auto____159944)];
      if(or__3862__auto____159945) {
        return or__3862__auto____159945
      }else {
        var or__3862__auto____159946 = cljs.core._dispatch["_"];
        if(or__3862__auto____159946) {
          return or__3862__auto____159946
        }else {
          throw cljs.core.missing_protocol.call(null, "IMultiFn.-dispatch", mf);
        }
      }
    }().call(null, mf, args)
  }
};
cljs.core.do_dispatch = function do_dispatch(mf, dispatch_fn, args) {
  var dispatch_val__159949 = cljs.core.apply.call(null, dispatch_fn, args);
  var target_fn__159950 = cljs.core._get_method.call(null, mf, dispatch_val__159949);
  if(cljs.core.truth_(target_fn__159950)) {
  }else {
    throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(cljs.core.name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val__159949)].join(""));
  }
  return cljs.core.apply.call(null, target_fn__159950, args)
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194304;
  this.cljs$lang$protocol_mask$partition1$ = 64
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/MultiFn")
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__159951 = this;
  return goog.getUid(this$)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var this__159952 = this;
  cljs.core.swap_BANG_.call(null, this__159952.method_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__159952.method_cache, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__159952.prefer_table, function(mf) {
    return cljs.core.ObjMap.EMPTY
  });
  cljs.core.swap_BANG_.call(null, this__159952.cached_hierarchy, function(mf) {
    return null
  });
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var this__159953 = this;
  cljs.core.swap_BANG_.call(null, this__159953.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache.call(null, this__159953.method_cache, this__159953.method_table, this__159953.cached_hierarchy, this__159953.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var this__159954 = this;
  cljs.core.swap_BANG_.call(null, this__159954.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache.call(null, this__159954.method_cache, this__159954.method_table, this__159954.cached_hierarchy, this__159954.hierarchy);
  return mf
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var this__159955 = this;
  if(cljs.core._EQ_.call(null, cljs.core.deref.call(null, this__159955.cached_hierarchy), cljs.core.deref.call(null, this__159955.hierarchy))) {
  }else {
    cljs.core.reset_cache.call(null, this__159955.method_cache, this__159955.method_table, this__159955.cached_hierarchy, this__159955.hierarchy)
  }
  var temp__4009__auto____159956 = cljs.core.deref.call(null, this__159955.method_cache).call(null, dispatch_val);
  if(cljs.core.truth_(temp__4009__auto____159956)) {
    var target_fn__159957 = temp__4009__auto____159956;
    return target_fn__159957
  }else {
    var temp__4009__auto____159958 = cljs.core.find_and_cache_best_method.call(null, this__159955.name, dispatch_val, this__159955.hierarchy, this__159955.method_table, this__159955.prefer_table, this__159955.method_cache, this__159955.cached_hierarchy);
    if(cljs.core.truth_(temp__4009__auto____159958)) {
      var target_fn__159959 = temp__4009__auto____159958;
      return target_fn__159959
    }else {
      return cljs.core.deref.call(null, this__159955.method_table).call(null, this__159955.default_dispatch_val)
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var this__159960 = this;
  if(cljs.core.truth_(cljs.core.prefers_STAR_.call(null, dispatch_val_x, dispatch_val_y, this__159960.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(this__159960.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  }else {
  }
  cljs.core.swap_BANG_.call(null, this__159960.prefer_table, function(old) {
    return cljs.core.assoc.call(null, old, dispatch_val_x, cljs.core.conj.call(null, cljs.core._lookup.call(null, old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y))
  });
  return cljs.core.reset_cache.call(null, this__159960.method_cache, this__159960.method_table, this__159960.cached_hierarchy, this__159960.hierarchy)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var this__159961 = this;
  return cljs.core.deref.call(null, this__159961.method_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var this__159962 = this;
  return cljs.core.deref.call(null, this__159962.prefer_table)
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_dispatch$arity$2 = function(mf, args) {
  var this__159963 = this;
  return cljs.core.do_dispatch.call(null, mf, this__159963.dispatch_fn, args)
};
cljs.core.MultiFn;
cljs.core.MultiFn.prototype.call = function() {
  var G__159965__delegate = function(_, args) {
    var self__159964 = this;
    return cljs.core._dispatch.call(null, self__159964, args)
  };
  var G__159965 = function(_, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return G__159965__delegate.call(this, _, args)
  };
  G__159965.cljs$lang$maxFixedArity = 1;
  G__159965.cljs$lang$applyTo = function(arglist__159966) {
    var _ = cljs.core.first(arglist__159966);
    var args = cljs.core.rest(arglist__159966);
    return G__159965__delegate(_, args)
  };
  G__159965.cljs$lang$arity$variadic = G__159965__delegate;
  return G__159965
}();
cljs.core.MultiFn.prototype.apply = function(_, args) {
  var self__159967 = this;
  return cljs.core._dispatch.call(null, self__159967, args)
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset.call(null, multifn)
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method.call(null, multifn, dispatch_val)
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method.call(null, multifn, dispatch_val_x, dispatch_val_y)
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods.call(null, multifn)
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method.call(null, multifn, dispatch_val)
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers.call(null, multifn)
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 543162368
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
  return cljs.core.list.call(null, "cljs.core/UUID")
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var this__159968 = this;
  return goog.string.hashCode(cljs.core.pr_str.call(null, this$))
};
cljs.core.UUID.prototype.cljs$core$IPrintable$_pr_seq$arity$2 = function(_159970, _) {
  var this__159969 = this;
  return cljs.core.list.call(null, [cljs.core.str('#uuid "'), cljs.core.str(this__159969.uuid), cljs.core.str('"')].join(""))
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var this__159971 = this;
  var and__3860__auto____159972 = cljs.core.instance_QMARK_.call(null, cljs.core.UUID, other);
  if(and__3860__auto____159972) {
    return this__159971.uuid === other.uuid
  }else {
    return and__3860__auto____159972
  }
};
cljs.core.UUID.prototype.toString = function() {
  var this__159973 = this;
  var this__159974 = this;
  return cljs.core.pr_str.call(null, this__159974)
};
cljs.core.UUID;
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll)
};
clojure.string.reverse = function reverse(s) {
  return s.split("").reverse().join("")
};
clojure.string.replace = function replace(s, match, replacement) {
  if(cljs.core.string_QMARK_.call(null, match)) {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement)
  }else {
    if(cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement)
    }else {
      if("\ufdd0'else") {
        throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
      }else {
        return null
      }
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement)
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    return cljs.core.apply.call(null, cljs.core.str, coll)
  };
  var join__2 = function(separator, coll) {
    return cljs.core.apply.call(null, cljs.core.str, cljs.core.interpose.call(null, separator, coll))
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll)
    }
    throw"Invalid arity: " + arguments.length;
  };
  join.cljs$lang$arity$1 = join__1;
  join.cljs$lang$arity$2 = join__2;
  return join
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase()
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase()
};
clojure.string.capitalize = function capitalize(s) {
  if(cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s)
  }else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("")
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
  };
  var split__3 = function(s, re, limit) {
    if(limit < 1) {
      return cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re))
    }else {
      var s__160218 = s;
      var limit__160219 = limit;
      var parts__160220 = cljs.core.PersistentVector.EMPTY;
      while(true) {
        if(cljs.core._EQ_.call(null, limit__160219, 1)) {
          return cljs.core.conj.call(null, parts__160220, s__160218)
        }else {
          var temp__4009__auto____160221 = cljs.core.re_find.call(null, re, s__160218);
          if(cljs.core.truth_(temp__4009__auto____160221)) {
            var m__160222 = temp__4009__auto____160221;
            var index__160223 = s__160218.indexOf(m__160222);
            var G__160224 = s__160218.substring(index__160223 + cljs.core.count.call(null, m__160222));
            var G__160225 = limit__160219 - 1;
            var G__160226 = cljs.core.conj.call(null, parts__160220, s__160218.substring(0, index__160223));
            s__160218 = G__160224;
            limit__160219 = G__160225;
            parts__160220 = G__160226;
            continue
          }else {
            return cljs.core.conj.call(null, parts__160220, s__160218)
          }
        }
        break
      }
    }
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit)
    }
    throw"Invalid arity: " + arguments.length;
  };
  split.cljs$lang$arity$2 = split__2;
  split.cljs$lang$arity$3 = split__3;
  return split
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/)
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s)
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s)
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s)
};
clojure.string.trim_newline = function trim_newline(s) {
  var index__160230 = s.length;
  while(true) {
    if(index__160230 === 0) {
      return""
    }else {
      var ch__160231 = cljs.core._lookup.call(null, s, index__160230 - 1, null);
      if(function() {
        var or__3862__auto____160232 = cljs.core._EQ_.call(null, ch__160231, "\n");
        if(or__3862__auto____160232) {
          return or__3862__auto____160232
        }else {
          return cljs.core._EQ_.call(null, ch__160231, "\r")
        }
      }()) {
        var G__160233 = index__160230 - 1;
        index__160230 = G__160233;
        continue
      }else {
        return s.substring(0, index__160230)
      }
    }
    break
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  var s__160237 = [cljs.core.str(s)].join("");
  if(cljs.core.truth_(function() {
    var or__3862__auto____160238 = cljs.core.not.call(null, s__160237);
    if(or__3862__auto____160238) {
      return or__3862__auto____160238
    }else {
      var or__3862__auto____160239 = cljs.core._EQ_.call(null, "", s__160237);
      if(or__3862__auto____160239) {
        return or__3862__auto____160239
      }else {
        return cljs.core.re_matches.call(null, /\s+/, s__160237)
      }
    }
  }())) {
    return true
  }else {
    return false
  }
};
clojure.string.escape = function escape(s, cmap) {
  var buffer__160246 = new goog.string.StringBuffer;
  var length__160247 = s.length;
  var index__160248 = 0;
  while(true) {
    if(cljs.core._EQ_.call(null, length__160247, index__160248)) {
      return buffer__160246.toString()
    }else {
      var ch__160249 = s.charAt(index__160248);
      var temp__4009__auto____160250 = cljs.core._lookup.call(null, cmap, ch__160249, null);
      if(cljs.core.truth_(temp__4009__auto____160250)) {
        var replacement__160251 = temp__4009__auto____160250;
        buffer__160246.append([cljs.core.str(replacement__160251)].join(""))
      }else {
        buffer__160246.append(ch__160249)
      }
      var G__160252 = index__160248 + 1;
      index__160248 = G__160252;
      continue
    }
    break
  }
};
goog.provide("de.karolski.teeter_totter.util");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.string");
de.karolski.teeter_totter.util.AInstance = {};
de.karolski.teeter_totter.util.class_of_STAR_ = function class_of_STAR_(_) {
  if(function() {
    var and__3860__auto____156005 = _;
    if(and__3860__auto____156005) {
      return _.de$karolski$teeter_totter$util$AInstance$class_of_STAR_$arity$1
    }else {
      return and__3860__auto____156005
    }
  }()) {
    return _.de$karolski$teeter_totter$util$AInstance$class_of_STAR_$arity$1(_)
  }else {
    var x__2400__auto____156006 = _ == null ? null : _;
    return function() {
      var or__3862__auto____156007 = de.karolski.teeter_totter.util.class_of_STAR_[goog.typeOf(x__2400__auto____156006)];
      if(or__3862__auto____156007) {
        return or__3862__auto____156007
      }else {
        var or__3862__auto____156008 = de.karolski.teeter_totter.util.class_of_STAR_["_"];
        if(or__3862__auto____156008) {
          return or__3862__auto____156008
        }else {
          throw cljs.core.missing_protocol.call(null, "AInstance.class-of*", _);
        }
      }
    }().call(null, _)
  }
};
de.karolski.teeter_totter.util.ASimpleNameable = {};
de.karolski.teeter_totter.util.get_simple_name = function get_simple_name(this$) {
  if(function() {
    var and__3860__auto____156013 = this$;
    if(and__3860__auto____156013) {
      return this$.de$karolski$teeter_totter$util$ASimpleNameable$get_simple_name$arity$1
    }else {
      return and__3860__auto____156013
    }
  }()) {
    return this$.de$karolski$teeter_totter$util$ASimpleNameable$get_simple_name$arity$1(this$)
  }else {
    var x__2400__auto____156014 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____156015 = de.karolski.teeter_totter.util.get_simple_name[goog.typeOf(x__2400__auto____156014)];
      if(or__3862__auto____156015) {
        return or__3862__auto____156015
      }else {
        var or__3862__auto____156016 = de.karolski.teeter_totter.util.get_simple_name["_"];
        if(or__3862__auto____156016) {
          return or__3862__auto____156016
        }else {
          throw cljs.core.missing_protocol.call(null, "ASimpleNameable.get-simple-name", this$);
        }
      }
    }().call(null, this$)
  }
};
de.karolski.teeter_totter.util.Children = {};
de.karolski.teeter_totter.util.children = function children(c) {
  if(function() {
    var and__3860__auto____156021 = c;
    if(and__3860__auto____156021) {
      return c.de$karolski$teeter_totter$util$Children$children$arity$1
    }else {
      return and__3860__auto____156021
    }
  }()) {
    return c.de$karolski$teeter_totter$util$Children$children$arity$1(c)
  }else {
    var x__2400__auto____156022 = c == null ? null : c;
    return function() {
      var or__3862__auto____156023 = de.karolski.teeter_totter.util.children[goog.typeOf(x__2400__auto____156022)];
      if(or__3862__auto____156023) {
        return or__3862__auto____156023
      }else {
        var or__3862__auto____156024 = de.karolski.teeter_totter.util.children["_"];
        if(or__3862__auto____156024) {
          return or__3862__auto____156024
        }else {
          throw cljs.core.missing_protocol.call(null, "Children.children", c);
        }
      }
    }().call(null, c)
  }
};
de.karolski.teeter_totter.util.class_for_name = function class_for_name(name) {
  return cljs.core.apply.call(null, cljs.core.aget, window, clojure.string.split.call(null, name, /\./))
};
de.karolski.teeter_totter.util.class_of = function class_of(obj) {
  return de.karolski.teeter_totter.util.class_of_STAR_.call(null, obj)
};
de.karolski.teeter_totter.util.is_instance_QMARK_ = function is_instance_QMARK_(cls, obj) {
  return cljs.core._EQ_.call(null, de.karolski.teeter_totter.util.class_of.call(null, obj), cls)
};
if(typeof String.prototype.startsWith != "function") {
  String.prototype.startsWith = function(str) {
    return this.slice(0, str.length) == str
  }
}
de.karolski.teeter_totter.util.clj__GT_js = function clj__GT_js(x) {
  if(cljs.core.string_QMARK_.call(null, x)) {
    return x
  }else {
    if(cljs.core.keyword_QMARK_.call(null, x)) {
      return cljs.core.name.call(null, x)
    }else {
      if(cljs.core.map_QMARK_.call(null, x)) {
        return cljs.core.reduce.call(null, function(m, p__156030) {
          var vec__156031__156032 = p__156030;
          var k__156033 = cljs.core.nth.call(null, vec__156031__156032, 0, null);
          var v__156034 = cljs.core.nth.call(null, vec__156031__156032, 1, null);
          return cljs.core.assoc.call(null, m, clj__GT_js.call(null, k__156033), clj__GT_js.call(null, v__156034))
        }, cljs.core.ObjMap.EMPTY, x).strobj()
      }else {
        if(cljs.core.coll_QMARK_.call(null, x)) {
          return cljs.core.apply.call(null, cljs.core.array, cljs.core.map.call(null, clj__GT_js, x))
        }else {
          if("\ufdd0'else") {
            return x
          }else {
            return null
          }
        }
      }
    }
  }
};
de.karolski.teeter_totter.util.map_over_keys = function map_over_keys(m, f) {
  return cljs.core.apply.call(null, cljs.core.hash_map, cljs.core.interleave.call(null, cljs.core.map.call(null, f, cljs.core.keys.call(null, m)), cljs.core.vals.call(null, m)))
};
de.karolski.teeter_totter.util.keywordize_map_keys = function keywordize_map_keys(m) {
  return de.karolski.teeter_totter.util.map_over_keys.call(null, m, cljs.core.keyword)
};
goog.exportSymbol("de.karolski.teeter_totter.util.keywordize_map_keys", de.karolski.teeter_totter.util.keywordize_map_keys);
de.karolski.teeter_totter.util.stringify_map_keys = function stringify_map_keys(m) {
  return de.karolski.teeter_totter.util.map_over_keys.call(null, m, cljs.core.name)
};
goog.exportSymbol("de.karolski.teeter_totter.util.stringify_map_keys", de.karolski.teeter_totter.util.stringify_map_keys);
goog.provide("goog.disposable.IDisposable");
goog.disposable.IDisposable = function() {
};
goog.disposable.IDisposable.prototype.dispose;
goog.disposable.IDisposable.prototype.isDisposed;
goog.provide("goog.Disposable");
goog.provide("goog.dispose");
goog.require("goog.disposable.IDisposable");
goog.Disposable = function() {
  if(goog.Disposable.ENABLE_MONITORING) {
    goog.Disposable.instances_[goog.getUid(this)] = this
  }
};
goog.Disposable.ENABLE_MONITORING = false;
goog.Disposable.instances_ = {};
goog.Disposable.getUndisposedObjects = function() {
  var ret = [];
  for(var id in goog.Disposable.instances_) {
    if(goog.Disposable.instances_.hasOwnProperty(id)) {
      ret.push(goog.Disposable.instances_[Number(id)])
    }
  }
  return ret
};
goog.Disposable.clearUndisposedObjects = function() {
  goog.Disposable.instances_ = {}
};
goog.Disposable.prototype.disposed_ = false;
goog.Disposable.prototype.dependentDisposables_;
goog.Disposable.prototype.isDisposed = function() {
  return this.disposed_
};
goog.Disposable.prototype.getDisposed = goog.Disposable.prototype.isDisposed;
goog.Disposable.prototype.dispose = function() {
  if(!this.disposed_) {
    this.disposed_ = true;
    this.disposeInternal();
    if(goog.Disposable.ENABLE_MONITORING) {
      var uid = goog.getUid(this);
      if(!goog.Disposable.instances_.hasOwnProperty(uid)) {
        throw Error(this + " did not call the goog.Disposable base " + "constructor or was disposed of after a clearUndisposedObjects " + "call");
      }
      delete goog.Disposable.instances_[uid]
    }
  }
};
goog.Disposable.prototype.registerDisposable = function(disposable) {
  if(!this.dependentDisposables_) {
    this.dependentDisposables_ = []
  }
  this.dependentDisposables_.push(disposable)
};
goog.Disposable.prototype.disposeInternal = function() {
  if(this.dependentDisposables_) {
    goog.disposeAll.apply(null, this.dependentDisposables_)
  }
};
goog.dispose = function(obj) {
  if(obj && typeof obj.dispose == "function") {
    obj.dispose()
  }
};
goog.disposeAll = function(var_args) {
  for(var i = 0, len = arguments.length;i < len;++i) {
    var disposable = arguments[i];
    if(goog.isArrayLike(disposable)) {
      goog.disposeAll.apply(null, disposable)
    }else {
      goog.dispose(disposable)
    }
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if(goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for(var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]))
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor)
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for(var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer)
  }
  monitors.length--
};
goog.provide("goog.debug.errorHandlerWeakDep");
goog.debug.errorHandlerWeakDep = {protectEntryPoint:function(fn, opt_tracers) {
  return fn
}};
goog.provide("goog.userAgent");
goog.require("goog.string");
goog.userAgent.ASSUME_IE = false;
goog.userAgent.ASSUME_GECKO = false;
goog.userAgent.ASSUME_WEBKIT = false;
goog.userAgent.ASSUME_MOBILE_WEBKIT = false;
goog.userAgent.ASSUME_OPERA = false;
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.global["navigator"] ? goog.global["navigator"].userAgent : null
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"]
};
goog.userAgent.init_ = function() {
  goog.userAgent.detectedOpera_ = false;
  goog.userAgent.detectedIe_ = false;
  goog.userAgent.detectedWebkit_ = false;
  goog.userAgent.detectedMobile_ = false;
  goog.userAgent.detectedGecko_ = false;
  var ua;
  if(!goog.userAgent.BROWSER_KNOWN_ && (ua = goog.userAgent.getUserAgentString())) {
    var navigator = goog.userAgent.getNavigator();
    goog.userAgent.detectedOpera_ = ua.indexOf("Opera") == 0;
    goog.userAgent.detectedIe_ = !goog.userAgent.detectedOpera_ && ua.indexOf("MSIE") != -1;
    goog.userAgent.detectedWebkit_ = !goog.userAgent.detectedOpera_ && ua.indexOf("WebKit") != -1;
    goog.userAgent.detectedMobile_ = goog.userAgent.detectedWebkit_ && ua.indexOf("Mobile") != -1;
    goog.userAgent.detectedGecko_ = !goog.userAgent.detectedOpera_ && !goog.userAgent.detectedWebkit_ && navigator.product == "Gecko"
  }
};
if(!goog.userAgent.BROWSER_KNOWN_) {
  goog.userAgent.init_()
}
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.userAgent.detectedOpera_;
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.userAgent.detectedIe_;
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.userAgent.detectedGecko_;
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.userAgent.detectedWebkit_;
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.detectedMobile_;
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || ""
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.userAgent.ASSUME_MAC = false;
goog.userAgent.ASSUME_WINDOWS = false;
goog.userAgent.ASSUME_LINUX = false;
goog.userAgent.ASSUME_X11 = false;
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11")
};
if(!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_()
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if(goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    version = typeof operaVersion == "function" ? operaVersion() : operaVersion
  }else {
    if(goog.userAgent.GECKO) {
      re = /rv\:([^\);]+)(\)|;)/
    }else {
      if(goog.userAgent.IE) {
        re = /MSIE\s+([^\);]+)(\)|;)/
      }else {
        if(goog.userAgent.WEBKIT) {
          re = /WebKit\/(\S+)/
        }
      }
    }
    if(re) {
      var arr = re.exec(goog.userAgent.getUserAgentString());
      version = arr ? arr[1] : ""
    }
  }
  if(goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if(docMode > parseFloat(version)) {
      return String(docMode)
    }
  }
  return version
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2)
};
goog.userAgent.isVersionCache_ = {};
goog.userAgent.isVersion = function(version) {
  return goog.userAgent.isVersionCache_[version] || (goog.userAgent.isVersionCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0)
};
goog.userAgent.isDocumentModeCache_ = {};
goog.userAgent.isDocumentMode = function(documentMode) {
  return goog.userAgent.isDocumentModeCache_[documentMode] || (goog.userAgent.isDocumentModeCache_[documentMode] = goog.userAgent.IE && document.documentMode && document.documentMode >= documentMode)
};
goog.provide("goog.events.BrowserFeature");
goog.require("goog.userAgent");
goog.events.BrowserFeature = {HAS_W3C_BUTTON:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), HAS_W3C_EVENT_SUPPORT:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), SET_KEY_CODE_TO_PREVENT_DEFAULT:goog.userAgent.IE && !goog.userAgent.isVersion("8")};
goog.provide("goog.events.Event");
goog.require("goog.Disposable");
goog.events.Event = function(type, opt_target) {
  goog.Disposable.call(this);
  this.type = type;
  this.target = opt_target;
  this.currentTarget = this.target
};
goog.inherits(goog.events.Event, goog.Disposable);
goog.events.Event.prototype.disposeInternal = function() {
  delete this.type;
  delete this.target;
  delete this.currentTarget
};
goog.events.Event.prototype.propagationStopped_ = false;
goog.events.Event.prototype.returnValue_ = true;
goog.events.Event.prototype.stopPropagation = function() {
  this.propagationStopped_ = true
};
goog.events.Event.prototype.preventDefault = function() {
  this.returnValue_ = false
};
goog.events.Event.stopPropagation = function(e) {
  e.stopPropagation()
};
goog.events.Event.preventDefault = function(e) {
  e.preventDefault()
};
goog.provide("goog.events.EventType");
goog.require("goog.userAgent");
goog.events.EventType = {CLICK:"click", DBLCLICK:"dblclick", MOUSEDOWN:"mousedown", MOUSEUP:"mouseup", MOUSEOVER:"mouseover", MOUSEOUT:"mouseout", MOUSEMOVE:"mousemove", SELECTSTART:"selectstart", KEYPRESS:"keypress", KEYDOWN:"keydown", KEYUP:"keyup", BLUR:"blur", FOCUS:"focus", DEACTIVATE:"deactivate", FOCUSIN:goog.userAgent.IE ? "focusin" : "DOMFocusIn", FOCUSOUT:goog.userAgent.IE ? "focusout" : "DOMFocusOut", CHANGE:"change", SELECT:"select", SUBMIT:"submit", INPUT:"input", PROPERTYCHANGE:"propertychange", 
DRAGSTART:"dragstart", DRAGENTER:"dragenter", DRAGOVER:"dragover", DRAGLEAVE:"dragleave", DROP:"drop", TOUCHSTART:"touchstart", TOUCHMOVE:"touchmove", TOUCHEND:"touchend", TOUCHCANCEL:"touchcancel", CONTEXTMENU:"contextmenu", ERROR:"error", HELP:"help", LOAD:"load", LOSECAPTURE:"losecapture", READYSTATECHANGE:"readystatechange", RESIZE:"resize", SCROLL:"scroll", UNLOAD:"unload", HASHCHANGE:"hashchange", PAGEHIDE:"pagehide", PAGESHOW:"pageshow", POPSTATE:"popstate", COPY:"copy", PASTE:"paste", CUT:"cut", 
BEFORECOPY:"beforecopy", BEFORECUT:"beforecut", BEFOREPASTE:"beforepaste", MESSAGE:"message", CONNECT:"connect", TRANSITIONEND:goog.userAgent.WEBKIT ? "webkitTransitionEnd" : goog.userAgent.OPERA ? "oTransitionEnd" : "transitionend"};
goog.provide("goog.reflect");
goog.reflect.object = function(type, object) {
  return object
};
goog.reflect.sinkValue = function(x) {
  goog.reflect.sinkValue[" "](x);
  return x
};
goog.reflect.sinkValue[" "] = goog.nullFunction;
goog.reflect.canAccessProperty = function(obj, prop) {
  try {
    goog.reflect.sinkValue(obj[prop]);
    return true
  }catch(e) {
  }
  return false
};
goog.provide("goog.events.BrowserEvent");
goog.provide("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.reflect");
goog.require("goog.userAgent");
goog.events.BrowserEvent = function(opt_e, opt_currentTarget) {
  if(opt_e) {
    this.init(opt_e, opt_currentTarget)
  }
};
goog.inherits(goog.events.BrowserEvent, goog.events.Event);
goog.events.BrowserEvent.MouseButton = {LEFT:0, MIDDLE:1, RIGHT:2};
goog.events.BrowserEvent.IEButtonMap = [1, 4, 2];
goog.events.BrowserEvent.prototype.target = null;
goog.events.BrowserEvent.prototype.currentTarget;
goog.events.BrowserEvent.prototype.relatedTarget = null;
goog.events.BrowserEvent.prototype.offsetX = 0;
goog.events.BrowserEvent.prototype.offsetY = 0;
goog.events.BrowserEvent.prototype.clientX = 0;
goog.events.BrowserEvent.prototype.clientY = 0;
goog.events.BrowserEvent.prototype.screenX = 0;
goog.events.BrowserEvent.prototype.screenY = 0;
goog.events.BrowserEvent.prototype.button = 0;
goog.events.BrowserEvent.prototype.keyCode = 0;
goog.events.BrowserEvent.prototype.charCode = 0;
goog.events.BrowserEvent.prototype.ctrlKey = false;
goog.events.BrowserEvent.prototype.altKey = false;
goog.events.BrowserEvent.prototype.shiftKey = false;
goog.events.BrowserEvent.prototype.metaKey = false;
goog.events.BrowserEvent.prototype.state;
goog.events.BrowserEvent.prototype.platformModifierKey = false;
goog.events.BrowserEvent.prototype.event_ = null;
goog.events.BrowserEvent.prototype.init = function(e, opt_currentTarget) {
  var type = this.type = e.type;
  goog.events.Event.call(this, type);
  this.target = e.target || e.srcElement;
  this.currentTarget = opt_currentTarget;
  var relatedTarget = e.relatedTarget;
  if(relatedTarget) {
    if(goog.userAgent.GECKO) {
      if(!goog.reflect.canAccessProperty(relatedTarget, "nodeName")) {
        relatedTarget = null
      }
    }
  }else {
    if(type == goog.events.EventType.MOUSEOVER) {
      relatedTarget = e.fromElement
    }else {
      if(type == goog.events.EventType.MOUSEOUT) {
        relatedTarget = e.toElement
      }
    }
  }
  this.relatedTarget = relatedTarget;
  this.offsetX = e.offsetX !== undefined ? e.offsetX : e.layerX;
  this.offsetY = e.offsetY !== undefined ? e.offsetY : e.layerY;
  this.clientX = e.clientX !== undefined ? e.clientX : e.pageX;
  this.clientY = e.clientY !== undefined ? e.clientY : e.pageY;
  this.screenX = e.screenX || 0;
  this.screenY = e.screenY || 0;
  this.button = e.button;
  this.keyCode = e.keyCode || 0;
  this.charCode = e.charCode || (type == "keypress" ? e.keyCode : 0);
  this.ctrlKey = e.ctrlKey;
  this.altKey = e.altKey;
  this.shiftKey = e.shiftKey;
  this.metaKey = e.metaKey;
  this.platformModifierKey = goog.userAgent.MAC ? e.metaKey : e.ctrlKey;
  this.state = e.state;
  this.event_ = e;
  delete this.returnValue_;
  delete this.propagationStopped_
};
goog.events.BrowserEvent.prototype.isButton = function(button) {
  if(!goog.events.BrowserFeature.HAS_W3C_BUTTON) {
    if(this.type == "click") {
      return button == goog.events.BrowserEvent.MouseButton.LEFT
    }else {
      return!!(this.event_.button & goog.events.BrowserEvent.IEButtonMap[button])
    }
  }else {
    return this.event_.button == button
  }
};
goog.events.BrowserEvent.prototype.isMouseActionButton = function() {
  return this.isButton(goog.events.BrowserEvent.MouseButton.LEFT) && !(goog.userAgent.WEBKIT && goog.userAgent.MAC && this.ctrlKey)
};
goog.events.BrowserEvent.prototype.stopPropagation = function() {
  goog.events.BrowserEvent.superClass_.stopPropagation.call(this);
  if(this.event_.stopPropagation) {
    this.event_.stopPropagation()
  }else {
    this.event_.cancelBubble = true
  }
};
goog.events.BrowserEvent.prototype.preventDefault = function() {
  goog.events.BrowserEvent.superClass_.preventDefault.call(this);
  var be = this.event_;
  if(!be.preventDefault) {
    be.returnValue = false;
    if(goog.events.BrowserFeature.SET_KEY_CODE_TO_PREVENT_DEFAULT) {
      try {
        var VK_F1 = 112;
        var VK_F12 = 123;
        if(be.ctrlKey || be.keyCode >= VK_F1 && be.keyCode <= VK_F12) {
          be.keyCode = -1
        }
      }catch(ex) {
      }
    }
  }else {
    be.preventDefault()
  }
};
goog.events.BrowserEvent.prototype.getBrowserEvent = function() {
  return this.event_
};
goog.events.BrowserEvent.prototype.disposeInternal = function() {
  goog.events.BrowserEvent.superClass_.disposeInternal.call(this);
  this.event_ = null;
  this.target = null;
  this.currentTarget = null;
  this.relatedTarget = null
};
goog.provide("goog.events.EventWrapper");
goog.events.EventWrapper = function() {
};
goog.events.EventWrapper.prototype.listen = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.events.EventWrapper.prototype.unlisten = function(src, listener, opt_capt, opt_scope, opt_eventHandler) {
};
goog.provide("goog.events.Listener");
goog.events.Listener = function() {
};
goog.events.Listener.counter_ = 0;
goog.events.Listener.prototype.isFunctionListener_;
goog.events.Listener.prototype.listener;
goog.events.Listener.prototype.proxy;
goog.events.Listener.prototype.src;
goog.events.Listener.prototype.type;
goog.events.Listener.prototype.capture;
goog.events.Listener.prototype.handler;
goog.events.Listener.prototype.key = 0;
goog.events.Listener.prototype.removed = false;
goog.events.Listener.prototype.callOnce = false;
goog.events.Listener.prototype.init = function(listener, proxy, src, type, capture, opt_handler) {
  if(goog.isFunction(listener)) {
    this.isFunctionListener_ = true
  }else {
    if(listener && listener.handleEvent && goog.isFunction(listener.handleEvent)) {
      this.isFunctionListener_ = false
    }else {
      throw Error("Invalid listener argument");
    }
  }
  this.listener = listener;
  this.proxy = proxy;
  this.src = src;
  this.type = type;
  this.capture = !!capture;
  this.handler = opt_handler;
  this.callOnce = false;
  this.key = ++goog.events.Listener.counter_;
  this.removed = false
};
goog.events.Listener.prototype.handleEvent = function(eventObject) {
  if(this.isFunctionListener_) {
    return this.listener.call(this.handler || this.src, eventObject)
  }
  return this.listener.handleEvent.call(this.listener, eventObject)
};
goog.provide("goog.events");
goog.require("goog.array");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.BrowserFeature");
goog.require("goog.events.Event");
goog.require("goog.events.EventWrapper");
goog.require("goog.events.Listener");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.events.ASSUME_GOOD_GC = false;
goog.events.listeners_ = {};
goog.events.listenerTree_ = {};
goog.events.sources_ = {};
goog.events.onString_ = "on";
goog.events.onStringMap_ = {};
goog.events.keySeparator_ = "_";
goog.events.listen = function(src, type, listener, opt_capt, opt_handler) {
  if(!type) {
    throw Error("Invalid event type");
  }else {
    if(goog.isArray(type)) {
      for(var i = 0;i < type.length;i++) {
        goog.events.listen(src, type[i], listener, opt_capt, opt_handler)
      }
      return null
    }else {
      var capture = !!opt_capt;
      var map = goog.events.listenerTree_;
      if(!(type in map)) {
        map[type] = {count_:0, remaining_:0}
      }
      map = map[type];
      if(!(capture in map)) {
        map[capture] = {count_:0, remaining_:0};
        map.count_++
      }
      map = map[capture];
      var srcUid = goog.getUid(src);
      var listenerArray, listenerObj;
      map.remaining_++;
      if(!map[srcUid]) {
        listenerArray = map[srcUid] = [];
        map.count_++
      }else {
        listenerArray = map[srcUid];
        for(var i = 0;i < listenerArray.length;i++) {
          listenerObj = listenerArray[i];
          if(listenerObj.listener == listener && listenerObj.handler == opt_handler) {
            if(listenerObj.removed) {
              break
            }
            return listenerArray[i].key
          }
        }
      }
      var proxy = goog.events.getProxy();
      proxy.src = src;
      listenerObj = new goog.events.Listener;
      listenerObj.init(listener, proxy, src, type, capture, opt_handler);
      var key = listenerObj.key;
      proxy.key = key;
      listenerArray.push(listenerObj);
      goog.events.listeners_[key] = listenerObj;
      if(!goog.events.sources_[srcUid]) {
        goog.events.sources_[srcUid] = []
      }
      goog.events.sources_[srcUid].push(listenerObj);
      if(src.addEventListener) {
        if(src == goog.global || !src.customEvent_) {
          src.addEventListener(type, proxy, capture)
        }
      }else {
        src.attachEvent(goog.events.getOnString_(type), proxy)
      }
      return key
    }
  }
};
goog.events.getProxy = function() {
  var proxyCallbackFunction = goog.events.handleBrowserEvent_;
  var f = goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT ? function(eventObject) {
    return proxyCallbackFunction.call(f.src, f.key, eventObject)
  } : function(eventObject) {
    var v = proxyCallbackFunction.call(f.src, f.key, eventObject);
    if(!v) {
      return v
    }
  };
  return f
};
goog.events.listenOnce = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.listenOnce(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var key = goog.events.listen(src, type, listener, opt_capt, opt_handler);
  var listenerObj = goog.events.listeners_[key];
  listenerObj.callOnce = true;
  return key
};
goog.events.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler)
};
goog.events.unlisten = function(src, type, listener, opt_capt, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      goog.events.unlisten(src, type[i], listener, opt_capt, opt_handler)
    }
    return null
  }
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(!listenerArray) {
    return false
  }
  for(var i = 0;i < listenerArray.length;i++) {
    if(listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
      return goog.events.unlistenByKey(listenerArray[i].key)
    }
  }
  return false
};
goog.events.unlistenByKey = function(key) {
  if(!goog.events.listeners_[key]) {
    return false
  }
  var listener = goog.events.listeners_[key];
  if(listener.removed) {
    return false
  }
  var src = listener.src;
  var type = listener.type;
  var proxy = listener.proxy;
  var capture = listener.capture;
  if(src.removeEventListener) {
    if(src == goog.global || !src.customEvent_) {
      src.removeEventListener(type, proxy, capture)
    }
  }else {
    if(src.detachEvent) {
      src.detachEvent(goog.events.getOnString_(type), proxy)
    }
  }
  var srcUid = goog.getUid(src);
  var listenerArray = goog.events.listenerTree_[type][capture][srcUid];
  if(goog.events.sources_[srcUid]) {
    var sourcesArray = goog.events.sources_[srcUid];
    goog.array.remove(sourcesArray, listener);
    if(sourcesArray.length == 0) {
      delete goog.events.sources_[srcUid]
    }
  }
  listener.removed = true;
  listenerArray.needsCleanup_ = true;
  goog.events.cleanUp_(type, capture, srcUid, listenerArray);
  delete goog.events.listeners_[key];
  return true
};
goog.events.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler)
};
goog.events.cleanUp_ = function(type, capture, srcUid, listenerArray) {
  if(!listenerArray.locked_) {
    if(listenerArray.needsCleanup_) {
      for(var oldIndex = 0, newIndex = 0;oldIndex < listenerArray.length;oldIndex++) {
        if(listenerArray[oldIndex].removed) {
          var proxy = listenerArray[oldIndex].proxy;
          proxy.src = null;
          continue
        }
        if(oldIndex != newIndex) {
          listenerArray[newIndex] = listenerArray[oldIndex]
        }
        newIndex++
      }
      listenerArray.length = newIndex;
      listenerArray.needsCleanup_ = false;
      if(newIndex == 0) {
        delete goog.events.listenerTree_[type][capture][srcUid];
        goog.events.listenerTree_[type][capture].count_--;
        if(goog.events.listenerTree_[type][capture].count_ == 0) {
          delete goog.events.listenerTree_[type][capture];
          goog.events.listenerTree_[type].count_--
        }
        if(goog.events.listenerTree_[type].count_ == 0) {
          delete goog.events.listenerTree_[type]
        }
      }
    }
  }
};
goog.events.removeAll = function(opt_obj, opt_type, opt_capt) {
  var count = 0;
  var noObj = opt_obj == null;
  var noType = opt_type == null;
  var noCapt = opt_capt == null;
  opt_capt = !!opt_capt;
  if(!noObj) {
    var srcUid = goog.getUid(opt_obj);
    if(goog.events.sources_[srcUid]) {
      var sourcesArray = goog.events.sources_[srcUid];
      for(var i = sourcesArray.length - 1;i >= 0;i--) {
        var listener = sourcesArray[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    }
  }else {
    goog.object.forEach(goog.events.sources_, function(listeners) {
      for(var i = listeners.length - 1;i >= 0;i--) {
        var listener = listeners[i];
        if((noType || opt_type == listener.type) && (noCapt || opt_capt == listener.capture)) {
          goog.events.unlistenByKey(listener.key);
          count++
        }
      }
    })
  }
  return count
};
goog.events.getListeners = function(obj, type, capture) {
  return goog.events.getListeners_(obj, type, capture) || []
};
goog.events.getListeners_ = function(obj, type, capture) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      map = map[capture];
      var objUid = goog.getUid(obj);
      if(map[objUid]) {
        return map[objUid]
      }
    }
  }
  return null
};
goog.events.getListener = function(src, type, listener, opt_capt, opt_handler) {
  var capture = !!opt_capt;
  var listenerArray = goog.events.getListeners_(src, type, capture);
  if(listenerArray) {
    for(var i = 0;i < listenerArray.length;i++) {
      if(!listenerArray[i].removed && listenerArray[i].listener == listener && listenerArray[i].capture == capture && listenerArray[i].handler == opt_handler) {
        return listenerArray[i]
      }
    }
  }
  return null
};
goog.events.hasListener = function(obj, opt_type, opt_capture) {
  var objUid = goog.getUid(obj);
  var listeners = goog.events.sources_[objUid];
  if(listeners) {
    var hasType = goog.isDef(opt_type);
    var hasCapture = goog.isDef(opt_capture);
    if(hasType && hasCapture) {
      var map = goog.events.listenerTree_[opt_type];
      return!!map && !!map[opt_capture] && objUid in map[opt_capture]
    }else {
      if(!(hasType || hasCapture)) {
        return true
      }else {
        return goog.array.some(listeners, function(listener) {
          return hasType && listener.type == opt_type || hasCapture && listener.capture == opt_capture
        })
      }
    }
  }
  return false
};
goog.events.expose = function(e) {
  var str = [];
  for(var key in e) {
    if(e[key] && e[key].id) {
      str.push(key + " = " + e[key] + " (" + e[key].id + ")")
    }else {
      str.push(key + " = " + e[key])
    }
  }
  return str.join("\n")
};
goog.events.getOnString_ = function(type) {
  if(type in goog.events.onStringMap_) {
    return goog.events.onStringMap_[type]
  }
  return goog.events.onStringMap_[type] = goog.events.onString_ + type
};
goog.events.fireListeners = function(obj, type, capture, eventObject) {
  var map = goog.events.listenerTree_;
  if(type in map) {
    map = map[type];
    if(capture in map) {
      return goog.events.fireListeners_(map[capture], obj, type, capture, eventObject)
    }
  }
  return true
};
goog.events.fireListeners_ = function(map, obj, type, capture, eventObject) {
  var retval = 1;
  var objUid = goog.getUid(obj);
  if(map[objUid]) {
    map.remaining_--;
    var listenerArray = map[objUid];
    if(!listenerArray.locked_) {
      listenerArray.locked_ = 1
    }else {
      listenerArray.locked_++
    }
    try {
      var length = listenerArray.length;
      for(var i = 0;i < length;i++) {
        var listener = listenerArray[i];
        if(listener && !listener.removed) {
          retval &= goog.events.fireListener(listener, eventObject) !== false
        }
      }
    }finally {
      listenerArray.locked_--;
      goog.events.cleanUp_(type, capture, objUid, listenerArray)
    }
  }
  return Boolean(retval)
};
goog.events.fireListener = function(listener, eventObject) {
  var rv = listener.handleEvent(eventObject);
  if(listener.callOnce) {
    goog.events.unlistenByKey(listener.key)
  }
  return rv
};
goog.events.getTotalListenerCount = function() {
  return goog.object.getCount(goog.events.listeners_)
};
goog.events.dispatchEvent = function(src, e) {
  var type = e.type || e;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  if(goog.isString(e)) {
    e = new goog.events.Event(e, src)
  }else {
    if(!(e instanceof goog.events.Event)) {
      var oldEvent = e;
      e = new goog.events.Event(type, src);
      goog.object.extend(e, oldEvent)
    }else {
      e.target = e.target || src
    }
  }
  var rv = 1, ancestors;
  map = map[type];
  var hasCapture = true in map;
  var targetsMap;
  if(hasCapture) {
    ancestors = [];
    for(var parent = src;parent;parent = parent.getParentEventTarget()) {
      ancestors.push(parent)
    }
    targetsMap = map[true];
    targetsMap.remaining_ = targetsMap.count_;
    for(var i = ancestors.length - 1;!e.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
      e.currentTarget = ancestors[i];
      rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, true, e) && e.returnValue_ != false
    }
  }
  var hasBubble = false in map;
  if(hasBubble) {
    targetsMap = map[false];
    targetsMap.remaining_ = targetsMap.count_;
    if(hasCapture) {
      for(var i = 0;!e.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
        e.currentTarget = ancestors[i];
        rv &= goog.events.fireListeners_(targetsMap, ancestors[i], e.type, false, e) && e.returnValue_ != false
      }
    }else {
      for(var current = src;!e.propagationStopped_ && current && targetsMap.remaining_;current = current.getParentEventTarget()) {
        e.currentTarget = current;
        rv &= goog.events.fireListeners_(targetsMap, current, e.type, false, e) && e.returnValue_ != false
      }
    }
  }
  return Boolean(rv)
};
goog.events.protectBrowserEventEntryPoint = function(errorHandler) {
  goog.events.handleBrowserEvent_ = errorHandler.protectEntryPoint(goog.events.handleBrowserEvent_)
};
goog.events.handleBrowserEvent_ = function(key, opt_evt) {
  if(!goog.events.listeners_[key]) {
    return true
  }
  var listener = goog.events.listeners_[key];
  var type = listener.type;
  var map = goog.events.listenerTree_;
  if(!(type in map)) {
    return true
  }
  map = map[type];
  var retval, targetsMap;
  if(!goog.events.BrowserFeature.HAS_W3C_EVENT_SUPPORT) {
    var ieEvent = opt_evt || goog.getObjectByName("window.event");
    var hasCapture = true in map;
    var hasBubble = false in map;
    if(hasCapture) {
      if(goog.events.isMarkedIeEvent_(ieEvent)) {
        return true
      }
      goog.events.markIeEvent_(ieEvent)
    }
    var evt = new goog.events.BrowserEvent;
    evt.init(ieEvent, this);
    retval = true;
    try {
      if(hasCapture) {
        var ancestors = [];
        for(var parent = evt.currentTarget;parent;parent = parent.parentNode) {
          ancestors.push(parent)
        }
        targetsMap = map[true];
        targetsMap.remaining_ = targetsMap.count_;
        for(var i = ancestors.length - 1;!evt.propagationStopped_ && i >= 0 && targetsMap.remaining_;i--) {
          evt.currentTarget = ancestors[i];
          retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, true, evt)
        }
        if(hasBubble) {
          targetsMap = map[false];
          targetsMap.remaining_ = targetsMap.count_;
          for(var i = 0;!evt.propagationStopped_ && i < ancestors.length && targetsMap.remaining_;i++) {
            evt.currentTarget = ancestors[i];
            retval &= goog.events.fireListeners_(targetsMap, ancestors[i], type, false, evt)
          }
        }
      }else {
        retval = goog.events.fireListener(listener, evt)
      }
    }finally {
      if(ancestors) {
        ancestors.length = 0
      }
      evt.dispose()
    }
    return retval
  }
  var be = new goog.events.BrowserEvent(opt_evt, this);
  try {
    retval = goog.events.fireListener(listener, be)
  }finally {
    be.dispose()
  }
  return retval
};
goog.events.markIeEvent_ = function(e) {
  var useReturnValue = false;
  if(e.keyCode == 0) {
    try {
      e.keyCode = -1;
      return
    }catch(ex) {
      useReturnValue = true
    }
  }
  if(useReturnValue || e.returnValue == undefined) {
    e.returnValue = true
  }
};
goog.events.isMarkedIeEvent_ = function(e) {
  return e.keyCode < 0 || e.returnValue != undefined
};
goog.events.uniqueIdCounter_ = 0;
goog.events.getUniqueId = function(identifier) {
  return identifier + "_" + goog.events.uniqueIdCounter_++
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.events.handleBrowserEvent_ = transformer(goog.events.handleBrowserEvent_)
});
goog.provide("goog.events.EventTarget");
goog.require("goog.Disposable");
goog.require("goog.events");
goog.events.EventTarget = function() {
  goog.Disposable.call(this)
};
goog.inherits(goog.events.EventTarget, goog.Disposable);
goog.events.EventTarget.prototype.customEvent_ = true;
goog.events.EventTarget.prototype.parentEventTarget_ = null;
goog.events.EventTarget.prototype.getParentEventTarget = function() {
  return this.parentEventTarget_
};
goog.events.EventTarget.prototype.setParentEventTarget = function(parent) {
  this.parentEventTarget_ = parent
};
goog.events.EventTarget.prototype.addEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.listen(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.removeEventListener = function(type, handler, opt_capture, opt_handlerScope) {
  goog.events.unlisten(this, type, handler, opt_capture, opt_handlerScope)
};
goog.events.EventTarget.prototype.dispatchEvent = function(e) {
  return goog.events.dispatchEvent(this, e)
};
goog.events.EventTarget.prototype.disposeInternal = function() {
  goog.events.EventTarget.superClass_.disposeInternal.call(this);
  goog.events.removeAll(this);
  this.parentEventTarget_ = null
};
goog.provide("goog.Timer");
goog.require("goog.events.EventTarget");
goog.Timer = function(opt_interval, opt_timerObject) {
  goog.events.EventTarget.call(this);
  this.interval_ = opt_interval || 1;
  this.timerObject_ = opt_timerObject || goog.Timer.defaultTimerObject;
  this.boundTick_ = goog.bind(this.tick_, this);
  this.last_ = goog.now()
};
goog.inherits(goog.Timer, goog.events.EventTarget);
goog.Timer.MAX_TIMEOUT_ = 2147483647;
goog.Timer.prototype.enabled = false;
goog.Timer.defaultTimerObject = goog.global["window"];
goog.Timer.intervalScale = 0.8;
goog.Timer.prototype.timer_ = null;
goog.Timer.prototype.getInterval = function() {
  return this.interval_
};
goog.Timer.prototype.setInterval = function(interval) {
  this.interval_ = interval;
  if(this.timer_ && this.enabled) {
    this.stop();
    this.start()
  }else {
    if(this.timer_) {
      this.stop()
    }
  }
};
goog.Timer.prototype.tick_ = function() {
  if(this.enabled) {
    var elapsed = goog.now() - this.last_;
    if(elapsed > 0 && elapsed < this.interval_ * goog.Timer.intervalScale) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_ - elapsed);
      return
    }
    this.dispatchTick();
    if(this.enabled) {
      this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
      this.last_ = goog.now()
    }
  }
};
goog.Timer.prototype.dispatchTick = function() {
  this.dispatchEvent(goog.Timer.TICK)
};
goog.Timer.prototype.start = function() {
  this.enabled = true;
  if(!this.timer_) {
    this.timer_ = this.timerObject_.setTimeout(this.boundTick_, this.interval_);
    this.last_ = goog.now()
  }
};
goog.Timer.prototype.stop = function() {
  this.enabled = false;
  if(this.timer_) {
    this.timerObject_.clearTimeout(this.timer_);
    this.timer_ = null
  }
};
goog.Timer.prototype.disposeInternal = function() {
  goog.Timer.superClass_.disposeInternal.call(this);
  this.stop();
  delete this.timerObject_
};
goog.Timer.TICK = "tick";
goog.Timer.callOnce = function(listener, opt_delay, opt_handler) {
  if(goog.isFunction(listener)) {
    if(opt_handler) {
      listener = goog.bind(listener, opt_handler)
    }
  }else {
    if(listener && typeof listener.handleEvent == "function") {
      listener = goog.bind(listener.handleEvent, listener)
    }else {
      throw Error("Invalid listener argument");
    }
  }
  if(opt_delay > goog.Timer.MAX_TIMEOUT_) {
    return-1
  }else {
    return goog.Timer.defaultTimerObject.setTimeout(listener, opt_delay || 0)
  }
};
goog.Timer.clear = function(timerId) {
  goog.Timer.defaultTimerObject.clearTimeout(timerId)
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if(typeof col.getCount == "function") {
    return col.getCount()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return col.length
  }
  return goog.object.getCount(col)
};
goog.structs.getValues = function(col) {
  if(typeof col.getValues == "function") {
    return col.getValues()
  }
  if(goog.isString(col)) {
    return col.split("")
  }
  if(goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(col[i])
    }
    return rv
  }
  return goog.object.getValues(col)
};
goog.structs.getKeys = function(col) {
  if(typeof col.getKeys == "function") {
    return col.getKeys()
  }
  if(typeof col.getValues == "function") {
    return undefined
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for(var i = 0;i < l;i++) {
      rv.push(i)
    }
    return rv
  }
  return goog.object.getKeys(col)
};
goog.structs.contains = function(col, val) {
  if(typeof col.contains == "function") {
    return col.contains(val)
  }
  if(typeof col.containsValue == "function") {
    return col.containsValue(val)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains(col, val)
  }
  return goog.object.containsValue(col, val)
};
goog.structs.isEmpty = function(col) {
  if(typeof col.isEmpty == "function") {
    return col.isEmpty()
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty(col)
  }
  return goog.object.isEmpty(col)
};
goog.structs.clear = function(col) {
  if(typeof col.clear == "function") {
    col.clear()
  }else {
    if(goog.isArrayLike(col)) {
      goog.array.clear(col)
    }else {
      goog.object.clear(col)
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if(typeof col.forEach == "function") {
    col.forEach(f, opt_obj)
  }else {
    if(goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach(col, f, opt_obj)
    }else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for(var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col)
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if(typeof col.filter == "function") {
    return col.filter(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i]
      }
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      if(f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i])
      }
    }
  }
  return rv
};
goog.structs.map = function(col, f, opt_obj) {
  if(typeof col.map == "function") {
    return col.map(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map(col, f, opt_obj)
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if(keys) {
    rv = {};
    for(var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col)
    }
  }else {
    rv = [];
    for(var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col)
    }
  }
  return rv
};
goog.structs.some = function(col, f, opt_obj) {
  if(typeof col.some == "function") {
    return col.some(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true
    }
  }
  return false
};
goog.structs.every = function(col, f, opt_obj) {
  if(typeof col.every == "function") {
    return col.every(f, opt_obj)
  }
  if(goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every(col, f, opt_obj)
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    if(!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false
    }
  }
  return true
};
goog.provide("goog.structs.Collection");
goog.structs.Collection = function() {
};
goog.structs.Collection.prototype.add;
goog.structs.Collection.prototype.remove;
goog.structs.Collection.prototype.contains;
goog.structs.Collection.prototype.getCount;
goog.provide("goog.iter");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.iter.Iterable;
if("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"]
}else {
  goog.iter.StopIteration = Error("StopIteration")
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this
};
goog.iter.toIterator = function(iterable) {
  if(iterable instanceof goog.iter.Iterator) {
    return iterable
  }
  if(typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false)
  }
  if(goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while(true) {
        if(i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if(!(i in iterable)) {
          i++;
          continue
        }
        return iterable[i++]
      }
    };
    return newIter
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if(goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach(iterable, f, opt_obj)
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while(true) {
        f.call(opt_obj, iterable.next(), undefined, iterable)
      }
    }catch(ex) {
      if(ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(f.call(opt_obj, val, undefined, iterable)) {
        return val
      }
    }
  };
  return newIter
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if(arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop
  }
  if(step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if(step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv
  };
  return newIter
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator)
};
goog.iter.map = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      return f.call(opt_obj, val, undefined, iterable)
    }
  };
  return newIter
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val)
  });
  return rval
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while(true) {
      if(!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true
};
goog.iter.chain = function(var_args) {
  var args = arguments;
  var length = args.length;
  var i = 0;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    try {
      if(i >= length) {
        throw goog.iter.StopIteration;
      }
      var current = goog.iter.toIterator(args[i]);
      return current.next()
    }catch(ex) {
      if(ex !== goog.iter.StopIteration || i >= length) {
        throw ex;
      }else {
        i++;
        return this.next()
      }
    }
  };
  return newIter
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while(true) {
      var val = iterable.next();
      if(dropping && f.call(opt_obj, val, undefined, iterable)) {
        continue
      }else {
        dropping = false
      }
      return val
    }
  };
  return newIter
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while(true) {
      if(taking) {
        var val = iterable.next();
        if(f.call(opt_obj, val, undefined, iterable)) {
          return val
        }else {
          taking = false
        }
      }else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter
};
goog.iter.toArray = function(iterable) {
  if(goog.isArrayLike(iterable)) {
    return goog.array.toArray(iterable)
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val)
  });
  return array
};
goog.iter.equals = function(iterable1, iterable2) {
  iterable1 = goog.iter.toIterator(iterable1);
  iterable2 = goog.iter.toIterator(iterable2);
  var b1, b2;
  try {
    while(true) {
      b1 = b2 = false;
      var val1 = iterable1.next();
      b1 = true;
      var val2 = iterable2.next();
      b2 = true;
      if(val1 != val2) {
        return false
      }
    }
  }catch(ex) {
    if(ex !== goog.iter.StopIteration) {
      throw ex;
    }else {
      if(b1 && !b2) {
        return false
      }
      if(!b2) {
        try {
          val2 = iterable2.next();
          return false
        }catch(ex1) {
          if(ex1 !== goog.iter.StopIteration) {
            throw ex1;
          }
          return true
        }
      }
    }
  }
  return false
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next()
  }catch(e) {
    if(e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length
  });
  if(someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if(indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex]
      });
      for(var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if(indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break
        }
        if(i == 0) {
          indicies = null;
          break
        }
        indicies[i] = 0
      }
      return retVal
    }
    throw goog.iter.StopIteration;
  };
  return iter
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if(!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement
      }catch(e) {
        if(e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement
  };
  return iter
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.require("goog.structs");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  var argLength = arguments.length;
  if(argLength > 1) {
    if(argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for(var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1])
    }
  }else {
    if(opt_map) {
      this.addAll(opt_map)
    }
  }
};
goog.structs.Map.prototype.count_ = 0;
goog.structs.Map.prototype.version_ = 0;
goog.structs.Map.prototype.getCount = function() {
  return this.count_
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key])
  }
  return rv
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return this.keys_.concat()
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key)
};
goog.structs.Map.prototype.containsValue = function(val) {
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if(goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true
    }
  }
  return false
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if(this === otherMap) {
    return true
  }
  if(this.count_ != otherMap.getCount()) {
    return false
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for(var key, i = 0;key = this.keys_[i];i++) {
    if(!equalityFn(this.get(key), otherMap.get(key))) {
      return false
    }
  }
  return true
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0
};
goog.structs.Map.prototype.remove = function(key) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if(this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_()
    }
    return true
  }
  return false
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if(this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
  if(this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while(srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if(!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1
      }
      srcIndex++
    }
    this.keys_.length = destIndex
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if(goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key]
  }
  return opt_val
};
goog.structs.Map.prototype.set = function(key, value) {
  if(!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++
  }
  this.map_[key] = value
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if(map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues()
  }else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map)
  }
  for(var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i])
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this)
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key)
  }
  return transposed
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for(var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key]
  }
  return obj
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true)
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false)
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while(true) {
      if(version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if(i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key]
    }
  };
  return newIter
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key)
};
goog.provide("goog.structs.Set");
goog.require("goog.structs");
goog.require("goog.structs.Collection");
goog.require("goog.structs.Map");
goog.structs.Set = function(opt_values) {
  this.map_ = new goog.structs.Map;
  if(opt_values) {
    this.addAll(opt_values)
  }
};
goog.structs.Set.getKey_ = function(val) {
  var type = typeof val;
  if(type == "object" && val || type == "function") {
    return"o" + goog.getUid(val)
  }else {
    return type.substr(0, 1) + val
  }
};
goog.structs.Set.prototype.getCount = function() {
  return this.map_.getCount()
};
goog.structs.Set.prototype.add = function(element) {
  this.map_.set(goog.structs.Set.getKey_(element), element)
};
goog.structs.Set.prototype.addAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.add(values[i])
  }
};
goog.structs.Set.prototype.removeAll = function(col) {
  var values = goog.structs.getValues(col);
  var l = values.length;
  for(var i = 0;i < l;i++) {
    this.remove(values[i])
  }
};
goog.structs.Set.prototype.remove = function(element) {
  return this.map_.remove(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.clear = function() {
  this.map_.clear()
};
goog.structs.Set.prototype.isEmpty = function() {
  return this.map_.isEmpty()
};
goog.structs.Set.prototype.contains = function(element) {
  return this.map_.containsKey(goog.structs.Set.getKey_(element))
};
goog.structs.Set.prototype.containsAll = function(col) {
  return goog.structs.every(col, this.contains, this)
};
goog.structs.Set.prototype.intersection = function(col) {
  var result = new goog.structs.Set;
  var values = goog.structs.getValues(col);
  for(var i = 0;i < values.length;i++) {
    var value = values[i];
    if(this.contains(value)) {
      result.add(value)
    }
  }
  return result
};
goog.structs.Set.prototype.getValues = function() {
  return this.map_.getValues()
};
goog.structs.Set.prototype.clone = function() {
  return new goog.structs.Set(this)
};
goog.structs.Set.prototype.equals = function(col) {
  return this.getCount() == goog.structs.getCount(col) && this.isSubsetOf(col)
};
goog.structs.Set.prototype.isSubsetOf = function(col) {
  var colCount = goog.structs.getCount(col);
  if(this.getCount() > colCount) {
    return false
  }
  if(!(col instanceof goog.structs.Set) && colCount > 5) {
    col = new goog.structs.Set(col)
  }
  return goog.structs.every(this, function(value) {
    return goog.structs.contains(col, value)
  })
};
goog.structs.Set.prototype.__iterator__ = function(opt_keys) {
  return this.map_.__iterator__(false)
};
goog.provide("goog.debug");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs.Set");
goog.require("goog.userAgent");
goog.debug.catchErrors = function(logFunc, opt_cancel, opt_target) {
  var target = opt_target || goog.global;
  var oldErrorHandler = target.onerror;
  var retVal = goog.userAgent.WEBKIT ? !opt_cancel : !!opt_cancel;
  target.onerror = function(message, url, line) {
    if(oldErrorHandler) {
      oldErrorHandler(message, url, line)
    }
    logFunc({message:message, fileName:url, line:line});
    return retVal
  }
};
goog.debug.expose = function(obj, opt_showFn) {
  if(typeof obj == "undefined") {
    return"undefined"
  }
  if(obj == null) {
    return"NULL"
  }
  var str = [];
  for(var x in obj) {
    if(!opt_showFn && goog.isFunction(obj[x])) {
      continue
    }
    var s = x + " = ";
    try {
      s += obj[x]
    }catch(e) {
      s += "*** " + e + " ***"
    }
    str.push(s)
  }
  return str.join("\n")
};
goog.debug.deepExpose = function(obj, opt_showFn) {
  var previous = new goog.structs.Set;
  var str = [];
  var helper = function(obj, space) {
    var nestspace = space + "  ";
    var indentMultiline = function(str) {
      return str.replace(/\n/g, "\n" + space)
    };
    try {
      if(!goog.isDef(obj)) {
        str.push("undefined")
      }else {
        if(goog.isNull(obj)) {
          str.push("NULL")
        }else {
          if(goog.isString(obj)) {
            str.push('"' + indentMultiline(obj) + '"')
          }else {
            if(goog.isFunction(obj)) {
              str.push(indentMultiline(String(obj)))
            }else {
              if(goog.isObject(obj)) {
                if(previous.contains(obj)) {
                  str.push("*** reference loop detected ***")
                }else {
                  previous.add(obj);
                  str.push("{");
                  for(var x in obj) {
                    if(!opt_showFn && goog.isFunction(obj[x])) {
                      continue
                    }
                    str.push("\n");
                    str.push(nestspace);
                    str.push(x + " = ");
                    helper(obj[x], nestspace)
                  }
                  str.push("\n" + space + "}")
                }
              }else {
                str.push(obj)
              }
            }
          }
        }
      }
    }catch(e) {
      str.push("*** " + e + " ***")
    }
  };
  helper(obj, "");
  return str.join("")
};
goog.debug.exposeArray = function(arr) {
  var str = [];
  for(var i = 0;i < arr.length;i++) {
    if(goog.isArray(arr[i])) {
      str.push(goog.debug.exposeArray(arr[i]))
    }else {
      str.push(arr[i])
    }
  }
  return"[ " + str.join(", ") + " ]"
};
goog.debug.exposeException = function(err, opt_fn) {
  try {
    var e = goog.debug.normalizeErrorObject(err);
    var error = "Message: " + goog.string.htmlEscape(e.message) + '\nUrl: <a href="view-source:' + e.fileName + '" target="_new">' + e.fileName + "</a>\nLine: " + e.lineNumber + "\n\nBrowser stack:\n" + goog.string.htmlEscape(e.stack + "-> ") + "[end]\n\nJS stack traversal:\n" + goog.string.htmlEscape(goog.debug.getStacktrace(opt_fn) + "-> ");
    return error
  }catch(e2) {
    return"Exception trying to expose exception! You win, we lose. " + e2
  }
};
goog.debug.normalizeErrorObject = function(err) {
  var href = goog.getObjectByName("window.location.href");
  if(goog.isString(err)) {
    return{"message":err, "name":"Unknown error", "lineNumber":"Not available", "fileName":href, "stack":"Not available"}
  }
  var lineNumber, fileName;
  var threwError = false;
  try {
    lineNumber = err.lineNumber || err.line || "Not available"
  }catch(e) {
    lineNumber = "Not available";
    threwError = true
  }
  try {
    fileName = err.fileName || err.filename || err.sourceURL || href
  }catch(e) {
    fileName = "Not available";
    threwError = true
  }
  if(threwError || !err.lineNumber || !err.fileName || !err.stack) {
    return{"message":err.message, "name":err.name, "lineNumber":lineNumber, "fileName":fileName, "stack":err.stack || "Not available"}
  }
  return err
};
goog.debug.enhanceError = function(err, opt_message) {
  var error = typeof err == "string" ? Error(err) : err;
  if(!error.stack) {
    error.stack = goog.debug.getStacktrace(arguments.callee.caller)
  }
  if(opt_message) {
    var x = 0;
    while(error["message" + x]) {
      ++x
    }
    error["message" + x] = String(opt_message)
  }
  return error
};
goog.debug.getStacktraceSimple = function(opt_depth) {
  var sb = [];
  var fn = arguments.callee.caller;
  var depth = 0;
  while(fn && (!opt_depth || depth < opt_depth)) {
    sb.push(goog.debug.getFunctionName(fn));
    sb.push("()\n");
    try {
      fn = fn.caller
    }catch(e) {
      sb.push("[exception trying to get caller]\n");
      break
    }
    depth++;
    if(depth >= goog.debug.MAX_STACK_DEPTH) {
      sb.push("[...long stack...]");
      break
    }
  }
  if(opt_depth && depth >= opt_depth) {
    sb.push("[...reached max depth limit...]")
  }else {
    sb.push("[end]")
  }
  return sb.join("")
};
goog.debug.MAX_STACK_DEPTH = 50;
goog.debug.getStacktrace = function(opt_fn) {
  return goog.debug.getStacktraceHelper_(opt_fn || arguments.callee.caller, [])
};
goog.debug.getStacktraceHelper_ = function(fn, visited) {
  var sb = [];
  if(goog.array.contains(visited, fn)) {
    sb.push("[...circular reference...]")
  }else {
    if(fn && visited.length < goog.debug.MAX_STACK_DEPTH) {
      sb.push(goog.debug.getFunctionName(fn) + "(");
      var args = fn.arguments;
      for(var i = 0;i < args.length;i++) {
        if(i > 0) {
          sb.push(", ")
        }
        var argDesc;
        var arg = args[i];
        switch(typeof arg) {
          case "object":
            argDesc = arg ? "object" : "null";
            break;
          case "string":
            argDesc = arg;
            break;
          case "number":
            argDesc = String(arg);
            break;
          case "boolean":
            argDesc = arg ? "true" : "false";
            break;
          case "function":
            argDesc = goog.debug.getFunctionName(arg);
            argDesc = argDesc ? argDesc : "[fn]";
            break;
          case "undefined":
          ;
          default:
            argDesc = typeof arg;
            break
        }
        if(argDesc.length > 40) {
          argDesc = argDesc.substr(0, 40) + "..."
        }
        sb.push(argDesc)
      }
      visited.push(fn);
      sb.push(")\n");
      try {
        sb.push(goog.debug.getStacktraceHelper_(fn.caller, visited))
      }catch(e) {
        sb.push("[exception trying to get caller]\n")
      }
    }else {
      if(fn) {
        sb.push("[...long stack...]")
      }else {
        sb.push("[end]")
      }
    }
  }
  return sb.join("")
};
goog.debug.setFunctionResolver = function(resolver) {
  goog.debug.fnNameResolver_ = resolver
};
goog.debug.getFunctionName = function(fn) {
  if(goog.debug.fnNameCache_[fn]) {
    return goog.debug.fnNameCache_[fn]
  }
  if(goog.debug.fnNameResolver_) {
    var name = goog.debug.fnNameResolver_(fn);
    if(name) {
      goog.debug.fnNameCache_[fn] = name;
      return name
    }
  }
  var functionSource = String(fn);
  if(!goog.debug.fnNameCache_[functionSource]) {
    var matches = /function ([^\(]+)/.exec(functionSource);
    if(matches) {
      var method = matches[1];
      goog.debug.fnNameCache_[functionSource] = method
    }else {
      goog.debug.fnNameCache_[functionSource] = "[Anonymous]"
    }
  }
  return goog.debug.fnNameCache_[functionSource]
};
goog.debug.makeWhitespaceVisible = function(string) {
  return string.replace(/ /g, "[_]").replace(/\f/g, "[f]").replace(/\n/g, "[n]\n").replace(/\r/g, "[r]").replace(/\t/g, "[t]")
};
goog.debug.fnNameCache_ = {};
goog.debug.fnNameResolver_;
goog.provide("goog.debug.LogRecord");
goog.debug.LogRecord = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  this.reset(level, msg, loggerName, opt_time, opt_sequenceNumber)
};
goog.debug.LogRecord.prototype.time_;
goog.debug.LogRecord.prototype.level_;
goog.debug.LogRecord.prototype.msg_;
goog.debug.LogRecord.prototype.loggerName_;
goog.debug.LogRecord.prototype.sequenceNumber_ = 0;
goog.debug.LogRecord.prototype.exception_ = null;
goog.debug.LogRecord.prototype.exceptionText_ = null;
goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS = true;
goog.debug.LogRecord.nextSequenceNumber_ = 0;
goog.debug.LogRecord.prototype.reset = function(level, msg, loggerName, opt_time, opt_sequenceNumber) {
  if(goog.debug.LogRecord.ENABLE_SEQUENCE_NUMBERS) {
    this.sequenceNumber_ = typeof opt_sequenceNumber == "number" ? opt_sequenceNumber : goog.debug.LogRecord.nextSequenceNumber_++
  }
  this.time_ = opt_time || goog.now();
  this.level_ = level;
  this.msg_ = msg;
  this.loggerName_ = loggerName;
  delete this.exception_;
  delete this.exceptionText_
};
goog.debug.LogRecord.prototype.getLoggerName = function() {
  return this.loggerName_
};
goog.debug.LogRecord.prototype.getException = function() {
  return this.exception_
};
goog.debug.LogRecord.prototype.setException = function(exception) {
  this.exception_ = exception
};
goog.debug.LogRecord.prototype.getExceptionText = function() {
  return this.exceptionText_
};
goog.debug.LogRecord.prototype.setExceptionText = function(text) {
  this.exceptionText_ = text
};
goog.debug.LogRecord.prototype.setLoggerName = function(loggerName) {
  this.loggerName_ = loggerName
};
goog.debug.LogRecord.prototype.getLevel = function() {
  return this.level_
};
goog.debug.LogRecord.prototype.setLevel = function(level) {
  this.level_ = level
};
goog.debug.LogRecord.prototype.getMessage = function() {
  return this.msg_
};
goog.debug.LogRecord.prototype.setMessage = function(msg) {
  this.msg_ = msg
};
goog.debug.LogRecord.prototype.getMillis = function() {
  return this.time_
};
goog.debug.LogRecord.prototype.setMillis = function(time) {
  this.time_ = time
};
goog.debug.LogRecord.prototype.getSequenceNumber = function() {
  return this.sequenceNumber_
};
goog.provide("goog.debug.LogBuffer");
goog.require("goog.asserts");
goog.require("goog.debug.LogRecord");
goog.debug.LogBuffer = function() {
  goog.asserts.assert(goog.debug.LogBuffer.isBufferingEnabled(), "Cannot use goog.debug.LogBuffer without defining " + "goog.debug.LogBuffer.CAPACITY.");
  this.clear()
};
goog.debug.LogBuffer.getInstance = function() {
  if(!goog.debug.LogBuffer.instance_) {
    goog.debug.LogBuffer.instance_ = new goog.debug.LogBuffer
  }
  return goog.debug.LogBuffer.instance_
};
goog.debug.LogBuffer.CAPACITY = 0;
goog.debug.LogBuffer.prototype.buffer_;
goog.debug.LogBuffer.prototype.curIndex_;
goog.debug.LogBuffer.prototype.isFull_;
goog.debug.LogBuffer.prototype.addRecord = function(level, msg, loggerName) {
  var curIndex = (this.curIndex_ + 1) % goog.debug.LogBuffer.CAPACITY;
  this.curIndex_ = curIndex;
  if(this.isFull_) {
    var ret = this.buffer_[curIndex];
    ret.reset(level, msg, loggerName);
    return ret
  }
  this.isFull_ = curIndex == goog.debug.LogBuffer.CAPACITY - 1;
  return this.buffer_[curIndex] = new goog.debug.LogRecord(level, msg, loggerName)
};
goog.debug.LogBuffer.isBufferingEnabled = function() {
  return goog.debug.LogBuffer.CAPACITY > 0
};
goog.debug.LogBuffer.prototype.clear = function() {
  this.buffer_ = new Array(goog.debug.LogBuffer.CAPACITY);
  this.curIndex_ = -1;
  this.isFull_ = false
};
goog.debug.LogBuffer.prototype.forEachRecord = function(func) {
  var buffer = this.buffer_;
  if(!buffer[0]) {
    return
  }
  var curIndex = this.curIndex_;
  var i = this.isFull_ ? curIndex : -1;
  do {
    i = (i + 1) % goog.debug.LogBuffer.CAPACITY;
    func(buffer[i])
  }while(i != curIndex)
};
goog.provide("goog.debug.LogManager");
goog.provide("goog.debug.Logger");
goog.provide("goog.debug.Logger.Level");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug");
goog.require("goog.debug.LogBuffer");
goog.require("goog.debug.LogRecord");
goog.debug.Logger = function(name) {
  this.name_ = name
};
goog.debug.Logger.prototype.parent_ = null;
goog.debug.Logger.prototype.level_ = null;
goog.debug.Logger.prototype.children_ = null;
goog.debug.Logger.prototype.handlers_ = null;
goog.debug.Logger.ENABLE_HIERARCHY = true;
if(!goog.debug.Logger.ENABLE_HIERARCHY) {
  goog.debug.Logger.rootHandlers_ = [];
  goog.debug.Logger.rootLevel_
}
goog.debug.Logger.Level = function(name, value) {
  this.name = name;
  this.value = value
};
goog.debug.Logger.Level.prototype.toString = function() {
  return this.name
};
goog.debug.Logger.Level.OFF = new goog.debug.Logger.Level("OFF", Infinity);
goog.debug.Logger.Level.SHOUT = new goog.debug.Logger.Level("SHOUT", 1200);
goog.debug.Logger.Level.SEVERE = new goog.debug.Logger.Level("SEVERE", 1E3);
goog.debug.Logger.Level.WARNING = new goog.debug.Logger.Level("WARNING", 900);
goog.debug.Logger.Level.INFO = new goog.debug.Logger.Level("INFO", 800);
goog.debug.Logger.Level.CONFIG = new goog.debug.Logger.Level("CONFIG", 700);
goog.debug.Logger.Level.FINE = new goog.debug.Logger.Level("FINE", 500);
goog.debug.Logger.Level.FINER = new goog.debug.Logger.Level("FINER", 400);
goog.debug.Logger.Level.FINEST = new goog.debug.Logger.Level("FINEST", 300);
goog.debug.Logger.Level.ALL = new goog.debug.Logger.Level("ALL", 0);
goog.debug.Logger.Level.PREDEFINED_LEVELS = [goog.debug.Logger.Level.OFF, goog.debug.Logger.Level.SHOUT, goog.debug.Logger.Level.SEVERE, goog.debug.Logger.Level.WARNING, goog.debug.Logger.Level.INFO, goog.debug.Logger.Level.CONFIG, goog.debug.Logger.Level.FINE, goog.debug.Logger.Level.FINER, goog.debug.Logger.Level.FINEST, goog.debug.Logger.Level.ALL];
goog.debug.Logger.Level.predefinedLevelsCache_ = null;
goog.debug.Logger.Level.createPredefinedLevelsCache_ = function() {
  goog.debug.Logger.Level.predefinedLevelsCache_ = {};
  for(var i = 0, level;level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];i++) {
    goog.debug.Logger.Level.predefinedLevelsCache_[level.value] = level;
    goog.debug.Logger.Level.predefinedLevelsCache_[level.name] = level
  }
};
goog.debug.Logger.Level.getPredefinedLevel = function(name) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  return goog.debug.Logger.Level.predefinedLevelsCache_[name] || null
};
goog.debug.Logger.Level.getPredefinedLevelByValue = function(value) {
  if(!goog.debug.Logger.Level.predefinedLevelsCache_) {
    goog.debug.Logger.Level.createPredefinedLevelsCache_()
  }
  if(value in goog.debug.Logger.Level.predefinedLevelsCache_) {
    return goog.debug.Logger.Level.predefinedLevelsCache_[value]
  }
  for(var i = 0;i < goog.debug.Logger.Level.PREDEFINED_LEVELS.length;++i) {
    var level = goog.debug.Logger.Level.PREDEFINED_LEVELS[i];
    if(level.value <= value) {
      return level
    }
  }
  return null
};
goog.debug.Logger.getLogger = function(name) {
  return goog.debug.LogManager.getLogger(name)
};
goog.debug.Logger.logToProfilers = function(msg) {
  if(goog.global["console"]) {
    if(goog.global["console"]["timeStamp"]) {
      goog.global["console"]["timeStamp"](msg)
    }else {
      if(goog.global["console"]["markTimeline"]) {
        goog.global["console"]["markTimeline"](msg)
      }
    }
  }
  if(goog.global["msWriteProfilerMark"]) {
    goog.global["msWriteProfilerMark"](msg)
  }
};
goog.debug.Logger.prototype.getName = function() {
  return this.name_
};
goog.debug.Logger.prototype.addHandler = function(handler) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    if(!this.handlers_) {
      this.handlers_ = []
    }
    this.handlers_.push(handler)
  }else {
    goog.asserts.assert(!this.name_, "Cannot call addHandler on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootHandlers_.push(handler)
  }
};
goog.debug.Logger.prototype.removeHandler = function(handler) {
  var handlers = goog.debug.Logger.ENABLE_HIERARCHY ? this.handlers_ : goog.debug.Logger.rootHandlers_;
  return!!handlers && goog.array.remove(handlers, handler)
};
goog.debug.Logger.prototype.getParent = function() {
  return this.parent_
};
goog.debug.Logger.prototype.getChildren = function() {
  if(!this.children_) {
    this.children_ = {}
  }
  return this.children_
};
goog.debug.Logger.prototype.setLevel = function(level) {
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    this.level_ = level
  }else {
    goog.asserts.assert(!this.name_, "Cannot call setLevel() on a non-root logger when " + "goog.debug.Logger.ENABLE_HIERARCHY is false.");
    goog.debug.Logger.rootLevel_ = level
  }
};
goog.debug.Logger.prototype.getLevel = function() {
  return this.level_
};
goog.debug.Logger.prototype.getEffectiveLevel = function() {
  if(!goog.debug.Logger.ENABLE_HIERARCHY) {
    return goog.debug.Logger.rootLevel_
  }
  if(this.level_) {
    return this.level_
  }
  if(this.parent_) {
    return this.parent_.getEffectiveLevel()
  }
  goog.asserts.fail("Root logger has no level set.");
  return null
};
goog.debug.Logger.prototype.isLoggable = function(level) {
  return level.value >= this.getEffectiveLevel().value
};
goog.debug.Logger.prototype.log = function(level, msg, opt_exception) {
  if(this.isLoggable(level)) {
    this.doLogRecord_(this.getLogRecord(level, msg, opt_exception))
  }
};
goog.debug.Logger.prototype.getLogRecord = function(level, msg, opt_exception) {
  if(goog.debug.LogBuffer.isBufferingEnabled()) {
    var logRecord = goog.debug.LogBuffer.getInstance().addRecord(level, msg, this.name_)
  }else {
    logRecord = new goog.debug.LogRecord(level, String(msg), this.name_)
  }
  if(opt_exception) {
    logRecord.setException(opt_exception);
    logRecord.setExceptionText(goog.debug.exposeException(opt_exception, arguments.callee.caller))
  }
  return logRecord
};
goog.debug.Logger.prototype.shout = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SHOUT, msg, opt_exception)
};
goog.debug.Logger.prototype.severe = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.SEVERE, msg, opt_exception)
};
goog.debug.Logger.prototype.warning = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.WARNING, msg, opt_exception)
};
goog.debug.Logger.prototype.info = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.INFO, msg, opt_exception)
};
goog.debug.Logger.prototype.config = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.CONFIG, msg, opt_exception)
};
goog.debug.Logger.prototype.fine = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINE, msg, opt_exception)
};
goog.debug.Logger.prototype.finer = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINER, msg, opt_exception)
};
goog.debug.Logger.prototype.finest = function(msg, opt_exception) {
  this.log(goog.debug.Logger.Level.FINEST, msg, opt_exception)
};
goog.debug.Logger.prototype.logRecord = function(logRecord) {
  if(this.isLoggable(logRecord.getLevel())) {
    this.doLogRecord_(logRecord)
  }
};
goog.debug.Logger.prototype.doLogRecord_ = function(logRecord) {
  goog.debug.Logger.logToProfilers("log:" + logRecord.getMessage());
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var target = this;
    while(target) {
      target.callPublish_(logRecord);
      target = target.getParent()
    }
  }else {
    for(var i = 0, handler;handler = goog.debug.Logger.rootHandlers_[i++];) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.callPublish_ = function(logRecord) {
  if(this.handlers_) {
    for(var i = 0, handler;handler = this.handlers_[i];i++) {
      handler(logRecord)
    }
  }
};
goog.debug.Logger.prototype.setParent_ = function(parent) {
  this.parent_ = parent
};
goog.debug.Logger.prototype.addChild_ = function(name, logger) {
  this.getChildren()[name] = logger
};
goog.debug.LogManager = {};
goog.debug.LogManager.loggers_ = {};
goog.debug.LogManager.rootLogger_ = null;
goog.debug.LogManager.initialize = function() {
  if(!goog.debug.LogManager.rootLogger_) {
    goog.debug.LogManager.rootLogger_ = new goog.debug.Logger("");
    goog.debug.LogManager.loggers_[""] = goog.debug.LogManager.rootLogger_;
    goog.debug.LogManager.rootLogger_.setLevel(goog.debug.Logger.Level.CONFIG)
  }
};
goog.debug.LogManager.getLoggers = function() {
  return goog.debug.LogManager.loggers_
};
goog.debug.LogManager.getRoot = function() {
  goog.debug.LogManager.initialize();
  return goog.debug.LogManager.rootLogger_
};
goog.debug.LogManager.getLogger = function(name) {
  goog.debug.LogManager.initialize();
  var ret = goog.debug.LogManager.loggers_[name];
  return ret || goog.debug.LogManager.createLogger_(name)
};
goog.debug.LogManager.createFunctionForCatchErrors = function(opt_logger) {
  return function(info) {
    var logger = opt_logger || goog.debug.LogManager.getRoot();
    logger.severe("Error: " + info.message + " (" + info.fileName + " @ Line: " + info.line + ")")
  }
};
goog.debug.LogManager.createLogger_ = function(name) {
  var logger = new goog.debug.Logger(name);
  if(goog.debug.Logger.ENABLE_HIERARCHY) {
    var lastDotIndex = name.lastIndexOf(".");
    var parentName = name.substr(0, lastDotIndex);
    var leafName = name.substr(lastDotIndex + 1);
    var parentLogger = goog.debug.LogManager.getLogger(parentName);
    parentLogger.addChild_(leafName, logger);
    logger.setParent_(parentLogger)
  }
  goog.debug.LogManager.loggers_[name] = logger;
  return logger
};
goog.provide("goog.json");
goog.provide("goog.json.Serializer");
goog.json.isValid_ = function(s) {
  if(/^\s*$/.test(s)) {
    return false
  }
  var backslashesRe = /\\["\\\/bfnrtu]/g;
  var simpleValuesRe = /"[^"\\\n\r\u2028\u2029\x00-\x08\x10-\x1f\x80-\x9f]*"|true|false|null|-?\d+(?:\.\d*)?(?:[eE][+\-]?\d+)?/g;
  var openBracketsRe = /(?:^|:|,)(?:[\s\u2028\u2029]*\[)+/g;
  var remainderRe = /^[\],:{}\s\u2028\u2029]*$/;
  return remainderRe.test(s.replace(backslashesRe, "@").replace(simpleValuesRe, "]").replace(openBracketsRe, ""))
};
goog.json.parse = function(s) {
  var o = String(s);
  if(goog.json.isValid_(o)) {
    try {
      return eval("(" + o + ")")
    }catch(ex) {
    }
  }
  throw Error("Invalid JSON string: " + o);
};
goog.json.unsafeParse = function(s) {
  return eval("(" + s + ")")
};
goog.json.Replacer;
goog.json.serialize = function(object, opt_replacer) {
  return(new goog.json.Serializer(opt_replacer)).serialize(object)
};
goog.json.Serializer = function(opt_replacer) {
  this.replacer_ = opt_replacer
};
goog.json.Serializer.prototype.serialize = function(object) {
  var sb = [];
  this.serialize_(object, sb);
  return sb.join("")
};
goog.json.Serializer.prototype.serialize_ = function(object, sb) {
  switch(typeof object) {
    case "string":
      this.serializeString_(object, sb);
      break;
    case "number":
      this.serializeNumber_(object, sb);
      break;
    case "boolean":
      sb.push(object);
      break;
    case "undefined":
      sb.push("null");
      break;
    case "object":
      if(object == null) {
        sb.push("null");
        break
      }
      if(goog.isArray(object)) {
        this.serializeArray_(object, sb);
        break
      }
      this.serializeObject_(object, sb);
      break;
    case "function":
      break;
    default:
      throw Error("Unknown type: " + typeof object);
  }
};
goog.json.Serializer.charToJsonCharCache_ = {'"':'\\"', "\\":"\\\\", "/":"\\/", "\u0008":"\\b", "\u000c":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\u000b"};
goog.json.Serializer.charsToReplace_ = /\uffff/.test("\uffff") ? /[\\\"\x00-\x1f\x7f-\uffff]/g : /[\\\"\x00-\x1f\x7f-\xff]/g;
goog.json.Serializer.prototype.serializeString_ = function(s, sb) {
  sb.push('"', s.replace(goog.json.Serializer.charsToReplace_, function(c) {
    if(c in goog.json.Serializer.charToJsonCharCache_) {
      return goog.json.Serializer.charToJsonCharCache_[c]
    }
    var cc = c.charCodeAt(0);
    var rv = "\\u";
    if(cc < 16) {
      rv += "000"
    }else {
      if(cc < 256) {
        rv += "00"
      }else {
        if(cc < 4096) {
          rv += "0"
        }
      }
    }
    return goog.json.Serializer.charToJsonCharCache_[c] = rv + cc.toString(16)
  }), '"')
};
goog.json.Serializer.prototype.serializeNumber_ = function(n, sb) {
  sb.push(isFinite(n) && !isNaN(n) ? n : "null")
};
goog.json.Serializer.prototype.serializeArray_ = function(arr, sb) {
  var l = arr.length;
  sb.push("[");
  var sep = "";
  for(var i = 0;i < l;i++) {
    sb.push(sep);
    var value = arr[i];
    this.serialize_(this.replacer_ ? this.replacer_.call(arr, String(i), value) : value, sb);
    sep = ","
  }
  sb.push("]")
};
goog.json.Serializer.prototype.serializeObject_ = function(obj, sb) {
  sb.push("{");
  var sep = "";
  for(var key in obj) {
    if(Object.prototype.hasOwnProperty.call(obj, key)) {
      var value = obj[key];
      if(typeof value != "function") {
        sb.push(sep);
        this.serializeString_(key, sb);
        sb.push(":");
        this.serialize_(this.replacer_ ? this.replacer_.call(obj, key, value) : value, sb);
        sep = ","
      }
    }
  }
  sb.push("}")
};
goog.provide("goog.net.ErrorCode");
goog.net.ErrorCode = {NO_ERROR:0, ACCESS_DENIED:1, FILE_NOT_FOUND:2, FF_SILENT_ERROR:3, CUSTOM_ERROR:4, EXCEPTION:5, HTTP_ERROR:6, ABORT:7, TIMEOUT:8, OFFLINE:9};
goog.net.ErrorCode.getDebugMessage = function(errorCode) {
  switch(errorCode) {
    case goog.net.ErrorCode.NO_ERROR:
      return"No Error";
    case goog.net.ErrorCode.ACCESS_DENIED:
      return"Access denied to content document";
    case goog.net.ErrorCode.FILE_NOT_FOUND:
      return"File not found";
    case goog.net.ErrorCode.FF_SILENT_ERROR:
      return"Firefox silently errored";
    case goog.net.ErrorCode.CUSTOM_ERROR:
      return"Application custom error";
    case goog.net.ErrorCode.EXCEPTION:
      return"An exception occurred";
    case goog.net.ErrorCode.HTTP_ERROR:
      return"Http response at 400 or 500 level";
    case goog.net.ErrorCode.ABORT:
      return"Request was aborted";
    case goog.net.ErrorCode.TIMEOUT:
      return"Request timed out";
    case goog.net.ErrorCode.OFFLINE:
      return"The resource is not available offline";
    default:
      return"Unrecognized error code"
  }
};
goog.provide("goog.net.EventType");
goog.net.EventType = {COMPLETE:"complete", SUCCESS:"success", ERROR:"error", ABORT:"abort", READY:"ready", READY_STATE_CHANGE:"readystatechange", TIMEOUT:"timeout", INCREMENTAL_DATA:"incrementaldata", PROGRESS:"progress"};
goog.provide("goog.net.HttpStatus");
goog.net.HttpStatus = {CONTINUE:100, SWITCHING_PROTOCOLS:101, OK:200, CREATED:201, ACCEPTED:202, NON_AUTHORITATIVE_INFORMATION:203, NO_CONTENT:204, RESET_CONTENT:205, PARTIAL_CONTENT:206, MULTIPLE_CHOICES:300, MOVED_PERMANENTLY:301, FOUND:302, SEE_OTHER:303, NOT_MODIFIED:304, USE_PROXY:305, TEMPORARY_REDIRECT:307, BAD_REQUEST:400, UNAUTHORIZED:401, PAYMENT_REQUIRED:402, FORBIDDEN:403, NOT_FOUND:404, METHOD_NOT_ALLOWED:405, NOT_ACCEPTABLE:406, PROXY_AUTHENTICATION_REQUIRED:407, REQUEST_TIMEOUT:408, 
CONFLICT:409, GONE:410, LENGTH_REQUIRED:411, PRECONDITION_FAILED:412, REQUEST_ENTITY_TOO_LARGE:413, REQUEST_URI_TOO_LONG:414, UNSUPPORTED_MEDIA_TYPE:415, REQUEST_RANGE_NOT_SATISFIABLE:416, EXPECTATION_FAILED:417, INTERNAL_SERVER_ERROR:500, NOT_IMPLEMENTED:501, BAD_GATEWAY:502, SERVICE_UNAVAILABLE:503, GATEWAY_TIMEOUT:504, HTTP_VERSION_NOT_SUPPORTED:505, QUIRK_IE_NO_CONTENT:1223};
goog.provide("goog.net.XmlHttpFactory");
goog.net.XmlHttpFactory = function() {
};
goog.net.XmlHttpFactory.prototype.cachedOptions_ = null;
goog.net.XmlHttpFactory.prototype.createInstance = goog.abstractMethod;
goog.net.XmlHttpFactory.prototype.getOptions = function() {
  return this.cachedOptions_ || (this.cachedOptions_ = this.internalGetOptions())
};
goog.net.XmlHttpFactory.prototype.internalGetOptions = goog.abstractMethod;
goog.provide("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.WrapperXmlHttpFactory = function(xhrFactory, optionsFactory) {
  goog.net.XmlHttpFactory.call(this);
  this.xhrFactory_ = xhrFactory;
  this.optionsFactory_ = optionsFactory
};
goog.inherits(goog.net.WrapperXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.WrapperXmlHttpFactory.prototype.createInstance = function() {
  return this.xhrFactory_()
};
goog.net.WrapperXmlHttpFactory.prototype.getOptions = function() {
  return this.optionsFactory_()
};
goog.provide("goog.net.DefaultXmlHttpFactory");
goog.provide("goog.net.XmlHttp");
goog.provide("goog.net.XmlHttp.OptionType");
goog.provide("goog.net.XmlHttp.ReadyState");
goog.require("goog.net.WrapperXmlHttpFactory");
goog.require("goog.net.XmlHttpFactory");
goog.net.XmlHttp = function() {
  return goog.net.XmlHttp.factory_.createInstance()
};
goog.net.XmlHttp.getOptions = function() {
  return goog.net.XmlHttp.factory_.getOptions()
};
goog.net.XmlHttp.OptionType = {USE_NULL_FUNCTION:0, LOCAL_REQUEST_ERROR:1};
goog.net.XmlHttp.ReadyState = {UNINITIALIZED:0, LOADING:1, LOADED:2, INTERACTIVE:3, COMPLETE:4};
goog.net.XmlHttp.factory_;
goog.net.XmlHttp.setFactory = function(factory, optionsFactory) {
  goog.net.XmlHttp.setGlobalFactory(new goog.net.WrapperXmlHttpFactory(factory, optionsFactory))
};
goog.net.XmlHttp.setGlobalFactory = function(factory) {
  goog.net.XmlHttp.factory_ = factory
};
goog.net.DefaultXmlHttpFactory = function() {
  goog.net.XmlHttpFactory.call(this)
};
goog.inherits(goog.net.DefaultXmlHttpFactory, goog.net.XmlHttpFactory);
goog.net.DefaultXmlHttpFactory.prototype.createInstance = function() {
  var progId = this.getProgId_();
  if(progId) {
    return new ActiveXObject(progId)
  }else {
    return new XMLHttpRequest
  }
};
goog.net.DefaultXmlHttpFactory.prototype.internalGetOptions = function() {
  var progId = this.getProgId_();
  var options = {};
  if(progId) {
    options[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] = true;
    options[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] = true
  }
  return options
};
goog.net.DefaultXmlHttpFactory.prototype.ieProgId_ = null;
goog.net.DefaultXmlHttpFactory.prototype.getProgId_ = function() {
  if(!this.ieProgId_ && typeof XMLHttpRequest == "undefined" && typeof ActiveXObject != "undefined") {
    var ACTIVE_X_IDENTS = ["MSXML2.XMLHTTP.6.0", "MSXML2.XMLHTTP.3.0", "MSXML2.XMLHTTP", "Microsoft.XMLHTTP"];
    for(var i = 0;i < ACTIVE_X_IDENTS.length;i++) {
      var candidate = ACTIVE_X_IDENTS[i];
      try {
        new ActiveXObject(candidate);
        this.ieProgId_ = candidate;
        return candidate
      }catch(e) {
      }
    }
    throw Error("Could not create ActiveXObject. ActiveX might be disabled," + " or MSXML might not be installed");
  }
  return this.ieProgId_
};
goog.net.XmlHttp.setGlobalFactory(new goog.net.DefaultXmlHttpFactory);
goog.provide("goog.net.xhrMonitor");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.userAgent");
goog.net.XhrMonitor_ = function() {
  if(!goog.userAgent.GECKO) {
    return
  }
  this.contextsToXhr_ = {};
  this.xhrToContexts_ = {};
  this.stack_ = []
};
goog.net.XhrMonitor_.getKey = function(obj) {
  return goog.isString(obj) ? obj : goog.isObject(obj) ? goog.getUid(obj) : ""
};
goog.net.XhrMonitor_.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.xhrMonitor");
goog.net.XhrMonitor_.prototype.enabled_ = goog.userAgent.GECKO;
goog.net.XhrMonitor_.prototype.setEnabled = function(val) {
  this.enabled_ = goog.userAgent.GECKO && val
};
goog.net.XhrMonitor_.prototype.pushContext = function(context) {
  if(!this.enabled_) {
    return
  }
  var key = goog.net.XhrMonitor_.getKey(context);
  this.logger_.finest("Pushing context: " + context + " (" + key + ")");
  this.stack_.push(key)
};
goog.net.XhrMonitor_.prototype.popContext = function() {
  if(!this.enabled_) {
    return
  }
  var context = this.stack_.pop();
  this.logger_.finest("Popping context: " + context);
  this.updateDependentContexts_(context)
};
goog.net.XhrMonitor_.prototype.isContextSafe = function(context) {
  if(!this.enabled_) {
    return true
  }
  var deps = this.contextsToXhr_[goog.net.XhrMonitor_.getKey(context)];
  this.logger_.fine("Context is safe : " + context + " - " + deps);
  return!deps
};
goog.net.XhrMonitor_.prototype.markXhrOpen = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Opening XHR : " + uid);
  for(var i = 0;i < this.stack_.length;i++) {
    var context = this.stack_[i];
    this.addToMap_(this.contextsToXhr_, context, uid);
    this.addToMap_(this.xhrToContexts_, uid, context)
  }
};
goog.net.XhrMonitor_.prototype.markXhrClosed = function(xhr) {
  if(!this.enabled_) {
    return
  }
  var uid = goog.getUid(xhr);
  this.logger_.fine("Closing XHR : " + uid);
  delete this.xhrToContexts_[uid];
  for(var context in this.contextsToXhr_) {
    goog.array.remove(this.contextsToXhr_[context], uid);
    if(this.contextsToXhr_[context].length == 0) {
      delete this.contextsToXhr_[context]
    }
  }
};
goog.net.XhrMonitor_.prototype.updateDependentContexts_ = function(xhrUid) {
  var contexts = this.xhrToContexts_[xhrUid];
  var xhrs = this.contextsToXhr_[xhrUid];
  if(contexts && xhrs) {
    this.logger_.finest("Updating dependent contexts");
    goog.array.forEach(contexts, function(context) {
      goog.array.forEach(xhrs, function(xhr) {
        this.addToMap_(this.contextsToXhr_, context, xhr);
        this.addToMap_(this.xhrToContexts_, xhr, context)
      }, this)
    }, this)
  }
};
goog.net.XhrMonitor_.prototype.addToMap_ = function(map, key, value) {
  if(!map[key]) {
    map[key] = []
  }
  if(!goog.array.contains(map[key], value)) {
    map[key].push(value)
  }
};
goog.net.xhrMonitor = new goog.net.XhrMonitor_;
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = [];
  if(opt_scheme) {
    out.push(opt_scheme, ":")
  }
  if(opt_domain) {
    out.push("//");
    if(opt_userInfo) {
      out.push(opt_userInfo, "@")
    }
    out.push(opt_domain);
    if(opt_port) {
      out.push(":", opt_port)
    }
  }
  if(opt_path) {
    out.push(opt_path)
  }
  if(opt_queryData) {
    out.push("?", opt_queryData)
  }
  if(opt_fragment) {
    out.push("#", opt_fragment)
  }
  return out.join("")
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([\\w\\d\\-\\u0100-\\uffff.%]*)" + "(?::([0-9]+))?" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  return uri.match(goog.uri.utils.splitRe_)
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri)
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri)
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri)
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri))
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri)
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri))
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri)
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri))
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri)
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1)
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "")
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri))
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT])
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT])
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex)
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if(goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if(buffer[1]) {
    var baseUri = buffer[0];
    var hashIndex = baseUri.indexOf("#");
    if(hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex)
    }
    var questionIndex = baseUri.indexOf("?");
    if(questionIndex < 0) {
      buffer[1] = "?"
    }else {
      if(questionIndex == baseUri.length - 1) {
        buffer[1] = undefined
      }
    }
  }
  return buffer.join("")
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if(goog.isArray(value)) {
    value = value;
    for(var j = 0;j < value.length;j++) {
      pairs.push("&", key);
      if(value[j] !== "") {
        pairs.push("=", goog.string.urlEncode(value[j]))
      }
    }
  }else {
    if(value != null) {
      pairs.push("&", key);
      if(value !== "") {
        pairs.push("=", goog.string.urlEncode(value))
      }
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for(var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for(var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer)
  }
  return buffer
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("")
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1))
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map))
};
goog.uri.utils.appendParam = function(uri, key, value) {
  return goog.uri.utils.appendQueryData_([uri, "&", key, "=", goog.string.urlEncode(value)])
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if(precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if(!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index
      }
    }
    index += keyLength + 1
  }
  return-1
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if(foundIndex < 0) {
    return null
  }else {
    var endPosition = uri.indexOf("&", foundIndex);
    if(endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex))
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("&", foundIndex);
    if(position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)))
  }
  return result
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("&", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex)
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1")
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value)
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if(goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1)
  }
  if(goog.string.startsWith(path, "/")) {
    path = path.substr(1)
  }
  return goog.string.buildString(baseUri, "/", path)
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString())
};
goog.provide("goog.net.XhrIo");
goog.provide("goog.net.XhrIo.ResponseType");
goog.require("goog.Timer");
goog.require("goog.debug.Logger");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.debug.errorHandlerWeakDep");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.ErrorCode");
goog.require("goog.net.EventType");
goog.require("goog.net.HttpStatus");
goog.require("goog.net.XmlHttp");
goog.require("goog.net.xhrMonitor");
goog.require("goog.object");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.net.XhrIo = function(opt_xmlHttpFactory) {
  goog.events.EventTarget.call(this);
  this.headers = new goog.structs.Map;
  this.xmlHttpFactory_ = opt_xmlHttpFactory || null
};
goog.inherits(goog.net.XhrIo, goog.events.EventTarget);
goog.net.XhrIo.ResponseType = {DEFAULT:"", TEXT:"text", DOCUMENT:"document", BLOB:"blob", ARRAY_BUFFER:"arraybuffer"};
goog.net.XhrIo.prototype.logger_ = goog.debug.Logger.getLogger("goog.net.XhrIo");
goog.net.XhrIo.CONTENT_TYPE_HEADER = "Content-Type";
goog.net.XhrIo.HTTP_SCHEME_PATTERN = /^https?:?$/i;
goog.net.XhrIo.FORM_CONTENT_TYPE = "application/x-www-form-urlencoded;charset=utf-8";
goog.net.XhrIo.sendInstances_ = [];
goog.net.XhrIo.send = function(url, opt_callback, opt_method, opt_content, opt_headers, opt_timeoutInterval) {
  var x = new goog.net.XhrIo;
  goog.net.XhrIo.sendInstances_.push(x);
  if(opt_callback) {
    goog.events.listen(x, goog.net.EventType.COMPLETE, opt_callback)
  }
  goog.events.listen(x, goog.net.EventType.READY, goog.partial(goog.net.XhrIo.cleanupSend_, x));
  if(opt_timeoutInterval) {
    x.setTimeoutInterval(opt_timeoutInterval)
  }
  x.send(url, opt_method, opt_content, opt_headers)
};
goog.net.XhrIo.cleanup = function() {
  var instances = goog.net.XhrIo.sendInstances_;
  while(instances.length) {
    instances.pop().dispose()
  }
};
goog.net.XhrIo.protectEntryPoints = function(errorHandler) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = errorHandler.protectEntryPoint(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
};
goog.net.XhrIo.cleanupSend_ = function(XhrIo) {
  XhrIo.dispose();
  goog.array.remove(goog.net.XhrIo.sendInstances_, XhrIo)
};
goog.net.XhrIo.prototype.active_ = false;
goog.net.XhrIo.prototype.xhr_ = null;
goog.net.XhrIo.prototype.xhrOptions_ = null;
goog.net.XhrIo.prototype.lastUri_ = "";
goog.net.XhrIo.prototype.lastMethod_ = "";
goog.net.XhrIo.prototype.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
goog.net.XhrIo.prototype.lastError_ = "";
goog.net.XhrIo.prototype.errorDispatched_ = false;
goog.net.XhrIo.prototype.inSend_ = false;
goog.net.XhrIo.prototype.inOpen_ = false;
goog.net.XhrIo.prototype.inAbort_ = false;
goog.net.XhrIo.prototype.timeoutInterval_ = 0;
goog.net.XhrIo.prototype.timeoutId_ = null;
goog.net.XhrIo.prototype.responseType_ = goog.net.XhrIo.ResponseType.DEFAULT;
goog.net.XhrIo.prototype.withCredentials_ = false;
goog.net.XhrIo.prototype.getTimeoutInterval = function() {
  return this.timeoutInterval_
};
goog.net.XhrIo.prototype.setTimeoutInterval = function(ms) {
  this.timeoutInterval_ = Math.max(0, ms)
};
goog.net.XhrIo.prototype.setResponseType = function(type) {
  this.responseType_ = type
};
goog.net.XhrIo.prototype.getResponseType = function() {
  return this.responseType_
};
goog.net.XhrIo.prototype.setWithCredentials = function(withCredentials) {
  this.withCredentials_ = withCredentials
};
goog.net.XhrIo.prototype.getWithCredentials = function() {
  return this.withCredentials_
};
goog.net.XhrIo.prototype.send = function(url, opt_method, opt_content, opt_headers) {
  if(this.xhr_) {
    throw Error("[goog.net.XhrIo] Object is active with another request");
  }
  var method = opt_method ? opt_method.toUpperCase() : "GET";
  this.lastUri_ = url;
  this.lastError_ = "";
  this.lastErrorCode_ = goog.net.ErrorCode.NO_ERROR;
  this.lastMethod_ = method;
  this.errorDispatched_ = false;
  this.active_ = true;
  this.xhr_ = this.createXhr();
  this.xhrOptions_ = this.xmlHttpFactory_ ? this.xmlHttpFactory_.getOptions() : goog.net.XmlHttp.getOptions();
  goog.net.xhrMonitor.markXhrOpen(this.xhr_);
  this.xhr_.onreadystatechange = goog.bind(this.onReadyStateChange_, this);
  try {
    this.logger_.fine(this.formatMsg_("Opening Xhr"));
    this.inOpen_ = true;
    this.xhr_.open(method, url, true);
    this.inOpen_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Error opening Xhr: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err);
    return
  }
  var content = opt_content || "";
  var headers = this.headers.clone();
  if(opt_headers) {
    goog.structs.forEach(opt_headers, function(value, key) {
      headers.set(key, value)
    })
  }
  if(method == "POST" && !headers.containsKey(goog.net.XhrIo.CONTENT_TYPE_HEADER)) {
    headers.set(goog.net.XhrIo.CONTENT_TYPE_HEADER, goog.net.XhrIo.FORM_CONTENT_TYPE)
  }
  goog.structs.forEach(headers, function(value, key) {
    this.xhr_.setRequestHeader(key, value)
  }, this);
  if(this.responseType_) {
    this.xhr_.responseType = this.responseType_
  }
  if(goog.object.containsKey(this.xhr_, "withCredentials")) {
    this.xhr_.withCredentials = this.withCredentials_
  }
  try {
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(this.timeoutInterval_ > 0) {
      this.logger_.fine(this.formatMsg_("Will abort after " + this.timeoutInterval_ + "ms if incomplete"));
      this.timeoutId_ = goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.timeout_, this), this.timeoutInterval_)
    }
    this.logger_.fine(this.formatMsg_("Sending request"));
    this.inSend_ = true;
    this.xhr_.send(content);
    this.inSend_ = false
  }catch(err) {
    this.logger_.fine(this.formatMsg_("Send error: " + err.message));
    this.error_(goog.net.ErrorCode.EXCEPTION, err)
  }
};
goog.net.XhrIo.prototype.createXhr = function() {
  return this.xmlHttpFactory_ ? this.xmlHttpFactory_.createInstance() : goog.net.XmlHttp()
};
goog.net.XhrIo.prototype.dispatchEvent = function(e) {
  if(this.xhr_) {
    goog.net.xhrMonitor.pushContext(this.xhr_);
    try {
      return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
    }finally {
      goog.net.xhrMonitor.popContext()
    }
  }else {
    return goog.net.XhrIo.superClass_.dispatchEvent.call(this, e)
  }
};
goog.net.XhrIo.prototype.timeout_ = function() {
  if(typeof goog == "undefined") {
  }else {
    if(this.xhr_) {
      this.lastError_ = "Timed out after " + this.timeoutInterval_ + "ms, aborting";
      this.lastErrorCode_ = goog.net.ErrorCode.TIMEOUT;
      this.logger_.fine(this.formatMsg_(this.lastError_));
      this.dispatchEvent(goog.net.EventType.TIMEOUT);
      this.abort(goog.net.ErrorCode.TIMEOUT)
    }
  }
};
goog.net.XhrIo.prototype.error_ = function(errorCode, err) {
  this.active_ = false;
  if(this.xhr_) {
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false
  }
  this.lastError_ = err;
  this.lastErrorCode_ = errorCode;
  this.dispatchErrors_();
  this.cleanUpXhr_()
};
goog.net.XhrIo.prototype.dispatchErrors_ = function() {
  if(!this.errorDispatched_) {
    this.errorDispatched_ = true;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ERROR)
  }
};
goog.net.XhrIo.prototype.abort = function(opt_failureCode) {
  if(this.xhr_ && this.active_) {
    this.logger_.fine(this.formatMsg_("Aborting"));
    this.active_ = false;
    this.inAbort_ = true;
    this.xhr_.abort();
    this.inAbort_ = false;
    this.lastErrorCode_ = opt_failureCode || goog.net.ErrorCode.ABORT;
    this.dispatchEvent(goog.net.EventType.COMPLETE);
    this.dispatchEvent(goog.net.EventType.ABORT);
    this.cleanUpXhr_()
  }
};
goog.net.XhrIo.prototype.disposeInternal = function() {
  if(this.xhr_) {
    if(this.active_) {
      this.active_ = false;
      this.inAbort_ = true;
      this.xhr_.abort();
      this.inAbort_ = false
    }
    this.cleanUpXhr_(true)
  }
  goog.net.XhrIo.superClass_.disposeInternal.call(this)
};
goog.net.XhrIo.prototype.onReadyStateChange_ = function() {
  if(!this.inOpen_ && !this.inSend_ && !this.inAbort_) {
    this.onReadyStateChangeEntryPoint_()
  }else {
    this.onReadyStateChangeHelper_()
  }
};
goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = function() {
  this.onReadyStateChangeHelper_()
};
goog.net.XhrIo.prototype.onReadyStateChangeHelper_ = function() {
  if(!this.active_) {
    return
  }
  if(typeof goog == "undefined") {
  }else {
    if(this.xhrOptions_[goog.net.XmlHttp.OptionType.LOCAL_REQUEST_ERROR] && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE && this.getStatus() == 2) {
      this.logger_.fine(this.formatMsg_("Local request error detected and ignored"))
    }else {
      if(this.inSend_ && this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE) {
        goog.Timer.defaultTimerObject.setTimeout(goog.bind(this.onReadyStateChange_, this), 0);
        return
      }
      this.dispatchEvent(goog.net.EventType.READY_STATE_CHANGE);
      if(this.isComplete()) {
        this.logger_.fine(this.formatMsg_("Request complete"));
        this.active_ = false;
        if(this.isSuccess()) {
          this.dispatchEvent(goog.net.EventType.COMPLETE);
          this.dispatchEvent(goog.net.EventType.SUCCESS)
        }else {
          this.lastErrorCode_ = goog.net.ErrorCode.HTTP_ERROR;
          this.lastError_ = this.getStatusText() + " [" + this.getStatus() + "]";
          this.dispatchErrors_()
        }
        this.cleanUpXhr_()
      }
    }
  }
};
goog.net.XhrIo.prototype.cleanUpXhr_ = function(opt_fromDispose) {
  if(this.xhr_) {
    var xhr = this.xhr_;
    var clearedOnReadyStateChange = this.xhrOptions_[goog.net.XmlHttp.OptionType.USE_NULL_FUNCTION] ? goog.nullFunction : null;
    this.xhr_ = null;
    this.xhrOptions_ = null;
    if(this.timeoutId_) {
      goog.Timer.defaultTimerObject.clearTimeout(this.timeoutId_);
      this.timeoutId_ = null
    }
    if(!opt_fromDispose) {
      goog.net.xhrMonitor.pushContext(xhr);
      this.dispatchEvent(goog.net.EventType.READY);
      goog.net.xhrMonitor.popContext()
    }
    goog.net.xhrMonitor.markXhrClosed(xhr);
    try {
      xhr.onreadystatechange = clearedOnReadyStateChange
    }catch(e) {
      this.logger_.severe("Problem encountered resetting onreadystatechange: " + e.message)
    }
  }
};
goog.net.XhrIo.prototype.isActive = function() {
  return!!this.xhr_
};
goog.net.XhrIo.prototype.isComplete = function() {
  return this.getReadyState() == goog.net.XmlHttp.ReadyState.COMPLETE
};
goog.net.XhrIo.prototype.isSuccess = function() {
  switch(this.getStatus()) {
    case 0:
      return!this.isLastUriEffectiveSchemeHttp_();
    case goog.net.HttpStatus.OK:
    ;
    case goog.net.HttpStatus.CREATED:
    ;
    case goog.net.HttpStatus.ACCEPTED:
    ;
    case goog.net.HttpStatus.NO_CONTENT:
    ;
    case goog.net.HttpStatus.NOT_MODIFIED:
    ;
    case goog.net.HttpStatus.QUIRK_IE_NO_CONTENT:
      return true;
    default:
      return false
  }
};
goog.net.XhrIo.prototype.isLastUriEffectiveSchemeHttp_ = function() {
  var lastUriScheme = goog.isString(this.lastUri_) ? goog.uri.utils.getScheme(this.lastUri_) : this.lastUri_.getScheme();
  if(lastUriScheme) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(lastUriScheme)
  }
  if(self.location) {
    return goog.net.XhrIo.HTTP_SCHEME_PATTERN.test(self.location.protocol)
  }else {
    return true
  }
};
goog.net.XhrIo.prototype.getReadyState = function() {
  return this.xhr_ ? this.xhr_.readyState : goog.net.XmlHttp.ReadyState.UNINITIALIZED
};
goog.net.XhrIo.prototype.getStatus = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.status : -1
  }catch(e) {
    this.logger_.warning("Can not get status: " + e.message);
    return-1
  }
};
goog.net.XhrIo.prototype.getStatusText = function() {
  try {
    return this.getReadyState() > goog.net.XmlHttp.ReadyState.LOADED ? this.xhr_.statusText : ""
  }catch(e) {
    this.logger_.fine("Can not get status: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getLastUri = function() {
  return String(this.lastUri_)
};
goog.net.XhrIo.prototype.getResponseText = function() {
  try {
    return this.xhr_ ? this.xhr_.responseText : ""
  }catch(e) {
    this.logger_.fine("Can not get responseText: " + e.message);
    return""
  }
};
goog.net.XhrIo.prototype.getResponseXml = function() {
  try {
    return this.xhr_ ? this.xhr_.responseXML : null
  }catch(e) {
    this.logger_.fine("Can not get responseXML: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseJson = function(opt_xssiPrefix) {
  if(!this.xhr_) {
    return undefined
  }
  var responseText = this.xhr_.responseText;
  if(opt_xssiPrefix && responseText.indexOf(opt_xssiPrefix) == 0) {
    responseText = responseText.substring(opt_xssiPrefix.length)
  }
  return goog.json.parse(responseText)
};
goog.net.XhrIo.prototype.getResponse = function() {
  try {
    if(!this.xhr_) {
      return null
    }
    if("response" in this.xhr_) {
      return this.xhr_.response
    }
    switch(this.responseType_) {
      case goog.net.XhrIo.ResponseType.DEFAULT:
      ;
      case goog.net.XhrIo.ResponseType.TEXT:
        return this.xhr_.responseText;
      case goog.net.XhrIo.ResponseType.ARRAY_BUFFER:
        if("mozResponseArrayBuffer" in this.xhr_) {
          return this.xhr_.mozResponseArrayBuffer
        }
    }
    this.logger_.severe("Response type " + this.responseType_ + " is not " + "supported on this browser");
    return null
  }catch(e) {
    this.logger_.fine("Can not get response: " + e.message);
    return null
  }
};
goog.net.XhrIo.prototype.getResponseHeader = function(key) {
  return this.xhr_ && this.isComplete() ? this.xhr_.getResponseHeader(key) : undefined
};
goog.net.XhrIo.prototype.getAllResponseHeaders = function() {
  return this.xhr_ && this.isComplete() ? this.xhr_.getAllResponseHeaders() : ""
};
goog.net.XhrIo.prototype.getLastErrorCode = function() {
  return this.lastErrorCode_
};
goog.net.XhrIo.prototype.getLastError = function() {
  return goog.isString(this.lastError_) ? this.lastError_ : String(this.lastError_)
};
goog.net.XhrIo.prototype.formatMsg_ = function(msg) {
  return msg + " [" + this.lastMethod_ + " " + this.lastUri_ + " " + this.getStatus() + "]"
};
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_ = transformer(goog.net.XhrIo.prototype.onReadyStateChangeEntryPoint_)
});
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentMode(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentMode(9) || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersion("9"), INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", DD:"DD", DEL:"DEL", DFN:"DFN", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", FIELDSET:"FIELDSET", FONT:"FONT", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", 
H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", MAP:"MAP", MENU:"MENU", META:"META", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", P:"P", PARAM:"PARAM", PRE:"PRE", Q:"Q", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SELECT:"SELECT", SMALL:"SMALL", SPAN:"SPAN", STRIKE:"STRIKE", 
STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUP:"SUP", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TITLE:"TITLE", TR:"TR", TT:"TT", U:"U", UL:"UL", VAR:"VAR"};
goog.provide("goog.dom.classes");
goog.require("goog.array");
goog.dom.classes.set = function(element, className) {
  element.className = className
};
goog.dom.classes.get = function(element) {
  var className = element.className;
  return className && typeof className.split == "function" ? className.split(/\s+/) : []
};
goog.dom.classes.add = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.add_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.remove = function(element, var_args) {
  var classes = goog.dom.classes.get(element);
  var args = goog.array.slice(arguments, 1);
  var b = goog.dom.classes.remove_(classes, args);
  element.className = classes.join(" ");
  return b
};
goog.dom.classes.add_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < args.length;i++) {
    if(!goog.array.contains(classes, args[i])) {
      classes.push(args[i]);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.remove_ = function(classes, args) {
  var rv = 0;
  for(var i = 0;i < classes.length;i++) {
    if(goog.array.contains(args, classes[i])) {
      goog.array.splice(classes, i--, 1);
      rv++
    }
  }
  return rv == args.length
};
goog.dom.classes.swap = function(element, fromClass, toClass) {
  var classes = goog.dom.classes.get(element);
  var removed = false;
  for(var i = 0;i < classes.length;i++) {
    if(classes[i] == fromClass) {
      goog.array.splice(classes, i--, 1);
      removed = true
    }
  }
  if(removed) {
    classes.push(toClass);
    element.className = classes.join(" ")
  }
  return removed
};
goog.dom.classes.addRemove = function(element, classesToRemove, classesToAdd) {
  var classes = goog.dom.classes.get(element);
  if(goog.isString(classesToRemove)) {
    goog.array.remove(classes, classesToRemove)
  }else {
    if(goog.isArray(classesToRemove)) {
      goog.dom.classes.remove_(classes, classesToRemove)
    }
  }
  if(goog.isString(classesToAdd) && !goog.array.contains(classes, classesToAdd)) {
    classes.push(classesToAdd)
  }else {
    if(goog.isArray(classesToAdd)) {
      goog.dom.classes.add_(classes, classesToAdd)
    }
  }
  element.className = classes.join(" ")
};
goog.dom.classes.has = function(element, className) {
  return goog.array.contains(goog.dom.classes.get(element), className)
};
goog.dom.classes.enable = function(element, className, enabled) {
  if(enabled) {
    goog.dom.classes.add(element, className)
  }else {
    goog.dom.classes.remove(element, className)
  }
};
goog.dom.classes.toggle = function(element, className) {
  var add = !goog.dom.classes.has(element, className);
  goog.dom.classes.enable(element, className, add);
  return add
};
goog.provide("goog.math.Coordinate");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y)
};
if(goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return"(" + this.x + ", " + this.y + ")"
  }
}
goog.math.Coordinate.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.x == b.x && a.y == b.y
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy)
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y)
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y)
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height
};
goog.math.Size.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.width == b.width && a.height == b.height
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height)
};
if(goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return"(" + this.width + " x " + this.height + ")"
  }
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height)
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height)
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area()
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this
};
goog.math.Size.prototype.scale = function(s) {
  this.width *= s;
  this.height *= s;
  return this
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s)
};
goog.provide("goog.dom");
goog.provide("goog.dom.DomHelper");
goog.provide("goog.dom.NodeType");
goog.require("goog.array");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.dom.ASSUME_QUIRKS_MODE = false;
goog.dom.ASSUME_STANDARDS_MODE = false;
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper)
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document
};
goog.dom.getElement = function(element) {
  return goog.isString(element) ? document.getElementById(element) : element
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el)
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if(goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className)
  }else {
    if(parent.getElementsByClassName) {
      return parent.getElementsByClassName(className)
    }
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if(goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className)
  }else {
    retVal = goog.dom.getElementsByClass(className, opt_el)[0]
  }
  return retVal || null
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return parent.querySelectorAll && parent.querySelector && (!goog.userAgent.WEBKIT || goog.dom.isCss1CompatMode_(document) || goog.userAgent.isVersion("528"))
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if(goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query)
  }
  if(opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if(tagName) {
      var arrayLike = {};
      var len = 0;
      for(var i = 0, el;el = els[i];i++) {
        if(tagName == el.nodeName) {
          arrayLike[len++] = el
        }
      }
      arrayLike.length = len;
      return arrayLike
    }else {
      return els
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if(opt_class) {
    var arrayLike = {};
    var len = 0;
    for(var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if(typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el
      }
    }
    arrayLike.length = len;
    return arrayLike
  }else {
    return els
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if(key == "style") {
      element.style.cssText = val
    }else {
      if(key == "class") {
        element.className = val
      }else {
        if(key == "for") {
          element.htmlFor = val
        }else {
          if(key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val)
          }else {
            if(goog.string.startsWith(key, "aria-")) {
              element.setAttribute(key, val)
            }else {
              element[key] = val
            }
          }
        }
      }
    }
  })
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "rowspan":"rowSpan", "valign":"vAlign", "height":"height", "width":"width", "usemap":"useMap", "frameborder":"frameBorder", "maxlength":"maxLength", "type":"type"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window)
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  if(goog.userAgent.WEBKIT && !goog.userAgent.isVersion("500") && !goog.userAgent.MOBILE) {
    if(typeof win.innerHeight == "undefined") {
      win = window
    }
    var innerHeight = win.innerHeight;
    var scrollHeight = win.document.documentElement.scrollHeight;
    if(win == win.top) {
      if(scrollHeight < innerHeight) {
        innerHeight -= 15
      }
    }
    return new goog.math.Size(win.innerWidth, innerHeight)
  }
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight)
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window)
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if(doc) {
    var vh = goog.dom.getViewportSize_(win).height;
    var body = doc.body;
    var docEl = doc.documentElement;
    if(goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight
    }else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if(docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight
      }
      if(sh > vh) {
        height = sh > oh ? sh : oh
      }else {
        height = sh < oh ? sh : oh
      }
    }
  }
  return height
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll()
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document)
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop)
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document)
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  return!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments)
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if(!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["<", tagName];
    if(attributes.name) {
      tagNameArr.push(' name="', goog.string.htmlEscape(attributes.name), '"')
    }
    if(attributes.type) {
      tagNameArr.push(' type="', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      attributes = clone;
      delete attributes.type
    }
    tagNameArr.push(">");
    tagName = tagNameArr.join("")
  }
  var element = doc.createElement(tagName);
  if(attributes) {
    if(goog.isString(attributes)) {
      element.className = attributes
    }else {
      if(goog.isArray(attributes)) {
        goog.dom.classes.add.apply(null, [element].concat(attributes))
      }else {
        goog.dom.setProperties(element, attributes)
      }
    }
  }
  if(args.length > 2) {
    goog.dom.append_(doc, element, args, 2)
  }
  return element
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if(child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
    }
  }
  for(var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if(goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.clone(arg) : arg, childHandler)
    }else {
      childHandler(arg)
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name)
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(content)
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["<tr>"];
  for(var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "<td>&nbsp;</td>" : "<td></td>")
  }
  rowHtml.push("</tr>");
  rowHtml = rowHtml.join("");
  var totalHtml = ["<table>"];
  for(i = 0;i < rows;i++) {
    totalHtml.push(rowHtml)
  }
  totalHtml.push("</table>");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return elem.removeChild(elem.firstChild)
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString)
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if(goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "<br>" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild)
  }else {
    tempDiv.innerHTML = htmlString
  }
  if(tempDiv.childNodes.length == 1) {
    return tempDiv.removeChild(tempDiv.firstChild)
  }else {
    var fragment = doc.createDocumentFragment();
    while(tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild)
    }
    return fragment
  }
};
goog.dom.getCompatMode = function() {
  return goog.dom.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document)
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if(goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE
  }
  return doc.compatMode == "CSS1Compat"
};
goog.dom.canHaveChildren = function(node) {
  if(node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.STYLE:
      return false
  }
  return true
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child)
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1)
};
goog.dom.removeChildren = function(node) {
  var child;
  while(child = node.firstChild) {
    node.removeChild(child)
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode)
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if(refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling)
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null)
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if(parent) {
    parent.replaceChild(newNode, oldNode)
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if(parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if(element.removeNode) {
      return element.removeNode(false)
    }else {
      while(child = element.firstChild) {
        parent.insertBefore(child, element)
      }
      return goog.dom.removeNode(element)
    }
  }
};
goog.dom.getChildren = function(element) {
  if(goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT
  })
};
goog.dom.getFirstElementChild = function(node) {
  if(node.firstElementChild != undefined) {
    return node.firstElementChild
  }
  return goog.dom.getNextElementNode_(node.firstChild, true)
};
goog.dom.getLastElementChild = function(node) {
  if(node.lastElementChild != undefined) {
    return node.lastElementChild
  }
  return goog.dom.getNextElementNode_(node.lastChild, false)
};
goog.dom.getNextElementSibling = function(node) {
  if(node.nextElementSibling != undefined) {
    return node.nextElementSibling
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true)
};
goog.dom.getPreviousElementSibling = function(node) {
  if(node.previousElementSibling != undefined) {
    return node.previousElementSibling
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false)
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while(node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling
  }
  return node
};
goog.dom.getNextNode = function(node) {
  if(!node) {
    return null
  }
  if(node.firstChild) {
    return node.firstChild
  }
  while(node && !node.nextSibling) {
    node = node.parentNode
  }
  return node ? node.nextSibling : null
};
goog.dom.getPreviousNode = function(node) {
  if(!node) {
    return null
  }
  if(!node.previousSibling) {
    return node.parentNode
  }
  node = node.previousSibling;
  while(node && node.lastChild) {
    node = node.lastChild
  }
  return node
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj
};
goog.dom.contains = function(parent, descendant) {
  if(parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant)
  }
  if(typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16)
  }
  while(descendant && parent != descendant) {
    descendant = descendant.parentNode
  }
  return descendant == parent
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if(node1 == node2) {
    return 0
  }
  if(node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1
  }
  if("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if(isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex
    }else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if(parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2)
      }
      if(!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2)
      }
      if(!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1)
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex)
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2)
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if(parent == node) {
    return-1
  }
  var sibling = node;
  while(sibling.parentNode != parent) {
    sibling = sibling.parentNode
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode)
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while(s = s.previousSibling) {
    if(s == node1) {
      return-1
    }
  }
  return 1
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if(!count) {
    return null
  }else {
    if(count == 1) {
      return arguments[0]
    }
  }
  var paths = [];
  var minLength = Infinity;
  for(i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while(node) {
      ancestors.unshift(node);
      node = node.parentNode
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length)
  }
  var output = null;
  for(i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for(var j = 1;j < count;j++) {
      if(first != paths[j][i]) {
        return output
      }
    }
    output = first
  }
  return output
};
goog.dom.getOwnerDocument = function(node) {
  return node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow_(goog.dom.getFrameContentDocument(frame))
};
goog.dom.setTextContent = function(element, text) {
  if("textContent" in element) {
    element.textContent = text
  }else {
    if(element.firstChild && element.firstChild.nodeType == goog.dom.NodeType.TEXT) {
      while(element.lastChild != element.firstChild) {
        element.removeChild(element.lastChild)
      }
      element.firstChild.data = text
    }else {
      goog.dom.removeChildren(element);
      var doc = goog.dom.getOwnerDocument(element);
      element.appendChild(doc.createTextNode(text))
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if("outerHTML" in element) {
    return element.outerHTML
  }else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if(root != null) {
    var child = root.firstChild;
    while(child) {
      if(p(child)) {
        rv.push(child);
        if(findOne) {
          return true
        }
      }
      if(goog.dom.findNodes_(child, p, rv, findOne)) {
        return true
      }
      child = child.nextSibling
    }
  }
  return false
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  if(attrNode && attrNode.specified) {
    var index = element.tabIndex;
    return goog.isNumber(index) && index >= 0 && index < 32768
  }
  return false
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if(enable) {
    element.tabIndex = 0
  }else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex")
  }
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if(goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText)
  }else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("")
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if(!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ")
  }
  if(textContent != " ") {
    textContent = textContent.replace(/^\s*/, "")
  }
  return textContent
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("")
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if(node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  }else {
    if(node.nodeType == goog.dom.NodeType.TEXT) {
      if(normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""))
      }else {
        buf.push(node.nodeValue)
      }
    }else {
      if(node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName])
      }else {
        var child = node.firstChild;
        while(child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while(node && node != root) {
    var cur = node;
    while(cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur))
    }
    node = node.parentNode
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur;
  while(stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if(cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    }else {
      if(cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length
      }else {
        if(cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length
        }else {
          for(var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i])
          }
        }
      }
    }
  }
  if(goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur
  }
  return cur
};
goog.dom.isNodeList = function(val) {
  if(val && typeof val.length == "number") {
    if(goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string"
    }else {
      if(goog.isFunction(val)) {
        return typeof val.item == "function"
      }
    }
  }
  return false
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.dom.classes.has(node, opt_class))
  }, true)
};
goog.dom.getAncestorByClass = function(element, opt_class) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, opt_class)
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if(!opt_includeNode) {
    element = element.parentNode
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while(element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if(matcher(element)) {
      return element
    }
    element = element.parentNode;
    steps++
  }
  return null
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement
  }catch(e) {
  }
  return null
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  if(goog.isString(element)) {
    return this.document_.getElementById(element)
  }else {
    return element
  }
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el)
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc)
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc)
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow())
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow())
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments)
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name)
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(content)
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp)
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString)
};
goog.dom.DomHelper.prototype.getCompatMode = function() {
  return this.isCss1CompatMode() ? "CSS1Compat" : "BackCompat"
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_)
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_)
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_)
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.math.Box = function(top, right, bottom, left) {
  this.top = top;
  this.right = right;
  this.bottom = bottom;
  this.left = left
};
goog.math.Box.boundingBox = function(var_args) {
  var box = new goog.math.Box(arguments[0].y, arguments[0].x, arguments[0].y, arguments[0].x);
  for(var i = 1;i < arguments.length;i++) {
    var coord = arguments[i];
    box.top = Math.min(box.top, coord.y);
    box.right = Math.max(box.right, coord.x);
    box.bottom = Math.max(box.bottom, coord.y);
    box.left = Math.min(box.left, coord.x)
  }
  return box
};
goog.math.Box.prototype.clone = function() {
  return new goog.math.Box(this.top, this.right, this.bottom, this.left)
};
if(goog.DEBUG) {
  goog.math.Box.prototype.toString = function() {
    return"(" + this.top + "t, " + this.right + "r, " + this.bottom + "b, " + this.left + "l)"
  }
}
goog.math.Box.prototype.contains = function(other) {
  return goog.math.Box.contains(this, other)
};
goog.math.Box.prototype.expand = function(top, opt_right, opt_bottom, opt_left) {
  if(goog.isObject(top)) {
    this.top -= top.top;
    this.right += top.right;
    this.bottom += top.bottom;
    this.left -= top.left
  }else {
    this.top -= top;
    this.right += opt_right;
    this.bottom += opt_bottom;
    this.left -= opt_left
  }
  return this
};
goog.math.Box.prototype.expandToInclude = function(box) {
  this.left = Math.min(this.left, box.left);
  this.top = Math.min(this.top, box.top);
  this.right = Math.max(this.right, box.right);
  this.bottom = Math.max(this.bottom, box.bottom)
};
goog.math.Box.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.top == b.top && a.right == b.right && a.bottom == b.bottom && a.left == b.left
};
goog.math.Box.contains = function(box, other) {
  if(!box || !other) {
    return false
  }
  if(other instanceof goog.math.Box) {
    return other.left >= box.left && other.right <= box.right && other.top >= box.top && other.bottom <= box.bottom
  }
  return other.x >= box.left && other.x <= box.right && other.y >= box.top && other.y <= box.bottom
};
goog.math.Box.distance = function(box, coord) {
  if(coord.x >= box.left && coord.x <= box.right) {
    if(coord.y >= box.top && coord.y <= box.bottom) {
      return 0
    }
    return coord.y < box.top ? box.top - coord.y : coord.y - box.bottom
  }
  if(coord.y >= box.top && coord.y <= box.bottom) {
    return coord.x < box.left ? box.left - coord.x : coord.x - box.right
  }
  return goog.math.Coordinate.distance(coord, new goog.math.Coordinate(coord.x < box.left ? box.left : box.right, coord.y < box.top ? box.top : box.bottom))
};
goog.math.Box.intersects = function(a, b) {
  return a.left <= b.right && b.left <= a.right && a.top <= b.bottom && b.top <= a.bottom
};
goog.math.Box.intersectsWithPadding = function(a, b, padding) {
  return a.left <= b.right + padding && b.left <= a.right + padding && a.top <= b.bottom + padding && b.top <= a.bottom + padding
};
goog.provide("goog.math.Rect");
goog.require("goog.math.Box");
goog.require("goog.math.Size");
goog.math.Rect = function(x, y, w, h) {
  this.left = x;
  this.top = y;
  this.width = w;
  this.height = h
};
goog.math.Rect.prototype.clone = function() {
  return new goog.math.Rect(this.left, this.top, this.width, this.height)
};
goog.math.Rect.prototype.toBox = function() {
  var right = this.left + this.width;
  var bottom = this.top + this.height;
  return new goog.math.Box(this.top, right, bottom, this.left)
};
goog.math.Rect.createFromBox = function(box) {
  return new goog.math.Rect(box.left, box.top, box.right - box.left, box.bottom - box.top)
};
if(goog.DEBUG) {
  goog.math.Rect.prototype.toString = function() {
    return"(" + this.left + ", " + this.top + " - " + this.width + "w x " + this.height + "h)"
  }
}
goog.math.Rect.equals = function(a, b) {
  if(a == b) {
    return true
  }
  if(!a || !b) {
    return false
  }
  return a.left == b.left && a.width == b.width && a.top == b.top && a.height == b.height
};
goog.math.Rect.prototype.intersection = function(rect) {
  var x0 = Math.max(this.left, rect.left);
  var x1 = Math.min(this.left + this.width, rect.left + rect.width);
  if(x0 <= x1) {
    var y0 = Math.max(this.top, rect.top);
    var y1 = Math.min(this.top + this.height, rect.top + rect.height);
    if(y0 <= y1) {
      this.left = x0;
      this.top = y0;
      this.width = x1 - x0;
      this.height = y1 - y0;
      return true
    }
  }
  return false
};
goog.math.Rect.intersection = function(a, b) {
  var x0 = Math.max(a.left, b.left);
  var x1 = Math.min(a.left + a.width, b.left + b.width);
  if(x0 <= x1) {
    var y0 = Math.max(a.top, b.top);
    var y1 = Math.min(a.top + a.height, b.top + b.height);
    if(y0 <= y1) {
      return new goog.math.Rect(x0, y0, x1 - x0, y1 - y0)
    }
  }
  return null
};
goog.math.Rect.intersects = function(a, b) {
  return a.left <= b.left + b.width && b.left <= a.left + a.width && a.top <= b.top + b.height && b.top <= a.top + a.height
};
goog.math.Rect.prototype.intersects = function(rect) {
  return goog.math.Rect.intersects(this, rect)
};
goog.math.Rect.difference = function(a, b) {
  var intersection = goog.math.Rect.intersection(a, b);
  if(!intersection || !intersection.height || !intersection.width) {
    return[a.clone()]
  }
  var result = [];
  var top = a.top;
  var height = a.height;
  var ar = a.left + a.width;
  var ab = a.top + a.height;
  var br = b.left + b.width;
  var bb = b.top + b.height;
  if(b.top > a.top) {
    result.push(new goog.math.Rect(a.left, a.top, a.width, b.top - a.top));
    top = b.top;
    height -= b.top - a.top
  }
  if(bb < ab) {
    result.push(new goog.math.Rect(a.left, bb, a.width, ab - bb));
    height = bb - top
  }
  if(b.left > a.left) {
    result.push(new goog.math.Rect(a.left, top, b.left - a.left, height))
  }
  if(br < ar) {
    result.push(new goog.math.Rect(br, top, ar - br, height))
  }
  return result
};
goog.math.Rect.prototype.difference = function(rect) {
  return goog.math.Rect.difference(this, rect)
};
goog.math.Rect.prototype.boundingRect = function(rect) {
  var right = Math.max(this.left + this.width, rect.left + rect.width);
  var bottom = Math.max(this.top + this.height, rect.top + rect.height);
  this.left = Math.min(this.left, rect.left);
  this.top = Math.min(this.top, rect.top);
  this.width = right - this.left;
  this.height = bottom - this.top
};
goog.math.Rect.boundingRect = function(a, b) {
  if(!a || !b) {
    return null
  }
  var clone = a.clone();
  clone.boundingRect(b);
  return clone
};
goog.math.Rect.prototype.contains = function(another) {
  if(another instanceof goog.math.Rect) {
    return this.left <= another.left && this.left + this.width >= another.left + another.width && this.top <= another.top && this.top + this.height >= another.top + another.height
  }else {
    return another.x >= this.left && another.x <= this.left + this.width && another.y >= this.top && another.y <= this.top + this.height
  }
};
goog.math.Rect.prototype.getSize = function() {
  return new goog.math.Size(this.width, this.height)
};
goog.provide("goog.style");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.math.Box");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.style.setStyle = function(element, style, opt_value) {
  if(goog.isString(style)) {
    goog.style.setStyle_(element, opt_value, style)
  }else {
    goog.object.forEach(style, goog.partial(goog.style.setStyle_, element))
  }
};
goog.style.setStyle_ = function(element, value, style) {
  element.style[goog.string.toCamelCase(style)] = value
};
goog.style.getStyle = function(element, property) {
  return element.style[goog.string.toCamelCase(property)] || ""
};
goog.style.getComputedStyle = function(element, property) {
  var doc = goog.dom.getOwnerDocument(element);
  if(doc.defaultView && doc.defaultView.getComputedStyle) {
    var styles = doc.defaultView.getComputedStyle(element, null);
    if(styles) {
      return styles[property] || styles.getPropertyValue(property)
    }
  }
  return""
};
goog.style.getCascadedStyle = function(element, style) {
  return element.currentStyle ? element.currentStyle[style] : null
};
goog.style.getStyle_ = function(element, style) {
  return goog.style.getComputedStyle(element, style) || goog.style.getCascadedStyle(element, style) || element.style[style]
};
goog.style.getComputedPosition = function(element) {
  return goog.style.getStyle_(element, "position")
};
goog.style.getBackgroundColor = function(element) {
  return goog.style.getStyle_(element, "backgroundColor")
};
goog.style.getComputedOverflowX = function(element) {
  return goog.style.getStyle_(element, "overflowX")
};
goog.style.getComputedOverflowY = function(element) {
  return goog.style.getStyle_(element, "overflowY")
};
goog.style.getComputedZIndex = function(element) {
  return goog.style.getStyle_(element, "zIndex")
};
goog.style.getComputedTextAlign = function(element) {
  return goog.style.getStyle_(element, "textAlign")
};
goog.style.getComputedCursor = function(element) {
  return goog.style.getStyle_(element, "cursor")
};
goog.style.setPosition = function(el, arg1, opt_arg2) {
  var x, y;
  var buggyGeckoSubPixelPos = goog.userAgent.GECKO && (goog.userAgent.MAC || goog.userAgent.X11) && goog.userAgent.isVersion("1.9");
  if(arg1 instanceof goog.math.Coordinate) {
    x = arg1.x;
    y = arg1.y
  }else {
    x = arg1;
    y = opt_arg2
  }
  el.style.left = goog.style.getPixelStyleValue_(x, buggyGeckoSubPixelPos);
  el.style.top = goog.style.getPixelStyleValue_(y, buggyGeckoSubPixelPos)
};
goog.style.getPosition = function(element) {
  return new goog.math.Coordinate(element.offsetLeft, element.offsetTop)
};
goog.style.getClientViewportElement = function(opt_node) {
  var doc;
  if(opt_node) {
    if(opt_node.nodeType == goog.dom.NodeType.DOCUMENT) {
      doc = opt_node
    }else {
      doc = goog.dom.getOwnerDocument(opt_node)
    }
  }else {
    doc = goog.dom.getDocument()
  }
  if(goog.userAgent.IE && !goog.userAgent.isDocumentMode(9) && !goog.dom.getDomHelper(doc).isCss1CompatMode()) {
    return doc.body
  }
  return doc.documentElement
};
goog.style.getBoundingClientRect_ = function(el) {
  var rect = el.getBoundingClientRect();
  if(goog.userAgent.IE) {
    var doc = el.ownerDocument;
    rect.left -= doc.documentElement.clientLeft + doc.body.clientLeft;
    rect.top -= doc.documentElement.clientTop + doc.body.clientTop
  }
  return rect
};
goog.style.getOffsetParent = function(element) {
  if(goog.userAgent.IE) {
    return element.offsetParent
  }
  var doc = goog.dom.getOwnerDocument(element);
  var positionStyle = goog.style.getStyle_(element, "position");
  var skipStatic = positionStyle == "fixed" || positionStyle == "absolute";
  for(var parent = element.parentNode;parent && parent != doc;parent = parent.parentNode) {
    positionStyle = goog.style.getStyle_(parent, "position");
    skipStatic = skipStatic && positionStyle == "static" && parent != doc.documentElement && parent != doc.body;
    if(!skipStatic && (parent.scrollWidth > parent.clientWidth || parent.scrollHeight > parent.clientHeight || positionStyle == "fixed" || positionStyle == "absolute" || positionStyle == "relative")) {
      return parent
    }
  }
  return null
};
goog.style.getVisibleRectForElement = function(element) {
  var visibleRect = new goog.math.Box(0, Infinity, Infinity, 0);
  var dom = goog.dom.getDomHelper(element);
  var body = dom.getDocument().body;
  var documentElement = dom.getDocument().documentElement;
  var scrollEl = dom.getDocumentScrollElement();
  for(var el = element;el = goog.style.getOffsetParent(el);) {
    if((!goog.userAgent.IE || el.clientWidth != 0) && (!goog.userAgent.WEBKIT || el.clientHeight != 0 || el != body) && el != body && el != documentElement && goog.style.getStyle_(el, "overflow") != "visible") {
      var pos = goog.style.getPageOffset(el);
      var client = goog.style.getClientLeftTop(el);
      pos.x += client.x;
      pos.y += client.y;
      visibleRect.top = Math.max(visibleRect.top, pos.y);
      visibleRect.right = Math.min(visibleRect.right, pos.x + el.clientWidth);
      visibleRect.bottom = Math.min(visibleRect.bottom, pos.y + el.clientHeight);
      visibleRect.left = Math.max(visibleRect.left, pos.x)
    }
  }
  var scrollX = scrollEl.scrollLeft, scrollY = scrollEl.scrollTop;
  visibleRect.left = Math.max(visibleRect.left, scrollX);
  visibleRect.top = Math.max(visibleRect.top, scrollY);
  var winSize = dom.getViewportSize();
  visibleRect.right = Math.min(visibleRect.right, scrollX + winSize.width);
  visibleRect.bottom = Math.min(visibleRect.bottom, scrollY + winSize.height);
  return visibleRect.top >= 0 && visibleRect.left >= 0 && visibleRect.bottom > visibleRect.top && visibleRect.right > visibleRect.left ? visibleRect : null
};
goog.style.scrollIntoContainerView = function(element, container, opt_center) {
  var elementPos = goog.style.getPageOffset(element);
  var containerPos = goog.style.getPageOffset(container);
  var containerBorder = goog.style.getBorderBox(container);
  var relX = elementPos.x - containerPos.x - containerBorder.left;
  var relY = elementPos.y - containerPos.y - containerBorder.top;
  var spaceX = container.clientWidth - element.offsetWidth;
  var spaceY = container.clientHeight - element.offsetHeight;
  if(opt_center) {
    container.scrollLeft += relX - spaceX / 2;
    container.scrollTop += relY - spaceY / 2
  }else {
    container.scrollLeft += Math.min(relX, Math.max(relX - spaceX, 0));
    container.scrollTop += Math.min(relY, Math.max(relY - spaceY, 0))
  }
};
goog.style.getClientLeftTop = function(el) {
  if(goog.userAgent.GECKO && !goog.userAgent.isVersion("1.9")) {
    var left = parseFloat(goog.style.getComputedStyle(el, "borderLeftWidth"));
    if(goog.style.isRightToLeft(el)) {
      var scrollbarWidth = el.offsetWidth - el.clientWidth - left - parseFloat(goog.style.getComputedStyle(el, "borderRightWidth"));
      left += scrollbarWidth
    }
    return new goog.math.Coordinate(left, parseFloat(goog.style.getComputedStyle(el, "borderTopWidth")))
  }
  return new goog.math.Coordinate(el.clientLeft, el.clientTop)
};
goog.style.getPageOffset = function(el) {
  var box, doc = goog.dom.getOwnerDocument(el);
  var positionStyle = goog.style.getStyle_(el, "position");
  var BUGGY_GECKO_BOX_OBJECT = goog.userAgent.GECKO && doc.getBoxObjectFor && !el.getBoundingClientRect && positionStyle == "absolute" && (box = doc.getBoxObjectFor(el)) && (box.screenX < 0 || box.screenY < 0);
  var pos = new goog.math.Coordinate(0, 0);
  var viewportElement = goog.style.getClientViewportElement(doc);
  if(el == viewportElement) {
    return pos
  }
  if(el.getBoundingClientRect) {
    box = goog.style.getBoundingClientRect_(el);
    var scrollCoord = goog.dom.getDomHelper(doc).getDocumentScroll();
    pos.x = box.left + scrollCoord.x;
    pos.y = box.top + scrollCoord.y
  }else {
    if(doc.getBoxObjectFor && !BUGGY_GECKO_BOX_OBJECT) {
      box = doc.getBoxObjectFor(el);
      var vpBox = doc.getBoxObjectFor(viewportElement);
      pos.x = box.screenX - vpBox.screenX;
      pos.y = box.screenY - vpBox.screenY
    }else {
      var parent = el;
      do {
        pos.x += parent.offsetLeft;
        pos.y += parent.offsetTop;
        if(parent != el) {
          pos.x += parent.clientLeft || 0;
          pos.y += parent.clientTop || 0
        }
        if(goog.userAgent.WEBKIT && goog.style.getComputedPosition(parent) == "fixed") {
          pos.x += doc.body.scrollLeft;
          pos.y += doc.body.scrollTop;
          break
        }
        parent = parent.offsetParent
      }while(parent && parent != el);
      if(goog.userAgent.OPERA || goog.userAgent.WEBKIT && positionStyle == "absolute") {
        pos.y -= doc.body.offsetTop
      }
      for(parent = el;(parent = goog.style.getOffsetParent(parent)) && parent != doc.body && parent != viewportElement;) {
        pos.x -= parent.scrollLeft;
        if(!goog.userAgent.OPERA || parent.tagName != "TR") {
          pos.y -= parent.scrollTop
        }
      }
    }
  }
  return pos
};
goog.style.getPageOffsetLeft = function(el) {
  return goog.style.getPageOffset(el).x
};
goog.style.getPageOffsetTop = function(el) {
  return goog.style.getPageOffset(el).y
};
goog.style.getFramedPageOffset = function(el, relativeWin) {
  var position = new goog.math.Coordinate(0, 0);
  var currentWin = goog.dom.getWindow(goog.dom.getOwnerDocument(el));
  var currentEl = el;
  do {
    var offset = currentWin == relativeWin ? goog.style.getPageOffset(currentEl) : goog.style.getClientPosition(currentEl);
    position.x += offset.x;
    position.y += offset.y
  }while(currentWin && currentWin != relativeWin && (currentEl = currentWin.frameElement) && (currentWin = currentWin.parent));
  return position
};
goog.style.translateRectForAnotherFrame = function(rect, origBase, newBase) {
  if(origBase.getDocument() != newBase.getDocument()) {
    var body = origBase.getDocument().body;
    var pos = goog.style.getFramedPageOffset(body, newBase.getWindow());
    pos = goog.math.Coordinate.difference(pos, goog.style.getPageOffset(body));
    if(goog.userAgent.IE && !origBase.isCss1CompatMode()) {
      pos = goog.math.Coordinate.difference(pos, origBase.getDocumentScroll())
    }
    rect.left += pos.x;
    rect.top += pos.y
  }
};
goog.style.getRelativePosition = function(a, b) {
  var ap = goog.style.getClientPosition(a);
  var bp = goog.style.getClientPosition(b);
  return new goog.math.Coordinate(ap.x - bp.x, ap.y - bp.y)
};
goog.style.getClientPosition = function(el) {
  var pos = new goog.math.Coordinate;
  if(el.nodeType == goog.dom.NodeType.ELEMENT) {
    if(el.getBoundingClientRect) {
      var box = goog.style.getBoundingClientRect_(el);
      pos.x = box.left;
      pos.y = box.top
    }else {
      var scrollCoord = goog.dom.getDomHelper(el).getDocumentScroll();
      var pageCoord = goog.style.getPageOffset(el);
      pos.x = pageCoord.x - scrollCoord.x;
      pos.y = pageCoord.y - scrollCoord.y
    }
  }else {
    var isAbstractedEvent = goog.isFunction(el.getBrowserEvent);
    var targetEvent = el;
    if(el.targetTouches) {
      targetEvent = el.targetTouches[0]
    }else {
      if(isAbstractedEvent && el.getBrowserEvent().targetTouches) {
        targetEvent = el.getBrowserEvent().targetTouches[0]
      }
    }
    pos.x = targetEvent.clientX;
    pos.y = targetEvent.clientY
  }
  return pos
};
goog.style.setPageOffset = function(el, x, opt_y) {
  var cur = goog.style.getPageOffset(el);
  if(x instanceof goog.math.Coordinate) {
    opt_y = x.y;
    x = x.x
  }
  var dx = x - cur.x;
  var dy = opt_y - cur.y;
  goog.style.setPosition(el, el.offsetLeft + dx, el.offsetTop + dy)
};
goog.style.setSize = function(element, w, opt_h) {
  var h;
  if(w instanceof goog.math.Size) {
    h = w.height;
    w = w.width
  }else {
    if(opt_h == undefined) {
      throw Error("missing height argument");
    }
    h = opt_h
  }
  goog.style.setWidth(element, w);
  goog.style.setHeight(element, h)
};
goog.style.getPixelStyleValue_ = function(value, round) {
  if(typeof value == "number") {
    value = (round ? Math.round(value) : value) + "px"
  }
  return value
};
goog.style.setHeight = function(element, height) {
  element.style.height = goog.style.getPixelStyleValue_(height, true)
};
goog.style.setWidth = function(element, width) {
  element.style.width = goog.style.getPixelStyleValue_(width, true)
};
goog.style.getSize = function(element) {
  if(goog.style.getStyle_(element, "display") != "none") {
    return goog.style.getSizeWithDisplay_(element)
  }
  var style = element.style;
  var originalDisplay = style.display;
  var originalVisibility = style.visibility;
  var originalPosition = style.position;
  style.visibility = "hidden";
  style.position = "absolute";
  style.display = "inline";
  var size = goog.style.getSizeWithDisplay_(element);
  style.display = originalDisplay;
  style.position = originalPosition;
  style.visibility = originalVisibility;
  return size
};
goog.style.getSizeWithDisplay_ = function(element) {
  var offsetWidth = element.offsetWidth;
  var offsetHeight = element.offsetHeight;
  var webkitOffsetsZero = goog.userAgent.WEBKIT && !offsetWidth && !offsetHeight;
  if((!goog.isDef(offsetWidth) || webkitOffsetsZero) && element.getBoundingClientRect) {
    var clientRect = goog.style.getBoundingClientRect_(element);
    return new goog.math.Size(clientRect.right - clientRect.left, clientRect.bottom - clientRect.top)
  }
  return new goog.math.Size(offsetWidth, offsetHeight)
};
goog.style.getBounds = function(element) {
  var o = goog.style.getPageOffset(element);
  var s = goog.style.getSize(element);
  return new goog.math.Rect(o.x, o.y, s.width, s.height)
};
goog.style.toCamelCase = function(selector) {
  return goog.string.toCamelCase(String(selector))
};
goog.style.toSelectorCase = function(selector) {
  return goog.string.toSelectorCase(selector)
};
goog.style.getOpacity = function(el) {
  var style = el.style;
  var result = "";
  if("opacity" in style) {
    result = style.opacity
  }else {
    if("MozOpacity" in style) {
      result = style.MozOpacity
    }else {
      if("filter" in style) {
        var match = style.filter.match(/alpha\(opacity=([\d.]+)\)/);
        if(match) {
          result = String(match[1] / 100)
        }
      }
    }
  }
  return result == "" ? result : Number(result)
};
goog.style.setOpacity = function(el, alpha) {
  var style = el.style;
  if("opacity" in style) {
    style.opacity = alpha
  }else {
    if("MozOpacity" in style) {
      style.MozOpacity = alpha
    }else {
      if("filter" in style) {
        if(alpha === "") {
          style.filter = ""
        }else {
          style.filter = "alpha(opacity=" + alpha * 100 + ")"
        }
      }
    }
  }
};
goog.style.setTransparentBackgroundImage = function(el, src) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.filter = "progid:DXImageTransform.Microsoft.AlphaImageLoader(" + 'src="' + src + '", sizingMethod="crop")'
  }else {
    style.backgroundImage = "url(" + src + ")";
    style.backgroundPosition = "top left";
    style.backgroundRepeat = "no-repeat"
  }
};
goog.style.clearTransparentBackgroundImage = function(el) {
  var style = el.style;
  if("filter" in style) {
    style.filter = ""
  }else {
    style.backgroundImage = "none"
  }
};
goog.style.showElement = function(el, display) {
  el.style.display = display ? "" : "none"
};
goog.style.isElementShown = function(el) {
  return el.style.display != "none"
};
goog.style.installStyles = function(stylesString, opt_node) {
  var dh = goog.dom.getDomHelper(opt_node);
  var styleSheet = null;
  if(goog.userAgent.IE) {
    styleSheet = dh.getDocument().createStyleSheet();
    goog.style.setStyles(styleSheet, stylesString)
  }else {
    var head = dh.getElementsByTagNameAndClass("head")[0];
    if(!head) {
      var body = dh.getElementsByTagNameAndClass("body")[0];
      head = dh.createDom("head");
      body.parentNode.insertBefore(head, body)
    }
    styleSheet = dh.createDom("style");
    goog.style.setStyles(styleSheet, stylesString);
    dh.appendChild(head, styleSheet)
  }
  return styleSheet
};
goog.style.uninstallStyles = function(styleSheet) {
  var node = styleSheet.ownerNode || styleSheet.owningElement || styleSheet;
  goog.dom.removeNode(node)
};
goog.style.setStyles = function(element, stylesString) {
  if(goog.userAgent.IE) {
    element.cssText = stylesString
  }else {
    var propToSet = goog.userAgent.WEBKIT ? "innerText" : "innerHTML";
    element[propToSet] = stylesString
  }
};
goog.style.setPreWrap = function(el) {
  var style = el.style;
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.whiteSpace = "pre";
    style.wordWrap = "break-word"
  }else {
    if(goog.userAgent.GECKO) {
      style.whiteSpace = "-moz-pre-wrap"
    }else {
      style.whiteSpace = "pre-wrap"
    }
  }
};
goog.style.setInlineBlock = function(el) {
  var style = el.style;
  style.position = "relative";
  if(goog.userAgent.IE && !goog.userAgent.isVersion("8")) {
    style.zoom = "1";
    style.display = "inline"
  }else {
    if(goog.userAgent.GECKO) {
      style.display = goog.userAgent.isVersion("1.9a") ? "inline-block" : "-moz-inline-box"
    }else {
      style.display = "inline-block"
    }
  }
};
goog.style.isRightToLeft = function(el) {
  return"rtl" == goog.style.getStyle_(el, "direction")
};
goog.style.unselectableStyle_ = goog.userAgent.GECKO ? "MozUserSelect" : goog.userAgent.WEBKIT ? "WebkitUserSelect" : null;
goog.style.isUnselectable = function(el) {
  if(goog.style.unselectableStyle_) {
    return el.style[goog.style.unselectableStyle_].toLowerCase() == "none"
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      return el.getAttribute("unselectable") == "on"
    }
  }
  return false
};
goog.style.setUnselectable = function(el, unselectable, opt_noRecurse) {
  var descendants = !opt_noRecurse ? el.getElementsByTagName("*") : null;
  var name = goog.style.unselectableStyle_;
  if(name) {
    var value = unselectable ? "none" : "";
    el.style[name] = value;
    if(descendants) {
      for(var i = 0, descendant;descendant = descendants[i];i++) {
        descendant.style[name] = value
      }
    }
  }else {
    if(goog.userAgent.IE || goog.userAgent.OPERA) {
      var value = unselectable ? "on" : "";
      el.setAttribute("unselectable", value);
      if(descendants) {
        for(var i = 0, descendant;descendant = descendants[i];i++) {
          descendant.setAttribute("unselectable", value)
        }
      }
    }
  }
};
goog.style.getBorderBoxSize = function(element) {
  return new goog.math.Size(element.offsetWidth, element.offsetHeight)
};
goog.style.setBorderBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right;
      style.pixelHeight = size.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom
    }else {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "border-box")
  }
};
goog.style.getContentBoxSize = function(element) {
  var doc = goog.dom.getOwnerDocument(element);
  var ieCurrentStyle = goog.userAgent.IE && element.currentStyle;
  if(ieCurrentStyle && goog.dom.getDomHelper(doc).isCss1CompatMode() && ieCurrentStyle.width != "auto" && ieCurrentStyle.height != "auto" && !ieCurrentStyle.boxSizing) {
    var width = goog.style.getIePixelValue_(element, ieCurrentStyle.width, "width", "pixelWidth");
    var height = goog.style.getIePixelValue_(element, ieCurrentStyle.height, "height", "pixelHeight");
    return new goog.math.Size(width, height)
  }else {
    var borderBoxSize = goog.style.getBorderBoxSize(element);
    var paddingBox = goog.style.getPaddingBox(element);
    var borderBox = goog.style.getBorderBox(element);
    return new goog.math.Size(borderBoxSize.width - borderBox.left - paddingBox.left - paddingBox.right - borderBox.right, borderBoxSize.height - borderBox.top - paddingBox.top - paddingBox.bottom - borderBox.bottom)
  }
};
goog.style.setContentBoxSize = function(element, size) {
  var doc = goog.dom.getOwnerDocument(element);
  var isCss1CompatMode = goog.dom.getDomHelper(doc).isCss1CompatMode();
  if(goog.userAgent.IE && (!isCss1CompatMode || !goog.userAgent.isVersion("8"))) {
    var style = element.style;
    if(isCss1CompatMode) {
      style.pixelWidth = size.width;
      style.pixelHeight = size.height
    }else {
      var paddingBox = goog.style.getPaddingBox(element);
      var borderBox = goog.style.getBorderBox(element);
      style.pixelWidth = size.width + borderBox.left + paddingBox.left + paddingBox.right + borderBox.right;
      style.pixelHeight = size.height + borderBox.top + paddingBox.top + paddingBox.bottom + borderBox.bottom
    }
  }else {
    goog.style.setBoxSizingSize_(element, size, "content-box")
  }
};
goog.style.setBoxSizingSize_ = function(element, size, boxSizing) {
  var style = element.style;
  if(goog.userAgent.GECKO) {
    style.MozBoxSizing = boxSizing
  }else {
    if(goog.userAgent.WEBKIT) {
      style.WebkitBoxSizing = boxSizing
    }else {
      style.boxSizing = boxSizing
    }
  }
  style.width = size.width + "px";
  style.height = size.height + "px"
};
goog.style.getIePixelValue_ = function(element, value, name, pixelName) {
  if(/^\d+px?$/.test(value)) {
    return parseInt(value, 10)
  }else {
    var oldStyleValue = element.style[name];
    var oldRuntimeValue = element.runtimeStyle[name];
    element.runtimeStyle[name] = element.currentStyle[name];
    element.style[name] = value;
    var pixelValue = element.style[pixelName];
    element.style[name] = oldStyleValue;
    element.runtimeStyle[name] = oldRuntimeValue;
    return pixelValue
  }
};
goog.style.getIePixelDistance_ = function(element, propName) {
  return goog.style.getIePixelValue_(element, goog.style.getCascadedStyle(element, propName), "left", "pixelLeft")
};
goog.style.getBox_ = function(element, stylePrefix) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelDistance_(element, stylePrefix + "Left");
    var right = goog.style.getIePixelDistance_(element, stylePrefix + "Right");
    var top = goog.style.getIePixelDistance_(element, stylePrefix + "Top");
    var bottom = goog.style.getIePixelDistance_(element, stylePrefix + "Bottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, stylePrefix + "Left");
    var right = goog.style.getComputedStyle(element, stylePrefix + "Right");
    var top = goog.style.getComputedStyle(element, stylePrefix + "Top");
    var bottom = goog.style.getComputedStyle(element, stylePrefix + "Bottom");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getPaddingBox = function(element) {
  return goog.style.getBox_(element, "padding")
};
goog.style.getMarginBox = function(element) {
  return goog.style.getBox_(element, "margin")
};
goog.style.ieBorderWidthKeywords_ = {"thin":2, "medium":4, "thick":6};
goog.style.getIePixelBorder_ = function(element, prop) {
  if(goog.style.getCascadedStyle(element, prop + "Style") == "none") {
    return 0
  }
  var width = goog.style.getCascadedStyle(element, prop + "Width");
  if(width in goog.style.ieBorderWidthKeywords_) {
    return goog.style.ieBorderWidthKeywords_[width]
  }
  return goog.style.getIePixelValue_(element, width, "left", "pixelLeft")
};
goog.style.getBorderBox = function(element) {
  if(goog.userAgent.IE) {
    var left = goog.style.getIePixelBorder_(element, "borderLeft");
    var right = goog.style.getIePixelBorder_(element, "borderRight");
    var top = goog.style.getIePixelBorder_(element, "borderTop");
    var bottom = goog.style.getIePixelBorder_(element, "borderBottom");
    return new goog.math.Box(top, right, bottom, left)
  }else {
    var left = goog.style.getComputedStyle(element, "borderLeftWidth");
    var right = goog.style.getComputedStyle(element, "borderRightWidth");
    var top = goog.style.getComputedStyle(element, "borderTopWidth");
    var bottom = goog.style.getComputedStyle(element, "borderBottomWidth");
    return new goog.math.Box(parseFloat(top), parseFloat(right), parseFloat(bottom), parseFloat(left))
  }
};
goog.style.getFontFamily = function(el) {
  var doc = goog.dom.getOwnerDocument(el);
  var font = "";
  if(doc.body.createTextRange) {
    var range = doc.body.createTextRange();
    range.moveToElementText(el);
    try {
      font = range.queryCommandValue("FontName")
    }catch(e) {
      font = ""
    }
  }
  if(!font) {
    font = goog.style.getStyle_(el, "fontFamily")
  }
  var fontsArray = font.split(",");
  if(fontsArray.length > 1) {
    font = fontsArray[0]
  }
  return goog.string.stripQuotes(font, "\"'")
};
goog.style.lengthUnitRegex_ = /[^\d]+$/;
goog.style.getLengthUnits = function(value) {
  var units = value.match(goog.style.lengthUnitRegex_);
  return units && units[0] || null
};
goog.style.ABSOLUTE_CSS_LENGTH_UNITS_ = {"cm":1, "in":1, "mm":1, "pc":1, "pt":1};
goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_ = {"em":1, "ex":1};
goog.style.getFontSize = function(el) {
  var fontSize = goog.style.getStyle_(el, "fontSize");
  var sizeUnits = goog.style.getLengthUnits(fontSize);
  if(fontSize && "px" == sizeUnits) {
    return parseInt(fontSize, 10)
  }
  if(goog.userAgent.IE) {
    if(sizeUnits in goog.style.ABSOLUTE_CSS_LENGTH_UNITS_) {
      return goog.style.getIePixelValue_(el, fontSize, "left", "pixelLeft")
    }else {
      if(el.parentNode && el.parentNode.nodeType == goog.dom.NodeType.ELEMENT && sizeUnits in goog.style.CONVERTIBLE_RELATIVE_CSS_UNITS_) {
        var parentElement = el.parentNode;
        var parentSize = goog.style.getStyle_(parentElement, "fontSize");
        return goog.style.getIePixelValue_(parentElement, fontSize == parentSize ? "1em" : fontSize, "left", "pixelLeft")
      }
    }
  }
  var sizeElement = goog.dom.createDom("span", {"style":"visibility:hidden;position:absolute;" + "line-height:0;padding:0;margin:0;border:0;height:1em;"});
  goog.dom.appendChild(el, sizeElement);
  fontSize = sizeElement.offsetHeight;
  goog.dom.removeNode(sizeElement);
  return fontSize
};
goog.style.parseStyleAttribute = function(value) {
  var result = {};
  goog.array.forEach(value.split(/\s*;\s*/), function(pair) {
    var keyValue = pair.split(/\s*:\s*/);
    if(keyValue.length == 2) {
      result[goog.string.toCamelCase(keyValue[0].toLowerCase())] = keyValue[1]
    }
  });
  return result
};
goog.style.toStyleAttribute = function(obj) {
  var buffer = [];
  goog.object.forEach(obj, function(value, key) {
    buffer.push(goog.string.toSelectorCase(key), ":", value, ";")
  });
  return buffer.join("")
};
goog.style.setFloat = function(el, value) {
  el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] = value
};
goog.style.getFloat = function(el) {
  return el.style[goog.userAgent.IE ? "styleFloat" : "cssFloat"] || ""
};
goog.style.getScrollbarWidth = function(opt_className) {
  var outerDiv = goog.dom.createElement("div");
  if(opt_className) {
    outerDiv.className = opt_className
  }
  outerDiv.style.cssText = "visiblity:hidden;overflow:auto;" + "position:absolute;top:0;width:100px;height:100px";
  var innerDiv = goog.dom.createElement("div");
  goog.style.setSize(innerDiv, "200px", "200px");
  outerDiv.appendChild(innerDiv);
  goog.dom.appendChild(goog.dom.getDocument().body, outerDiv);
  var width = outerDiv.offsetWidth - outerDiv.clientWidth;
  goog.dom.removeNode(outerDiv);
  return width
};
goog.provide("goog.dom.a11y");
goog.provide("goog.dom.a11y.Announcer");
goog.provide("goog.dom.a11y.LivePriority");
goog.provide("goog.dom.a11y.Role");
goog.provide("goog.dom.a11y.State");
goog.require("goog.Disposable");
goog.require("goog.dom");
goog.require("goog.object");
goog.dom.a11y.State = {ACTIVEDESCENDANT:"activedescendant", ATOMIC:"atomic", AUTOCOMPLETE:"autocomplete", BUSY:"busy", CHECKED:"checked", CONTROLS:"controls", DESCRIBEDBY:"describedby", DISABLED:"disabled", DROPEFFECT:"dropeffect", EXPANDED:"expanded", FLOWTO:"flowto", GRABBED:"grabbed", HASPOPUP:"haspopup", HIDDEN:"hidden", INVALID:"invalid", LABEL:"label", LABELLEDBY:"labelledby", LEVEL:"level", LIVE:"live", MULTILINE:"multiline", MULTISELECTABLE:"multiselectable", ORIENTATION:"orientation", OWNS:"owns", 
POSINSET:"posinset", PRESSED:"pressed", READONLY:"readonly", RELEVANT:"relevant", REQUIRED:"required", SELECTED:"selected", SETSIZE:"setsize", SORT:"sort", VALUEMAX:"valuemax", VALUEMIN:"valuemin", VALUENOW:"valuenow", VALUETEXT:"valuetext"};
goog.dom.a11y.Role = {ALERT:"alert", ALERTDIALOG:"alertdialog", APPLICATION:"application", ARTICLE:"article", BANNER:"banner", BUTTON:"button", CHECKBOX:"checkbox", COLUMNHEADER:"columnheader", COMBOBOX:"combobox", COMPLEMENTARY:"complementary", DIALOG:"dialog", DIRECTORY:"directory", DOCUMENT:"document", FORM:"form", GRID:"grid", GRIDCELL:"gridcell", GROUP:"group", HEADING:"heading", IMG:"img", LINK:"link", LIST:"list", LISTBOX:"listbox", LISTITEM:"listitem", LOG:"log", MAIN:"main", MARQUEE:"marquee", 
MATH:"math", MENU:"menu", MENUBAR:"menubar", MENU_ITEM:"menuitem", MENU_ITEM_CHECKBOX:"menuitemcheckbox", MENU_ITEM_RADIO:"menuitemradio", NAVIGATION:"navigation", NOTE:"note", OPTION:"option", PRESENTATION:"presentation", PROGRESSBAR:"progressbar", RADIO:"radio", RADIOGROUP:"radiogroup", REGION:"region", ROW:"row", ROWGROUP:"rowgroup", ROWHEADER:"rowheader", SCROLLBAR:"scrollbar", SEARCH:"search", SEPARATOR:"separator", SLIDER:"slider", SPINBUTTON:"spinbutton", STATUS:"status", TAB:"tab", TAB_LIST:"tablist", 
TAB_PANEL:"tabpanel", TEXTBOX:"textbox", TIMER:"timer", TOOLBAR:"toolbar", TOOLTIP:"tooltip", TREE:"tree", TREEGRID:"treegrid", TREEITEM:"treeitem"};
goog.dom.a11y.LivePriority = {OFF:"off", POLITE:"polite", ASSERTIVE:"assertive"};
goog.dom.a11y.setRole = function(element, roleName) {
  element.setAttribute("role", roleName);
  element.roleName = roleName
};
goog.dom.a11y.getRole = function(element) {
  return element.roleName || ""
};
goog.dom.a11y.setState = function(element, state, value) {
  element.setAttribute("aria-" + state, value)
};
goog.dom.a11y.getState = function(element, stateName) {
  var attrb = element.getAttribute("aria-" + stateName);
  if(attrb === true || attrb === false) {
    return attrb ? "true" : "false"
  }else {
    if(!attrb) {
      return""
    }else {
      return String(attrb)
    }
  }
};
goog.dom.a11y.getActiveDescendant = function(element) {
  var id = goog.dom.a11y.getState(element, goog.dom.a11y.State.ACTIVEDESCENDANT);
  return goog.dom.getOwnerDocument(element).getElementById(id)
};
goog.dom.a11y.setActiveDescendant = function(element, activeElement) {
  goog.dom.a11y.setState(element, goog.dom.a11y.State.ACTIVEDESCENDANT, activeElement ? activeElement.id : "")
};
goog.dom.a11y.Announcer = function(domHelper) {
  goog.base(this);
  this.domHelper_ = domHelper;
  this.liveRegions_ = {}
};
goog.inherits(goog.dom.a11y.Announcer, goog.Disposable);
goog.dom.a11y.Announcer.prototype.disposeInternal = function() {
  goog.object.forEach(this.liveRegions_, this.domHelper_.removeNode, this.domHelper_);
  this.liveRegions_ = null;
  this.domHelper_ = null;
  goog.base(this, "disposeInternal")
};
goog.dom.a11y.Announcer.prototype.say = function(message, opt_priority) {
  goog.dom.setTextContent(this.getLiveRegion_(opt_priority || goog.dom.a11y.LivePriority.POLITE), message)
};
goog.dom.a11y.Announcer.prototype.getLiveRegion_ = function(priority) {
  if(this.liveRegions_[priority]) {
    return this.liveRegions_[priority]
  }
  var liveRegion;
  liveRegion = this.domHelper_.createElement("div");
  liveRegion.style.position = "absolute";
  liveRegion.style.top = "-1000px";
  goog.dom.a11y.setState(liveRegion, "live", priority);
  goog.dom.a11y.setState(liveRegion, "atomic", "true");
  this.domHelper_.getDocument().body.appendChild(liveRegion);
  this.liveRegions_[priority] = liveRegion;
  return liveRegion
};
goog.provide("goog.ui.ButtonSide");
goog.ui.ButtonSide = {NONE:0, START:1, END:2, BOTH:3};
goog.provide("goog.events.EventHandler");
goog.require("goog.Disposable");
goog.require("goog.array");
goog.require("goog.events");
goog.require("goog.events.EventWrapper");
goog.events.EventHandler = function(opt_handler) {
  goog.Disposable.call(this);
  this.handler_ = opt_handler;
  this.keys_ = []
};
goog.inherits(goog.events.EventHandler, goog.Disposable);
goog.events.EventHandler.typeArray_ = [];
goog.events.EventHandler.prototype.listen = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(!goog.isArray(type)) {
    goog.events.EventHandler.typeArray_[0] = type;
    type = goog.events.EventHandler.typeArray_
  }
  for(var i = 0;i < type.length;i++) {
    var key = goog.events.listen(src, type[i], opt_fn || this, opt_capture || false, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenOnce = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.listenOnce(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var key = goog.events.listenOnce(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    this.keys_.push(key)
  }
  return this
};
goog.events.EventHandler.prototype.listenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.listen(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.getListenerCount = function() {
  return this.keys_.length
};
goog.events.EventHandler.prototype.unlisten = function(src, type, opt_fn, opt_capture, opt_handler) {
  if(goog.isArray(type)) {
    for(var i = 0;i < type.length;i++) {
      this.unlisten(src, type[i], opt_fn, opt_capture, opt_handler)
    }
  }else {
    var listener = goog.events.getListener(src, type, opt_fn || this, opt_capture, opt_handler || this.handler_ || this);
    if(listener) {
      var key = listener.key;
      goog.events.unlistenByKey(key);
      goog.array.remove(this.keys_, key)
    }
  }
  return this
};
goog.events.EventHandler.prototype.unlistenWithWrapper = function(src, wrapper, listener, opt_capt, opt_handler) {
  wrapper.unlisten(src, listener, opt_capt, opt_handler || this.handler_, this);
  return this
};
goog.events.EventHandler.prototype.removeAll = function() {
  goog.array.forEach(this.keys_, goog.events.unlistenByKey);
  this.keys_.length = 0
};
goog.events.EventHandler.prototype.disposeInternal = function() {
  goog.events.EventHandler.superClass_.disposeInternal.call(this);
  this.removeAll()
};
goog.events.EventHandler.prototype.handleEvent = function(e) {
  throw Error("EventHandler.handleEvent not implemented");
};
goog.provide("goog.ui.IdGenerator");
goog.ui.IdGenerator = function() {
};
goog.addSingletonGetter(goog.ui.IdGenerator);
goog.ui.IdGenerator.prototype.nextId_ = 0;
goog.ui.IdGenerator.prototype.getNextUniqueId = function() {
  return":" + (this.nextId_++).toString(36)
};
goog.ui.IdGenerator.instance = goog.ui.IdGenerator.getInstance();
goog.provide("goog.ui.Component");
goog.provide("goog.ui.Component.Error");
goog.provide("goog.ui.Component.EventType");
goog.provide("goog.ui.Component.State");
goog.require("goog.array");
goog.require("goog.array.ArrayLike");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.object");
goog.require("goog.style");
goog.require("goog.ui.IdGenerator");
goog.ui.Component = function(opt_domHelper) {
  goog.events.EventTarget.call(this);
  this.dom_ = opt_domHelper || goog.dom.getDomHelper();
  this.rightToLeft_ = goog.ui.Component.defaultRightToLeft_
};
goog.inherits(goog.ui.Component, goog.events.EventTarget);
goog.ui.Component.prototype.idGenerator_ = goog.ui.IdGenerator.getInstance();
goog.ui.Component.defaultRightToLeft_ = null;
goog.ui.Component.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", HIDE:"hide", DISABLE:"disable", ENABLE:"enable", HIGHLIGHT:"highlight", UNHIGHLIGHT:"unhighlight", ACTIVATE:"activate", DEACTIVATE:"deactivate", SELECT:"select", UNSELECT:"unselect", CHECK:"check", UNCHECK:"uncheck", FOCUS:"focus", BLUR:"blur", OPEN:"open", CLOSE:"close", ENTER:"enter", LEAVE:"leave", ACTION:"action", CHANGE:"change"};
goog.ui.Component.Error = {NOT_SUPPORTED:"Method not supported", DECORATE_INVALID:"Invalid element to decorate", ALREADY_RENDERED:"Component already rendered", PARENT_UNABLE_TO_BE_SET:"Unable to set parent component", CHILD_INDEX_OUT_OF_BOUNDS:"Child component index out of bounds", NOT_OUR_CHILD:"Child is not in parent component", NOT_IN_DOCUMENT:"Operation not supported while component is not in document", STATE_INVALID:"Invalid component state"};
goog.ui.Component.State = {ALL:255, DISABLED:1, HOVER:2, ACTIVE:4, SELECTED:8, CHECKED:16, FOCUSED:32, OPENED:64};
goog.ui.Component.getStateTransitionEvent = function(state, isEntering) {
  switch(state) {
    case goog.ui.Component.State.DISABLED:
      return isEntering ? goog.ui.Component.EventType.DISABLE : goog.ui.Component.EventType.ENABLE;
    case goog.ui.Component.State.HOVER:
      return isEntering ? goog.ui.Component.EventType.HIGHLIGHT : goog.ui.Component.EventType.UNHIGHLIGHT;
    case goog.ui.Component.State.ACTIVE:
      return isEntering ? goog.ui.Component.EventType.ACTIVATE : goog.ui.Component.EventType.DEACTIVATE;
    case goog.ui.Component.State.SELECTED:
      return isEntering ? goog.ui.Component.EventType.SELECT : goog.ui.Component.EventType.UNSELECT;
    case goog.ui.Component.State.CHECKED:
      return isEntering ? goog.ui.Component.EventType.CHECK : goog.ui.Component.EventType.UNCHECK;
    case goog.ui.Component.State.FOCUSED:
      return isEntering ? goog.ui.Component.EventType.FOCUS : goog.ui.Component.EventType.BLUR;
    case goog.ui.Component.State.OPENED:
      return isEntering ? goog.ui.Component.EventType.OPEN : goog.ui.Component.EventType.CLOSE;
    default:
  }
  throw Error(goog.ui.Component.Error.STATE_INVALID);
};
goog.ui.Component.setDefaultRightToLeft = function(rightToLeft) {
  goog.ui.Component.defaultRightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.id_ = null;
goog.ui.Component.prototype.dom_;
goog.ui.Component.prototype.inDocument_ = false;
goog.ui.Component.prototype.element_ = null;
goog.ui.Component.prototype.googUiComponentHandler_;
goog.ui.Component.prototype.rightToLeft_ = null;
goog.ui.Component.prototype.model_ = null;
goog.ui.Component.prototype.parent_ = null;
goog.ui.Component.prototype.children_ = null;
goog.ui.Component.prototype.childIndex_ = null;
goog.ui.Component.prototype.wasDecorated_ = false;
goog.ui.Component.prototype.getId = function() {
  return this.id_ || (this.id_ = this.idGenerator_.getNextUniqueId())
};
goog.ui.Component.prototype.setId = function(id) {
  if(this.parent_ && this.parent_.childIndex_) {
    goog.object.remove(this.parent_.childIndex_, this.id_);
    goog.object.add(this.parent_.childIndex_, id, this)
  }
  this.id_ = id
};
goog.ui.Component.prototype.getElement = function() {
  return this.element_
};
goog.ui.Component.prototype.setElementInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.getElementsByClass = function(className) {
  return this.element_ ? this.dom_.getElementsByClass(className, this.element_) : []
};
goog.ui.Component.prototype.getElementByClass = function(className) {
  return this.element_ ? this.dom_.getElementByClass(className, this.element_) : null
};
goog.ui.Component.prototype.getHandler = function() {
  return this.googUiComponentHandler_ || (this.googUiComponentHandler_ = new goog.events.EventHandler(this))
};
goog.ui.Component.prototype.setParent = function(parent) {
  if(this == parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  if(parent && this.parent_ && this.id_ && this.parent_.getChild(this.id_) && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.PARENT_UNABLE_TO_BE_SET);
  }
  this.parent_ = parent;
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getParent = function() {
  return this.parent_
};
goog.ui.Component.prototype.setParentEventTarget = function(parent) {
  if(this.parent_ && this.parent_ != parent) {
    throw Error(goog.ui.Component.Error.NOT_SUPPORTED);
  }
  goog.ui.Component.superClass_.setParentEventTarget.call(this, parent)
};
goog.ui.Component.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Component.prototype.isInDocument = function() {
  return this.inDocument_
};
goog.ui.Component.prototype.createDom = function() {
  this.element_ = this.dom_.createElement("div")
};
goog.ui.Component.prototype.render = function(opt_parentElement) {
  this.render_(opt_parentElement)
};
goog.ui.Component.prototype.renderBefore = function(sibling) {
  this.render_(sibling.parentNode, sibling)
};
goog.ui.Component.prototype.render_ = function(opt_parentElement, opt_beforeNode) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(!this.element_) {
    this.createDom()
  }
  if(opt_parentElement) {
    opt_parentElement.insertBefore(this.element_, opt_beforeNode || null)
  }else {
    this.dom_.getDocument().body.appendChild(this.element_)
  }
  if(!this.parent_ || this.parent_.isInDocument()) {
    this.enterDocument()
  }
};
goog.ui.Component.prototype.decorate = function(element) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }else {
    if(element && this.canDecorate(element)) {
      this.wasDecorated_ = true;
      if(!this.dom_ || this.dom_.getDocument() != goog.dom.getOwnerDocument(element)) {
        this.dom_ = goog.dom.getDomHelper(element)
      }
      this.decorateInternal(element);
      this.enterDocument()
    }else {
      throw Error(goog.ui.Component.Error.DECORATE_INVALID);
    }
  }
};
goog.ui.Component.prototype.canDecorate = function(element) {
  return true
};
goog.ui.Component.prototype.wasDecorated = function() {
  return this.wasDecorated_
};
goog.ui.Component.prototype.decorateInternal = function(element) {
  this.element_ = element
};
goog.ui.Component.prototype.enterDocument = function() {
  this.inDocument_ = true;
  this.forEachChild(function(child) {
    if(!child.isInDocument() && child.getElement()) {
      child.enterDocument()
    }
  })
};
goog.ui.Component.prototype.exitDocument = function() {
  this.forEachChild(function(child) {
    if(child.isInDocument()) {
      child.exitDocument()
    }
  });
  if(this.googUiComponentHandler_) {
    this.googUiComponentHandler_.removeAll()
  }
  this.inDocument_ = false
};
goog.ui.Component.prototype.disposeInternal = function() {
  goog.ui.Component.superClass_.disposeInternal.call(this);
  if(this.inDocument_) {
    this.exitDocument()
  }
  if(this.googUiComponentHandler_) {
    this.googUiComponentHandler_.dispose();
    delete this.googUiComponentHandler_
  }
  this.forEachChild(function(child) {
    child.dispose()
  });
  if(!this.wasDecorated_ && this.element_) {
    goog.dom.removeNode(this.element_)
  }
  this.children_ = null;
  this.childIndex_ = null;
  this.element_ = null;
  this.model_ = null;
  this.parent_ = null
};
goog.ui.Component.prototype.makeId = function(idFragment) {
  return this.getId() + "." + idFragment
};
goog.ui.Component.prototype.makeIds = function(object) {
  var ids = {};
  for(var key in object) {
    ids[key] = this.makeId(object[key])
  }
  return ids
};
goog.ui.Component.prototype.getModel = function() {
  return this.model_
};
goog.ui.Component.prototype.setModel = function(obj) {
  this.model_ = obj
};
goog.ui.Component.prototype.getFragmentFromId = function(id) {
  return id.substring(this.getId().length + 1)
};
goog.ui.Component.prototype.getElementByFragment = function(idFragment) {
  if(!this.inDocument_) {
    throw Error(goog.ui.Component.Error.NOT_IN_DOCUMENT);
  }
  return this.dom_.getElement(this.makeId(idFragment))
};
goog.ui.Component.prototype.addChild = function(child, opt_render) {
  this.addChildAt(child, this.getChildCount(), opt_render)
};
goog.ui.Component.prototype.addChildAt = function(child, index, opt_render) {
  if(child.inDocument_ && (opt_render || !this.inDocument_)) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(index < 0 || index > this.getChildCount()) {
    throw Error(goog.ui.Component.Error.CHILD_INDEX_OUT_OF_BOUNDS);
  }
  if(!this.childIndex_ || !this.children_) {
    this.childIndex_ = {};
    this.children_ = []
  }
  if(child.getParent() == this) {
    goog.object.set(this.childIndex_, child.getId(), child);
    goog.array.remove(this.children_, child)
  }else {
    goog.object.add(this.childIndex_, child.getId(), child)
  }
  child.setParent(this);
  goog.array.insertAt(this.children_, child, index);
  if(child.inDocument_ && this.inDocument_ && child.getParent() == this) {
    var contentElement = this.getContentElement();
    contentElement.insertBefore(child.getElement(), contentElement.childNodes[index] || null)
  }else {
    if(opt_render) {
      if(!this.element_) {
        this.createDom()
      }
      var sibling = this.getChildAt(index + 1);
      child.render_(this.getContentElement(), sibling ? sibling.element_ : null)
    }else {
      if(this.inDocument_ && !child.inDocument_ && child.element_) {
        child.enterDocument()
      }
    }
  }
};
goog.ui.Component.prototype.getContentElement = function() {
  return this.element_
};
goog.ui.Component.prototype.isRightToLeft = function() {
  if(this.rightToLeft_ == null) {
    this.rightToLeft_ = goog.style.isRightToLeft(this.inDocument_ ? this.element_ : this.dom_.getDocument().body)
  }
  return this.rightToLeft_
};
goog.ui.Component.prototype.setRightToLeft = function(rightToLeft) {
  if(this.inDocument_) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.rightToLeft_ = rightToLeft
};
goog.ui.Component.prototype.hasChildren = function() {
  return!!this.children_ && this.children_.length != 0
};
goog.ui.Component.prototype.getChildCount = function() {
  return this.children_ ? this.children_.length : 0
};
goog.ui.Component.prototype.getChildIds = function() {
  var ids = [];
  this.forEachChild(function(child) {
    ids.push(child.getId())
  });
  return ids
};
goog.ui.Component.prototype.getChild = function(id) {
  return this.childIndex_ && id ? goog.object.get(this.childIndex_, id) || null : null
};
goog.ui.Component.prototype.getChildAt = function(index) {
  return this.children_ ? this.children_[index] || null : null
};
goog.ui.Component.prototype.forEachChild = function(f, opt_obj) {
  if(this.children_) {
    goog.array.forEach(this.children_, f, opt_obj)
  }
};
goog.ui.Component.prototype.indexOfChild = function(child) {
  return this.children_ && child ? goog.array.indexOf(this.children_, child) : -1
};
goog.ui.Component.prototype.removeChild = function(child, opt_unrender) {
  if(child) {
    var id = goog.isString(child) ? child : child.getId();
    child = this.getChild(id);
    if(id && child) {
      goog.object.remove(this.childIndex_, id);
      goog.array.remove(this.children_, child);
      if(opt_unrender) {
        child.exitDocument();
        if(child.element_) {
          goog.dom.removeNode(child.element_)
        }
      }
      child.setParent(null)
    }
  }
  if(!child) {
    throw Error(goog.ui.Component.Error.NOT_OUR_CHILD);
  }
  return child
};
goog.ui.Component.prototype.removeChildAt = function(index, opt_unrender) {
  return this.removeChild(this.getChildAt(index), opt_unrender)
};
goog.ui.Component.prototype.removeChildren = function(opt_unrender) {
  while(this.hasChildren()) {
    this.removeChildAt(0, opt_unrender)
  }
};
goog.provide("goog.ui.ControlContent");
goog.ui.ControlContent;
goog.provide("goog.ui.ControlRenderer");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.State");
goog.require("goog.dom.classes");
goog.require("goog.object");
goog.require("goog.style");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlContent");
goog.require("goog.userAgent");
goog.ui.ControlRenderer = function() {
};
goog.addSingletonGetter(goog.ui.ControlRenderer);
goog.ui.ControlRenderer.getCustomRenderer = function(ctor, cssClassName) {
  var renderer = new ctor;
  renderer.getCssClass = function() {
    return cssClassName
  };
  return renderer
};
goog.ui.ControlRenderer.CSS_CLASS = goog.getCssName("goog-control");
goog.ui.ControlRenderer.IE6_CLASS_COMBINATIONS = [];
goog.ui.ControlRenderer.ARIA_STATE_MAP_;
goog.ui.ControlRenderer.prototype.getAriaRole = function() {
  return undefined
};
goog.ui.ControlRenderer.prototype.createDom = function(control) {
  var element = control.getDomHelper().createDom("div", this.getClassNames(control).join(" "), control.getContent());
  this.setAriaStates(control, element);
  return element
};
goog.ui.ControlRenderer.prototype.getContentElement = function(element) {
  return element
};
goog.ui.ControlRenderer.prototype.enableClassName = function(control, className, enable) {
  var element = control.getElement ? control.getElement() : control;
  if(element) {
    if(goog.userAgent.IE && !goog.userAgent.isVersion("7")) {
      var combinedClasses = this.getAppliedCombinedClassNames_(goog.dom.classes.get(element), className);
      combinedClasses.push(className);
      var f = enable ? goog.dom.classes.add : goog.dom.classes.remove;
      goog.partial(f, element).apply(null, combinedClasses)
    }else {
      goog.dom.classes.enable(element, className, enable)
    }
  }
};
goog.ui.ControlRenderer.prototype.enableExtraClassName = function(control, className, enable) {
  this.enableClassName(control, className, enable)
};
goog.ui.ControlRenderer.prototype.canDecorate = function(element) {
  return true
};
goog.ui.ControlRenderer.prototype.decorate = function(control, element) {
  if(element.id) {
    control.setId(element.id)
  }
  var contentElem = this.getContentElement(element);
  if(contentElem && contentElem.firstChild) {
    control.setContentInternal(contentElem.firstChild.nextSibling ? goog.array.clone(contentElem.childNodes) : contentElem.firstChild)
  }else {
    control.setContentInternal(null)
  }
  var state = 0;
  var rendererClassName = this.getCssClass();
  var structuralClassName = this.getStructuralCssClass();
  var hasRendererClassName = false;
  var hasStructuralClassName = false;
  var hasCombinedClassName = false;
  var classNames = goog.dom.classes.get(element);
  goog.array.forEach(classNames, function(className) {
    if(!hasRendererClassName && className == rendererClassName) {
      hasRendererClassName = true;
      if(structuralClassName == rendererClassName) {
        hasStructuralClassName = true
      }
    }else {
      if(!hasStructuralClassName && className == structuralClassName) {
        hasStructuralClassName = true
      }else {
        state |= this.getStateFromClass(className)
      }
    }
  }, this);
  control.setStateInternal(state);
  if(!hasRendererClassName) {
    classNames.push(rendererClassName);
    if(structuralClassName == rendererClassName) {
      hasStructuralClassName = true
    }
  }
  if(!hasStructuralClassName) {
    classNames.push(structuralClassName)
  }
  var extraClassNames = control.getExtraClassNames();
  if(extraClassNames) {
    classNames.push.apply(classNames, extraClassNames)
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion("7")) {
    var combinedClasses = this.getAppliedCombinedClassNames_(classNames);
    if(combinedClasses.length > 0) {
      classNames.push.apply(classNames, combinedClasses);
      hasCombinedClassName = true
    }
  }
  if(!hasRendererClassName || !hasStructuralClassName || extraClassNames || hasCombinedClassName) {
    goog.dom.classes.set(element, classNames.join(" "))
  }
  this.setAriaStates(control, element);
  return element
};
goog.ui.ControlRenderer.prototype.initializeDom = function(control) {
  if(control.isRightToLeft()) {
    this.setRightToLeft(control.getElement(), true)
  }
  if(control.isEnabled()) {
    this.setFocusable(control, control.isVisible())
  }
};
goog.ui.ControlRenderer.prototype.setAriaRole = function(element, opt_preferredRole) {
  var ariaRole = opt_preferredRole || this.getAriaRole();
  if(ariaRole) {
    goog.dom.a11y.setRole(element, ariaRole)
  }
};
goog.ui.ControlRenderer.prototype.setAriaStates = function(control, element) {
  goog.asserts.assert(control);
  goog.asserts.assert(element);
  if(!control.isEnabled()) {
    this.updateAriaState(element, goog.ui.Component.State.DISABLED, true)
  }
  if(control.isSelected()) {
    this.updateAriaState(element, goog.ui.Component.State.SELECTED, true)
  }
  if(control.isSupportedState(goog.ui.Component.State.CHECKED)) {
    this.updateAriaState(element, goog.ui.Component.State.CHECKED, control.isChecked())
  }
  if(control.isSupportedState(goog.ui.Component.State.OPENED)) {
    this.updateAriaState(element, goog.ui.Component.State.OPENED, control.isOpen())
  }
};
goog.ui.ControlRenderer.prototype.setAllowTextSelection = function(element, allow) {
  goog.style.setUnselectable(element, !allow, !goog.userAgent.IE && !goog.userAgent.OPERA)
};
goog.ui.ControlRenderer.prototype.setRightToLeft = function(element, rightToLeft) {
  this.enableClassName(element, goog.getCssName(this.getStructuralCssClass(), "rtl"), rightToLeft)
};
goog.ui.ControlRenderer.prototype.isFocusable = function(control) {
  var keyTarget;
  if(control.isSupportedState(goog.ui.Component.State.FOCUSED) && (keyTarget = control.getKeyEventTarget())) {
    return goog.dom.isFocusableTabIndex(keyTarget)
  }
  return false
};
goog.ui.ControlRenderer.prototype.setFocusable = function(control, focusable) {
  var keyTarget;
  if(control.isSupportedState(goog.ui.Component.State.FOCUSED) && (keyTarget = control.getKeyEventTarget())) {
    if(!focusable && control.isFocused()) {
      try {
        keyTarget.blur()
      }catch(e) {
      }
      if(control.isFocused()) {
        control.handleBlur(null)
      }
    }
    if(goog.dom.isFocusableTabIndex(keyTarget) != focusable) {
      goog.dom.setFocusableTabIndex(keyTarget, focusable)
    }
  }
};
goog.ui.ControlRenderer.prototype.setVisible = function(element, visible) {
  goog.style.showElement(element, visible)
};
goog.ui.ControlRenderer.prototype.setState = function(control, state, enable) {
  var element = control.getElement();
  if(element) {
    var className = this.getClassForState(state);
    if(className) {
      this.enableClassName(control, className, enable)
    }
    this.updateAriaState(element, state, enable)
  }
};
goog.ui.ControlRenderer.prototype.updateAriaState = function(element, state, enable) {
  if(!goog.ui.ControlRenderer.ARIA_STATE_MAP_) {
    goog.ui.ControlRenderer.ARIA_STATE_MAP_ = goog.object.create(goog.ui.Component.State.DISABLED, goog.dom.a11y.State.DISABLED, goog.ui.Component.State.SELECTED, goog.dom.a11y.State.SELECTED, goog.ui.Component.State.CHECKED, goog.dom.a11y.State.CHECKED, goog.ui.Component.State.OPENED, goog.dom.a11y.State.EXPANDED)
  }
  var ariaState = goog.ui.ControlRenderer.ARIA_STATE_MAP_[state];
  if(ariaState) {
    goog.dom.a11y.setState(element, ariaState, enable)
  }
};
goog.ui.ControlRenderer.prototype.setContent = function(element, content) {
  var contentElem = this.getContentElement(element);
  if(contentElem) {
    goog.dom.removeChildren(contentElem);
    if(content) {
      if(goog.isString(content)) {
        goog.dom.setTextContent(contentElem, content)
      }else {
        var childHandler = function(child) {
          if(child) {
            var doc = goog.dom.getOwnerDocument(contentElem);
            contentElem.appendChild(goog.isString(child) ? doc.createTextNode(child) : child)
          }
        };
        if(goog.isArray(content)) {
          goog.array.forEach(content, childHandler)
        }else {
          if(goog.isArrayLike(content) && !("nodeType" in content)) {
            goog.array.forEach(goog.array.clone(content), childHandler)
          }else {
            childHandler(content)
          }
        }
      }
    }
  }
};
goog.ui.ControlRenderer.prototype.getKeyEventTarget = function(control) {
  return control.getElement()
};
goog.ui.ControlRenderer.prototype.getCssClass = function() {
  return goog.ui.ControlRenderer.CSS_CLASS
};
goog.ui.ControlRenderer.prototype.getIe6ClassCombinations = function() {
  return[]
};
goog.ui.ControlRenderer.prototype.getStructuralCssClass = function() {
  return this.getCssClass()
};
goog.ui.ControlRenderer.prototype.getClassNames = function(control) {
  var cssClass = this.getCssClass();
  var classNames = [cssClass];
  var structuralCssClass = this.getStructuralCssClass();
  if(structuralCssClass != cssClass) {
    classNames.push(structuralCssClass)
  }
  var classNamesForState = this.getClassNamesForState(control.getState());
  classNames.push.apply(classNames, classNamesForState);
  var extraClassNames = control.getExtraClassNames();
  if(extraClassNames) {
    classNames.push.apply(classNames, extraClassNames)
  }
  if(goog.userAgent.IE && !goog.userAgent.isVersion("7")) {
    classNames.push.apply(classNames, this.getAppliedCombinedClassNames_(classNames))
  }
  return classNames
};
goog.ui.ControlRenderer.prototype.getAppliedCombinedClassNames_ = function(classes, opt_includedClass) {
  var toAdd = [];
  if(opt_includedClass) {
    classes = classes.concat([opt_includedClass])
  }
  goog.array.forEach(this.getIe6ClassCombinations(), function(combo) {
    if(goog.array.every(combo, goog.partial(goog.array.contains, classes)) && (!opt_includedClass || goog.array.contains(combo, opt_includedClass))) {
      toAdd.push(combo.join("_"))
    }
  });
  return toAdd
};
goog.ui.ControlRenderer.prototype.getClassNamesForState = function(state) {
  var classNames = [];
  while(state) {
    var mask = state & -state;
    classNames.push(this.getClassForState(mask));
    state &= ~mask
  }
  return classNames
};
goog.ui.ControlRenderer.prototype.getClassForState = function(state) {
  if(!this.classByState_) {
    this.createClassByStateMap_()
  }
  return this.classByState_[state]
};
goog.ui.ControlRenderer.prototype.getStateFromClass = function(className) {
  if(!this.stateByClass_) {
    this.createStateByClassMap_()
  }
  var state = parseInt(this.stateByClass_[className], 10);
  return isNaN(state) ? 0 : state
};
goog.ui.ControlRenderer.prototype.createClassByStateMap_ = function() {
  var baseClass = this.getStructuralCssClass();
  this.classByState_ = goog.object.create(goog.ui.Component.State.DISABLED, goog.getCssName(baseClass, "disabled"), goog.ui.Component.State.HOVER, goog.getCssName(baseClass, "hover"), goog.ui.Component.State.ACTIVE, goog.getCssName(baseClass, "active"), goog.ui.Component.State.SELECTED, goog.getCssName(baseClass, "selected"), goog.ui.Component.State.CHECKED, goog.getCssName(baseClass, "checked"), goog.ui.Component.State.FOCUSED, goog.getCssName(baseClass, "focused"), goog.ui.Component.State.OPENED, 
  goog.getCssName(baseClass, "open"))
};
goog.ui.ControlRenderer.prototype.createStateByClassMap_ = function() {
  if(!this.classByState_) {
    this.createClassByStateMap_()
  }
  this.stateByClass_ = goog.object.transpose(this.classByState_)
};
goog.provide("goog.ui.ButtonRenderer");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.Role");
goog.require("goog.dom.a11y.State");
goog.require("goog.ui.ButtonSide");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlRenderer");
goog.ui.ButtonRenderer = function() {
  goog.ui.ControlRenderer.call(this)
};
goog.inherits(goog.ui.ButtonRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.ButtonRenderer);
goog.ui.ButtonRenderer.CSS_CLASS = goog.getCssName("goog-button");
goog.ui.ButtonRenderer.prototype.getAriaRole = function() {
  return goog.dom.a11y.Role.BUTTON
};
goog.ui.ButtonRenderer.prototype.updateAriaState = function(element, state, enable) {
  if(state == goog.ui.Component.State.CHECKED) {
    goog.dom.a11y.setState(element, goog.dom.a11y.State.PRESSED, enable)
  }else {
    goog.ui.ButtonRenderer.superClass_.updateAriaState.call(this, element, state, enable)
  }
};
goog.ui.ButtonRenderer.prototype.createDom = function(button) {
  var element = goog.ui.ButtonRenderer.superClass_.createDom.call(this, button);
  var tooltip = button.getTooltip();
  if(tooltip) {
    this.setTooltip(element, tooltip)
  }
  var value = button.getValue();
  if(value) {
    this.setValue(element, value)
  }
  if(button.isSupportedState(goog.ui.Component.State.CHECKED)) {
    this.updateAriaState(element, goog.ui.Component.State.CHECKED, button.isChecked())
  }
  return element
};
goog.ui.ButtonRenderer.prototype.decorate = function(button, element) {
  element = goog.ui.ButtonRenderer.superClass_.decorate.call(this, button, element);
  button.setValueInternal(this.getValue(element));
  button.setTooltipInternal(this.getTooltip(element));
  if(button.isSupportedState(goog.ui.Component.State.CHECKED)) {
    this.updateAriaState(element, goog.ui.Component.State.CHECKED, button.isChecked())
  }
  return element
};
goog.ui.ButtonRenderer.prototype.getValue = goog.nullFunction;
goog.ui.ButtonRenderer.prototype.setValue = goog.nullFunction;
goog.ui.ButtonRenderer.prototype.getTooltip = function(element) {
  return element.title
};
goog.ui.ButtonRenderer.prototype.setTooltip = function(element, tooltip) {
  if(element) {
    element.title = tooltip || ""
  }
};
goog.ui.ButtonRenderer.prototype.setCollapsed = function(button, sides) {
  var isRtl = button.isRightToLeft();
  var collapseLeftClassName = goog.getCssName(this.getStructuralCssClass(), "collapse-left");
  var collapseRightClassName = goog.getCssName(this.getStructuralCssClass(), "collapse-right");
  button.enableClassName(isRtl ? collapseRightClassName : collapseLeftClassName, !!(sides & goog.ui.ButtonSide.START));
  button.enableClassName(isRtl ? collapseLeftClassName : collapseRightClassName, !!(sides & goog.ui.ButtonSide.END))
};
goog.ui.ButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.ButtonRenderer.CSS_CLASS
};
goog.provide("goog.ui.INLINE_BLOCK_CLASSNAME");
goog.ui.INLINE_BLOCK_CLASSNAME = goog.getCssName("goog-inline-block");
goog.provide("goog.ui.CustomButtonRenderer");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.string");
goog.require("goog.ui.ButtonRenderer");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.INLINE_BLOCK_CLASSNAME");
goog.ui.CustomButtonRenderer = function() {
  goog.ui.ButtonRenderer.call(this)
};
goog.inherits(goog.ui.CustomButtonRenderer, goog.ui.ButtonRenderer);
goog.addSingletonGetter(goog.ui.CustomButtonRenderer);
goog.ui.CustomButtonRenderer.CSS_CLASS = goog.getCssName("goog-custom-button");
goog.ui.CustomButtonRenderer.prototype.createDom = function(button) {
  var classNames = this.getClassNames(button);
  var attributes = {"class":goog.ui.INLINE_BLOCK_CLASSNAME + " " + classNames.join(" "), "title":button.getTooltip() || ""};
  var buttonElement = button.getDomHelper().createDom("div", attributes, this.createButton(button.getContent(), button.getDomHelper()));
  this.setAriaStates(button, buttonElement);
  return buttonElement
};
goog.ui.CustomButtonRenderer.prototype.getAriaRole = function() {
  return goog.dom.a11y.Role.BUTTON
};
goog.ui.CustomButtonRenderer.prototype.setAriaStates = function(button, element) {
  goog.asserts.assert(button);
  goog.asserts.assert(element);
  if(!button.isEnabled()) {
    this.updateAriaState(element, goog.ui.Component.State.DISABLED, true)
  }
  if(button.isSelected()) {
    this.updateAriaState(element, goog.ui.Component.State.SELECTED, true)
  }
  if(button.isSupportedState(goog.ui.Component.State.CHECKED)) {
    this.updateAriaState(element, goog.ui.Component.State.CHECKED, true)
  }
  if(button.isOpen()) {
    this.updateAriaState(element, goog.ui.Component.State.OPENED, true)
  }
};
goog.ui.CustomButtonRenderer.prototype.getContentElement = function(element) {
  return element && element.firstChild.firstChild
};
goog.ui.CustomButtonRenderer.prototype.createButton = function(content, dom) {
  return dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + goog.getCssName(this.getCssClass(), "outer-box"), dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + goog.getCssName(this.getCssClass(), "inner-box"), content))
};
goog.ui.CustomButtonRenderer.prototype.canDecorate = function(element) {
  return element.tagName == "DIV"
};
goog.ui.CustomButtonRenderer.prototype.hasBoxStructure = function(button, element) {
  var outer = button.getDomHelper().getFirstElementChild(element);
  if(outer && outer.className.indexOf(goog.getCssName(this.getCssClass(), "outer-box")) != -1) {
    var inner = button.getDomHelper().getFirstElementChild(outer);
    if(inner && inner.className.indexOf(goog.getCssName(this.getCssClass(), "inner-box")) != -1) {
      return true
    }
  }
  return false
};
goog.ui.CustomButtonRenderer.prototype.decorate = function(button, element) {
  goog.ui.CustomButtonRenderer.trimTextNodes_(element, true);
  goog.ui.CustomButtonRenderer.trimTextNodes_(element, false);
  if(!this.hasBoxStructure(button, element)) {
    element.appendChild(this.createButton(element.childNodes, button.getDomHelper()))
  }
  goog.dom.classes.add(element, goog.ui.INLINE_BLOCK_CLASSNAME, this.getCssClass());
  return goog.ui.CustomButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.CustomButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.CustomButtonRenderer.CSS_CLASS
};
goog.ui.CustomButtonRenderer.trimTextNodes_ = function(element, fromStart) {
  if(element) {
    var node = fromStart ? element.firstChild : element.lastChild, next;
    while(node && node.parentNode == element) {
      next = fromStart ? node.nextSibling : node.previousSibling;
      if(node.nodeType == goog.dom.NodeType.TEXT) {
        var text = node.nodeValue;
        if(goog.string.trim(text) == "") {
          element.removeChild(node)
        }else {
          node.nodeValue = fromStart ? goog.string.trimLeft(text) : goog.string.trimRight(text);
          break
        }
      }else {
        break
      }
      node = next
    }
  }
};
goog.provide("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyCodes = {MAC_ENTER:3, BACKSPACE:8, TAB:9, NUM_CENTER:12, ENTER:13, SHIFT:16, CTRL:17, ALT:18, PAUSE:19, CAPS_LOCK:20, ESC:27, SPACE:32, PAGE_UP:33, PAGE_DOWN:34, END:35, HOME:36, LEFT:37, UP:38, RIGHT:39, DOWN:40, PRINT_SCREEN:44, INSERT:45, DELETE:46, ZERO:48, ONE:49, TWO:50, THREE:51, FOUR:52, FIVE:53, SIX:54, SEVEN:55, EIGHT:56, NINE:57, FF_SEMICOLON:59, QUESTION_MARK:63, A:65, B:66, C:67, D:68, E:69, F:70, G:71, H:72, I:73, J:74, K:75, L:76, M:77, N:78, O:79, P:80, Q:81, R:82, 
S:83, T:84, U:85, V:86, W:87, X:88, Y:89, Z:90, META:91, WIN_KEY_RIGHT:92, CONTEXT_MENU:93, NUM_ZERO:96, NUM_ONE:97, NUM_TWO:98, NUM_THREE:99, NUM_FOUR:100, NUM_FIVE:101, NUM_SIX:102, NUM_SEVEN:103, NUM_EIGHT:104, NUM_NINE:105, NUM_MULTIPLY:106, NUM_PLUS:107, NUM_MINUS:109, NUM_PERIOD:110, NUM_DIVISION:111, F1:112, F2:113, F3:114, F4:115, F5:116, F6:117, F7:118, F8:119, F9:120, F10:121, F11:122, F12:123, NUMLOCK:144, SCROLL_LOCK:145, FIRST_MEDIA_KEY:166, LAST_MEDIA_KEY:183, SEMICOLON:186, DASH:189, 
EQUALS:187, COMMA:188, PERIOD:190, SLASH:191, APOSTROPHE:192, TILDE:192, SINGLE_QUOTE:222, OPEN_SQUARE_BRACKET:219, BACKSLASH:220, CLOSE_SQUARE_BRACKET:221, WIN_KEY:224, MAC_FF_META:224, WIN_IME:229, PHANTOM:255};
goog.events.KeyCodes.isTextModifyingKeyEvent = function(e) {
  if(e.altKey && !e.ctrlKey || e.metaKey || e.keyCode >= goog.events.KeyCodes.F1 && e.keyCode <= goog.events.KeyCodes.F12) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ALT:
    ;
    case goog.events.KeyCodes.CAPS_LOCK:
    ;
    case goog.events.KeyCodes.CONTEXT_MENU:
    ;
    case goog.events.KeyCodes.CTRL:
    ;
    case goog.events.KeyCodes.DOWN:
    ;
    case goog.events.KeyCodes.END:
    ;
    case goog.events.KeyCodes.ESC:
    ;
    case goog.events.KeyCodes.HOME:
    ;
    case goog.events.KeyCodes.INSERT:
    ;
    case goog.events.KeyCodes.LEFT:
    ;
    case goog.events.KeyCodes.MAC_FF_META:
    ;
    case goog.events.KeyCodes.META:
    ;
    case goog.events.KeyCodes.NUMLOCK:
    ;
    case goog.events.KeyCodes.NUM_CENTER:
    ;
    case goog.events.KeyCodes.PAGE_DOWN:
    ;
    case goog.events.KeyCodes.PAGE_UP:
    ;
    case goog.events.KeyCodes.PAUSE:
    ;
    case goog.events.KeyCodes.PHANTOM:
    ;
    case goog.events.KeyCodes.PRINT_SCREEN:
    ;
    case goog.events.KeyCodes.RIGHT:
    ;
    case goog.events.KeyCodes.SCROLL_LOCK:
    ;
    case goog.events.KeyCodes.SHIFT:
    ;
    case goog.events.KeyCodes.UP:
    ;
    case goog.events.KeyCodes.WIN_KEY:
    ;
    case goog.events.KeyCodes.WIN_KEY_RIGHT:
      return false;
    default:
      return e.keyCode < goog.events.KeyCodes.FIRST_MEDIA_KEY || e.keyCode > goog.events.KeyCodes.LAST_MEDIA_KEY
  }
};
goog.events.KeyCodes.firesKeyPressEvent = function(keyCode, opt_heldKeyCode, opt_shiftKey, opt_ctrlKey, opt_altKey) {
  if(!goog.userAgent.IE && !(goog.userAgent.WEBKIT && goog.userAgent.isVersion("525"))) {
    return true
  }
  if(goog.userAgent.MAC && opt_altKey) {
    return goog.events.KeyCodes.isCharacterKey(keyCode)
  }
  if(opt_altKey && !opt_ctrlKey) {
    return false
  }
  if(!opt_shiftKey && (opt_heldKeyCode == goog.events.KeyCodes.CTRL || opt_heldKeyCode == goog.events.KeyCodes.ALT)) {
    return false
  }
  if(goog.userAgent.IE && opt_ctrlKey && opt_heldKeyCode == keyCode) {
    return false
  }
  switch(keyCode) {
    case goog.events.KeyCodes.ENTER:
      return!(goog.userAgent.IE && goog.userAgent.isDocumentMode(9));
    case goog.events.KeyCodes.ESC:
      return!goog.userAgent.WEBKIT
  }
  return goog.events.KeyCodes.isCharacterKey(keyCode)
};
goog.events.KeyCodes.isCharacterKey = function(keyCode) {
  if(keyCode >= goog.events.KeyCodes.ZERO && keyCode <= goog.events.KeyCodes.NINE) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.NUM_ZERO && keyCode <= goog.events.KeyCodes.NUM_MULTIPLY) {
    return true
  }
  if(keyCode >= goog.events.KeyCodes.A && keyCode <= goog.events.KeyCodes.Z) {
    return true
  }
  if(goog.userAgent.WEBKIT && keyCode == 0) {
    return true
  }
  switch(keyCode) {
    case goog.events.KeyCodes.SPACE:
    ;
    case goog.events.KeyCodes.QUESTION_MARK:
    ;
    case goog.events.KeyCodes.NUM_PLUS:
    ;
    case goog.events.KeyCodes.NUM_MINUS:
    ;
    case goog.events.KeyCodes.NUM_PERIOD:
    ;
    case goog.events.KeyCodes.NUM_DIVISION:
    ;
    case goog.events.KeyCodes.SEMICOLON:
    ;
    case goog.events.KeyCodes.FF_SEMICOLON:
    ;
    case goog.events.KeyCodes.DASH:
    ;
    case goog.events.KeyCodes.EQUALS:
    ;
    case goog.events.KeyCodes.COMMA:
    ;
    case goog.events.KeyCodes.PERIOD:
    ;
    case goog.events.KeyCodes.SLASH:
    ;
    case goog.events.KeyCodes.APOSTROPHE:
    ;
    case goog.events.KeyCodes.SINGLE_QUOTE:
    ;
    case goog.events.KeyCodes.OPEN_SQUARE_BRACKET:
    ;
    case goog.events.KeyCodes.BACKSLASH:
    ;
    case goog.events.KeyCodes.CLOSE_SQUARE_BRACKET:
      return true;
    default:
      return false
  }
};
goog.provide("goog.events.KeyEvent");
goog.provide("goog.events.KeyHandler");
goog.provide("goog.events.KeyHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.userAgent");
goog.events.KeyHandler = function(opt_element, opt_capture) {
  goog.events.EventTarget.call(this);
  if(opt_element) {
    this.attach(opt_element, opt_capture)
  }
};
goog.inherits(goog.events.KeyHandler, goog.events.EventTarget);
goog.events.KeyHandler.prototype.element_ = null;
goog.events.KeyHandler.prototype.keyPressKey_ = null;
goog.events.KeyHandler.prototype.keyDownKey_ = null;
goog.events.KeyHandler.prototype.keyUpKey_ = null;
goog.events.KeyHandler.prototype.lastKey_ = -1;
goog.events.KeyHandler.prototype.keyCode_ = -1;
goog.events.KeyHandler.EventType = {KEY:"key"};
goog.events.KeyHandler.safariKey_ = {3:goog.events.KeyCodes.ENTER, 12:goog.events.KeyCodes.NUMLOCK, 63232:goog.events.KeyCodes.UP, 63233:goog.events.KeyCodes.DOWN, 63234:goog.events.KeyCodes.LEFT, 63235:goog.events.KeyCodes.RIGHT, 63236:goog.events.KeyCodes.F1, 63237:goog.events.KeyCodes.F2, 63238:goog.events.KeyCodes.F3, 63239:goog.events.KeyCodes.F4, 63240:goog.events.KeyCodes.F5, 63241:goog.events.KeyCodes.F6, 63242:goog.events.KeyCodes.F7, 63243:goog.events.KeyCodes.F8, 63244:goog.events.KeyCodes.F9, 
63245:goog.events.KeyCodes.F10, 63246:goog.events.KeyCodes.F11, 63247:goog.events.KeyCodes.F12, 63248:goog.events.KeyCodes.PRINT_SCREEN, 63272:goog.events.KeyCodes.DELETE, 63273:goog.events.KeyCodes.HOME, 63275:goog.events.KeyCodes.END, 63276:goog.events.KeyCodes.PAGE_UP, 63277:goog.events.KeyCodes.PAGE_DOWN, 63289:goog.events.KeyCodes.NUMLOCK, 63302:goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.keyIdentifier_ = {"Up":goog.events.KeyCodes.UP, "Down":goog.events.KeyCodes.DOWN, "Left":goog.events.KeyCodes.LEFT, "Right":goog.events.KeyCodes.RIGHT, "Enter":goog.events.KeyCodes.ENTER, "F1":goog.events.KeyCodes.F1, "F2":goog.events.KeyCodes.F2, "F3":goog.events.KeyCodes.F3, "F4":goog.events.KeyCodes.F4, "F5":goog.events.KeyCodes.F5, "F6":goog.events.KeyCodes.F6, "F7":goog.events.KeyCodes.F7, "F8":goog.events.KeyCodes.F8, "F9":goog.events.KeyCodes.F9, "F10":goog.events.KeyCodes.F10, 
"F11":goog.events.KeyCodes.F11, "F12":goog.events.KeyCodes.F12, "U+007F":goog.events.KeyCodes.DELETE, "Home":goog.events.KeyCodes.HOME, "End":goog.events.KeyCodes.END, "PageUp":goog.events.KeyCodes.PAGE_UP, "PageDown":goog.events.KeyCodes.PAGE_DOWN, "Insert":goog.events.KeyCodes.INSERT};
goog.events.KeyHandler.mozKeyCodeToKeyCodeMap_ = {61:187, 59:186};
goog.events.KeyHandler.USES_KEYDOWN_ = goog.userAgent.IE || goog.userAgent.WEBKIT && goog.userAgent.isVersion("525");
goog.events.KeyHandler.prototype.handleKeyDown_ = function(e) {
  if(goog.userAgent.WEBKIT && (this.lastKey_ == goog.events.KeyCodes.CTRL && !e.ctrlKey || this.lastKey_ == goog.events.KeyCodes.ALT && !e.altKey)) {
    this.lastKey_ = -1;
    this.keyCode_ = -1
  }
  if(goog.events.KeyHandler.USES_KEYDOWN_ && !goog.events.KeyCodes.firesKeyPressEvent(e.keyCode, this.lastKey_, e.shiftKey, e.ctrlKey, e.altKey)) {
    this.handleEvent(e)
  }else {
    if(goog.userAgent.GECKO && e.keyCode in goog.events.KeyHandler.mozKeyCodeToKeyCodeMap_) {
      this.keyCode_ = goog.events.KeyHandler.mozKeyCodeToKeyCodeMap_[e.keyCode]
    }else {
      this.keyCode_ = e.keyCode
    }
  }
};
goog.events.KeyHandler.prototype.handleKeyup_ = function(e) {
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var keyCode, charCode;
  if(goog.userAgent.IE && e.type == goog.events.EventType.KEYPRESS) {
    keyCode = this.keyCode_;
    charCode = keyCode != goog.events.KeyCodes.ENTER && keyCode != goog.events.KeyCodes.ESC ? be.keyCode : 0
  }else {
    if(goog.userAgent.WEBKIT && e.type == goog.events.EventType.KEYPRESS) {
      keyCode = this.keyCode_;
      charCode = be.charCode >= 0 && be.charCode < 63232 && goog.events.KeyCodes.isCharacterKey(keyCode) ? be.charCode : 0
    }else {
      if(goog.userAgent.OPERA) {
        keyCode = this.keyCode_;
        charCode = goog.events.KeyCodes.isCharacterKey(keyCode) ? be.keyCode : 0
      }else {
        keyCode = be.keyCode || this.keyCode_;
        charCode = be.charCode || 0;
        if(goog.userAgent.MAC && charCode == goog.events.KeyCodes.QUESTION_MARK && !keyCode) {
          keyCode = goog.events.KeyCodes.SLASH
        }
      }
    }
  }
  var key = keyCode;
  var keyIdentifier = be.keyIdentifier;
  if(keyCode) {
    if(keyCode >= 63232 && keyCode in goog.events.KeyHandler.safariKey_) {
      key = goog.events.KeyHandler.safariKey_[keyCode]
    }else {
      if(keyCode == 25 && e.shiftKey) {
        key = 9
      }
    }
  }else {
    if(keyIdentifier && keyIdentifier in goog.events.KeyHandler.keyIdentifier_) {
      key = goog.events.KeyHandler.keyIdentifier_[keyIdentifier]
    }
  }
  var repeat = key == this.lastKey_;
  this.lastKey_ = key;
  var event = new goog.events.KeyEvent(key, charCode, repeat, be);
  try {
    this.dispatchEvent(event)
  }finally {
    event.dispose()
  }
};
goog.events.KeyHandler.prototype.getElement = function() {
  return this.element_
};
goog.events.KeyHandler.prototype.attach = function(element, opt_capture) {
  if(this.keyUpKey_) {
    this.detach()
  }
  this.element_ = element;
  this.keyPressKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYPRESS, this, opt_capture);
  this.keyDownKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYDOWN, this.handleKeyDown_, opt_capture, this);
  this.keyUpKey_ = goog.events.listen(this.element_, goog.events.EventType.KEYUP, this.handleKeyup_, opt_capture, this)
};
goog.events.KeyHandler.prototype.detach = function() {
  if(this.keyPressKey_) {
    goog.events.unlistenByKey(this.keyPressKey_);
    goog.events.unlistenByKey(this.keyDownKey_);
    goog.events.unlistenByKey(this.keyUpKey_);
    this.keyPressKey_ = null;
    this.keyDownKey_ = null;
    this.keyUpKey_ = null
  }
  this.element_ = null;
  this.lastKey_ = -1;
  this.keyCode_ = -1
};
goog.events.KeyHandler.prototype.disposeInternal = function() {
  goog.events.KeyHandler.superClass_.disposeInternal.call(this);
  this.detach()
};
goog.events.KeyEvent = function(keyCode, charCode, repeat, browserEvent) {
  goog.events.BrowserEvent.call(this, browserEvent);
  this.type = goog.events.KeyHandler.EventType.KEY;
  this.keyCode = keyCode;
  this.charCode = charCode;
  this.repeat = repeat
};
goog.inherits(goog.events.KeyEvent, goog.events.BrowserEvent);
goog.provide("goog.ui.registry");
goog.require("goog.dom.classes");
goog.ui.registry.getDefaultRenderer = function(componentCtor) {
  var key;
  var rendererCtor;
  while(componentCtor) {
    key = goog.getUid(componentCtor);
    if(rendererCtor = goog.ui.registry.defaultRenderers_[key]) {
      break
    }
    componentCtor = componentCtor.superClass_ ? componentCtor.superClass_.constructor : null
  }
  if(rendererCtor) {
    return goog.isFunction(rendererCtor.getInstance) ? rendererCtor.getInstance() : new rendererCtor
  }
  return null
};
goog.ui.registry.setDefaultRenderer = function(componentCtor, rendererCtor) {
  if(!goog.isFunction(componentCtor)) {
    throw Error("Invalid component class " + componentCtor);
  }
  if(!goog.isFunction(rendererCtor)) {
    throw Error("Invalid renderer class " + rendererCtor);
  }
  var key = goog.getUid(componentCtor);
  goog.ui.registry.defaultRenderers_[key] = rendererCtor
};
goog.ui.registry.getDecoratorByClassName = function(className) {
  return className in goog.ui.registry.decoratorFunctions_ ? goog.ui.registry.decoratorFunctions_[className]() : null
};
goog.ui.registry.setDecoratorByClassName = function(className, decoratorFn) {
  if(!className) {
    throw Error("Invalid class name " + className);
  }
  if(!goog.isFunction(decoratorFn)) {
    throw Error("Invalid decorator function " + decoratorFn);
  }
  goog.ui.registry.decoratorFunctions_[className] = decoratorFn
};
goog.ui.registry.getDecorator = function(element) {
  var decorator;
  var classNames = goog.dom.classes.get(element);
  for(var i = 0, len = classNames.length;i < len;i++) {
    if(decorator = goog.ui.registry.getDecoratorByClassName(classNames[i])) {
      return decorator
    }
  }
  return null
};
goog.ui.registry.reset = function() {
  goog.ui.registry.defaultRenderers_ = {};
  goog.ui.registry.decoratorFunctions_ = {}
};
goog.ui.registry.defaultRenderers_ = {};
goog.ui.registry.decoratorFunctions_ = {};
goog.provide("goog.ui.decorate");
goog.require("goog.ui.registry");
goog.ui.decorate = function(element) {
  var decorator = goog.ui.registry.getDecorator(element);
  if(decorator) {
    decorator.decorate(element)
  }
  return decorator
};
goog.provide("goog.ui.Control");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.events.KeyHandler.EventType");
goog.require("goog.string");
goog.require("goog.ui.Component");
goog.require("goog.ui.Component.Error");
goog.require("goog.ui.Component.EventType");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.ControlRenderer");
goog.require("goog.ui.decorate");
goog.require("goog.ui.registry");
goog.require("goog.userAgent");
goog.ui.Control = function(content, opt_renderer, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.renderer_ = opt_renderer || goog.ui.registry.getDefaultRenderer(this.constructor);
  this.setContentInternal(content)
};
goog.inherits(goog.ui.Control, goog.ui.Component);
goog.ui.Control.registerDecorator = goog.ui.registry.setDecoratorByClassName;
goog.ui.Control.getDecorator = goog.ui.registry.getDecorator;
goog.ui.Control.decorate = goog.ui.decorate;
goog.ui.Control.prototype.renderer_;
goog.ui.Control.prototype.content_ = null;
goog.ui.Control.prototype.state_ = 0;
goog.ui.Control.prototype.supportedStates_ = goog.ui.Component.State.DISABLED | goog.ui.Component.State.HOVER | goog.ui.Component.State.ACTIVE | goog.ui.Component.State.FOCUSED;
goog.ui.Control.prototype.autoStates_ = goog.ui.Component.State.ALL;
goog.ui.Control.prototype.statesWithTransitionEvents_ = 0;
goog.ui.Control.prototype.visible_ = true;
goog.ui.Control.prototype.keyHandler_;
goog.ui.Control.prototype.extraClassNames_ = null;
goog.ui.Control.prototype.handleMouseEvents_ = true;
goog.ui.Control.prototype.allowTextSelection_ = false;
goog.ui.Control.prototype.preferredAriaRole_ = null;
goog.ui.Control.prototype.isHandleMouseEvents = function() {
  return this.handleMouseEvents_
};
goog.ui.Control.prototype.setHandleMouseEvents = function(enable) {
  if(this.isInDocument() && enable != this.handleMouseEvents_) {
    this.enableMouseEventHandling_(enable)
  }
  this.handleMouseEvents_ = enable
};
goog.ui.Control.prototype.getKeyEventTarget = function() {
  return this.renderer_.getKeyEventTarget(this)
};
goog.ui.Control.prototype.getKeyHandler = function() {
  return this.keyHandler_ || (this.keyHandler_ = new goog.events.KeyHandler)
};
goog.ui.Control.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.Control.prototype.setRenderer = function(renderer) {
  if(this.isInDocument()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(this.getElement()) {
    this.setElementInternal(null)
  }
  this.renderer_ = renderer
};
goog.ui.Control.prototype.getExtraClassNames = function() {
  return this.extraClassNames_
};
goog.ui.Control.prototype.addClassName = function(className) {
  if(className) {
    if(this.extraClassNames_) {
      if(!goog.array.contains(this.extraClassNames_, className)) {
        this.extraClassNames_.push(className)
      }
    }else {
      this.extraClassNames_ = [className]
    }
    this.renderer_.enableExtraClassName(this, className, true)
  }
};
goog.ui.Control.prototype.removeClassName = function(className) {
  if(className && this.extraClassNames_) {
    goog.array.remove(this.extraClassNames_, className);
    if(this.extraClassNames_.length == 0) {
      this.extraClassNames_ = null
    }
    this.renderer_.enableExtraClassName(this, className, false)
  }
};
goog.ui.Control.prototype.enableClassName = function(className, enable) {
  if(enable) {
    this.addClassName(className)
  }else {
    this.removeClassName(className)
  }
};
goog.ui.Control.prototype.createDom = function() {
  var element = this.renderer_.createDom(this);
  this.setElementInternal(element);
  this.renderer_.setAriaRole(element, this.getPreferredAriaRole());
  if(!this.isAllowTextSelection()) {
    this.renderer_.setAllowTextSelection(element, false)
  }
  if(!this.isVisible()) {
    this.renderer_.setVisible(element, false)
  }
};
goog.ui.Control.prototype.getPreferredAriaRole = function() {
  return this.preferredAriaRole_
};
goog.ui.Control.prototype.setPreferredAriaRole = function(role) {
  this.preferredAriaRole_ = role
};
goog.ui.Control.prototype.getContentElement = function() {
  return this.renderer_.getContentElement(this.getElement())
};
goog.ui.Control.prototype.canDecorate = function(element) {
  return this.renderer_.canDecorate(element)
};
goog.ui.Control.prototype.decorateInternal = function(element) {
  element = this.renderer_.decorate(this, element);
  this.setElementInternal(element);
  this.renderer_.setAriaRole(element, this.getPreferredAriaRole());
  if(!this.isAllowTextSelection()) {
    this.renderer_.setAllowTextSelection(element, false)
  }
  this.visible_ = element.style.display != "none"
};
goog.ui.Control.prototype.enterDocument = function() {
  goog.ui.Control.superClass_.enterDocument.call(this);
  this.renderer_.initializeDom(this);
  if(this.supportedStates_ & ~goog.ui.Component.State.DISABLED) {
    if(this.isHandleMouseEvents()) {
      this.enableMouseEventHandling_(true)
    }
    if(this.isSupportedState(goog.ui.Component.State.FOCUSED)) {
      var keyTarget = this.getKeyEventTarget();
      if(keyTarget) {
        var keyHandler = this.getKeyHandler();
        keyHandler.attach(keyTarget);
        this.getHandler().listen(keyHandler, goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent).listen(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).listen(keyTarget, goog.events.EventType.BLUR, this.handleBlur)
      }
    }
  }
};
goog.ui.Control.prototype.enableMouseEventHandling_ = function(enable) {
  var handler = this.getHandler();
  var element = this.getElement();
  if(enable) {
    handler.listen(element, goog.events.EventType.MOUSEOVER, this.handleMouseOver).listen(element, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).listen(element, goog.events.EventType.MOUSEUP, this.handleMouseUp).listen(element, goog.events.EventType.MOUSEOUT, this.handleMouseOut);
    if(goog.userAgent.IE) {
      handler.listen(element, goog.events.EventType.DBLCLICK, this.handleDblClick)
    }
  }else {
    handler.unlisten(element, goog.events.EventType.MOUSEOVER, this.handleMouseOver).unlisten(element, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).unlisten(element, goog.events.EventType.MOUSEUP, this.handleMouseUp).unlisten(element, goog.events.EventType.MOUSEOUT, this.handleMouseOut);
    if(goog.userAgent.IE) {
      handler.unlisten(element, goog.events.EventType.DBLCLICK, this.handleDblClick)
    }
  }
};
goog.ui.Control.prototype.exitDocument = function() {
  goog.ui.Control.superClass_.exitDocument.call(this);
  if(this.keyHandler_) {
    this.keyHandler_.detach()
  }
  if(this.isVisible() && this.isEnabled()) {
    this.renderer_.setFocusable(this, false)
  }
};
goog.ui.Control.prototype.disposeInternal = function() {
  goog.ui.Control.superClass_.disposeInternal.call(this);
  if(this.keyHandler_) {
    this.keyHandler_.dispose();
    delete this.keyHandler_
  }
  delete this.renderer_;
  this.content_ = null;
  this.extraClassNames_ = null
};
goog.ui.Control.prototype.getContent = function() {
  return this.content_
};
goog.ui.Control.prototype.setContent = function(content) {
  this.renderer_.setContent(this.getElement(), content);
  this.setContentInternal(content)
};
goog.ui.Control.prototype.setContentInternal = function(content) {
  this.content_ = content
};
goog.ui.Control.prototype.getCaption = function() {
  var content = this.getContent();
  if(!content) {
    return""
  }
  var caption = goog.isString(content) ? content : goog.isArray(content) ? goog.array.map(content, goog.dom.getRawTextContent).join("") : goog.dom.getTextContent(content);
  return goog.string.collapseBreakingSpaces(caption)
};
goog.ui.Control.prototype.setCaption = function(caption) {
  this.setContent(caption)
};
goog.ui.Control.prototype.setRightToLeft = function(rightToLeft) {
  goog.ui.Control.superClass_.setRightToLeft.call(this, rightToLeft);
  var element = this.getElement();
  if(element) {
    this.renderer_.setRightToLeft(element, rightToLeft)
  }
};
goog.ui.Control.prototype.isAllowTextSelection = function() {
  return this.allowTextSelection_
};
goog.ui.Control.prototype.setAllowTextSelection = function(allow) {
  this.allowTextSelection_ = allow;
  var element = this.getElement();
  if(element) {
    this.renderer_.setAllowTextSelection(element, allow)
  }
};
goog.ui.Control.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.Control.prototype.setVisible = function(visible, opt_force) {
  if(opt_force || this.visible_ != visible && this.dispatchEvent(visible ? goog.ui.Component.EventType.SHOW : goog.ui.Component.EventType.HIDE)) {
    var element = this.getElement();
    if(element) {
      this.renderer_.setVisible(element, visible)
    }
    if(this.isEnabled()) {
      this.renderer_.setFocusable(this, visible)
    }
    this.visible_ = visible;
    return true
  }
  return false
};
goog.ui.Control.prototype.isEnabled = function() {
  return!this.hasState(goog.ui.Component.State.DISABLED)
};
goog.ui.Control.prototype.isParentDisabled_ = function() {
  var parent = this.getParent();
  return!!parent && typeof parent.isEnabled == "function" && !parent.isEnabled()
};
goog.ui.Control.prototype.setEnabled = function(enable) {
  if(!this.isParentDisabled_() && this.isTransitionAllowed(goog.ui.Component.State.DISABLED, !enable)) {
    if(!enable) {
      this.setActive(false);
      this.setHighlighted(false)
    }
    if(this.isVisible()) {
      this.renderer_.setFocusable(this, enable)
    }
    this.setState(goog.ui.Component.State.DISABLED, !enable)
  }
};
goog.ui.Control.prototype.isHighlighted = function() {
  return this.hasState(goog.ui.Component.State.HOVER)
};
goog.ui.Control.prototype.setHighlighted = function(highlight) {
  if(this.isTransitionAllowed(goog.ui.Component.State.HOVER, highlight)) {
    this.setState(goog.ui.Component.State.HOVER, highlight)
  }
};
goog.ui.Control.prototype.isActive = function() {
  return this.hasState(goog.ui.Component.State.ACTIVE)
};
goog.ui.Control.prototype.setActive = function(active) {
  if(this.isTransitionAllowed(goog.ui.Component.State.ACTIVE, active)) {
    this.setState(goog.ui.Component.State.ACTIVE, active)
  }
};
goog.ui.Control.prototype.isSelected = function() {
  return this.hasState(goog.ui.Component.State.SELECTED)
};
goog.ui.Control.prototype.setSelected = function(select) {
  if(this.isTransitionAllowed(goog.ui.Component.State.SELECTED, select)) {
    this.setState(goog.ui.Component.State.SELECTED, select)
  }
};
goog.ui.Control.prototype.isChecked = function() {
  return this.hasState(goog.ui.Component.State.CHECKED)
};
goog.ui.Control.prototype.setChecked = function(check) {
  if(this.isTransitionAllowed(goog.ui.Component.State.CHECKED, check)) {
    this.setState(goog.ui.Component.State.CHECKED, check)
  }
};
goog.ui.Control.prototype.isFocused = function() {
  return this.hasState(goog.ui.Component.State.FOCUSED)
};
goog.ui.Control.prototype.setFocused = function(focused) {
  if(this.isTransitionAllowed(goog.ui.Component.State.FOCUSED, focused)) {
    this.setState(goog.ui.Component.State.FOCUSED, focused)
  }
};
goog.ui.Control.prototype.isOpen = function() {
  return this.hasState(goog.ui.Component.State.OPENED)
};
goog.ui.Control.prototype.setOpen = function(open) {
  if(this.isTransitionAllowed(goog.ui.Component.State.OPENED, open)) {
    this.setState(goog.ui.Component.State.OPENED, open)
  }
};
goog.ui.Control.prototype.getState = function() {
  return this.state_
};
goog.ui.Control.prototype.hasState = function(state) {
  return!!(this.state_ & state)
};
goog.ui.Control.prototype.setState = function(state, enable) {
  if(this.isSupportedState(state) && enable != this.hasState(state)) {
    this.renderer_.setState(this, state, enable);
    this.state_ = enable ? this.state_ | state : this.state_ & ~state
  }
};
goog.ui.Control.prototype.setStateInternal = function(state) {
  this.state_ = state
};
goog.ui.Control.prototype.isSupportedState = function(state) {
  return!!(this.supportedStates_ & state)
};
goog.ui.Control.prototype.setSupportedState = function(state, support) {
  if(this.isInDocument() && this.hasState(state) && !support) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  if(!support && this.hasState(state)) {
    this.setState(state, false)
  }
  this.supportedStates_ = support ? this.supportedStates_ | state : this.supportedStates_ & ~state
};
goog.ui.Control.prototype.isAutoState = function(state) {
  return!!(this.autoStates_ & state) && this.isSupportedState(state)
};
goog.ui.Control.prototype.setAutoStates = function(states, enable) {
  this.autoStates_ = enable ? this.autoStates_ | states : this.autoStates_ & ~states
};
goog.ui.Control.prototype.isDispatchTransitionEvents = function(state) {
  return!!(this.statesWithTransitionEvents_ & state) && this.isSupportedState(state)
};
goog.ui.Control.prototype.setDispatchTransitionEvents = function(states, enable) {
  this.statesWithTransitionEvents_ = enable ? this.statesWithTransitionEvents_ | states : this.statesWithTransitionEvents_ & ~states
};
goog.ui.Control.prototype.isTransitionAllowed = function(state, enable) {
  return this.isSupportedState(state) && this.hasState(state) != enable && (!(this.statesWithTransitionEvents_ & state) || this.dispatchEvent(goog.ui.Component.getStateTransitionEvent(state, enable))) && !this.isDisposed()
};
goog.ui.Control.prototype.handleMouseOver = function(e) {
  if(!goog.ui.Control.isMouseEventWithinElement_(e, this.getElement()) && this.dispatchEvent(goog.ui.Component.EventType.ENTER) && this.isEnabled() && this.isAutoState(goog.ui.Component.State.HOVER)) {
    this.setHighlighted(true)
  }
};
goog.ui.Control.prototype.handleMouseOut = function(e) {
  if(!goog.ui.Control.isMouseEventWithinElement_(e, this.getElement()) && this.dispatchEvent(goog.ui.Component.EventType.LEAVE)) {
    if(this.isAutoState(goog.ui.Component.State.ACTIVE)) {
      this.setActive(false)
    }
    if(this.isAutoState(goog.ui.Component.State.HOVER)) {
      this.setHighlighted(false)
    }
  }
};
goog.ui.Control.isMouseEventWithinElement_ = function(e, elem) {
  return!!e.relatedTarget && goog.dom.contains(elem, e.relatedTarget)
};
goog.ui.Control.prototype.handleMouseDown = function(e) {
  if(this.isEnabled()) {
    if(this.isAutoState(goog.ui.Component.State.HOVER)) {
      this.setHighlighted(true)
    }
    if(e.isMouseActionButton()) {
      if(this.isAutoState(goog.ui.Component.State.ACTIVE)) {
        this.setActive(true)
      }
      if(this.renderer_.isFocusable(this)) {
        this.getKeyEventTarget().focus()
      }
    }
  }
  if(!this.isAllowTextSelection() && e.isMouseActionButton()) {
    e.preventDefault()
  }
};
goog.ui.Control.prototype.handleMouseUp = function(e) {
  if(this.isEnabled()) {
    if(this.isAutoState(goog.ui.Component.State.HOVER)) {
      this.setHighlighted(true)
    }
    if(this.isActive() && this.performActionInternal(e) && this.isAutoState(goog.ui.Component.State.ACTIVE)) {
      this.setActive(false)
    }
  }
};
goog.ui.Control.prototype.handleDblClick = function(e) {
  if(this.isEnabled()) {
    this.performActionInternal(e)
  }
};
goog.ui.Control.prototype.performActionInternal = function(e) {
  if(this.isAutoState(goog.ui.Component.State.CHECKED)) {
    this.setChecked(!this.isChecked())
  }
  if(this.isAutoState(goog.ui.Component.State.SELECTED)) {
    this.setSelected(true)
  }
  if(this.isAutoState(goog.ui.Component.State.OPENED)) {
    this.setOpen(!this.isOpen())
  }
  var actionEvent = new goog.events.Event(goog.ui.Component.EventType.ACTION, this);
  if(e) {
    var properties = ["altKey", "ctrlKey", "metaKey", "shiftKey", "platformModifierKey"];
    for(var property, i = 0;property = properties[i];i++) {
      actionEvent[property] = e[property]
    }
  }
  return this.dispatchEvent(actionEvent)
};
goog.ui.Control.prototype.handleFocus = function(e) {
  if(this.isAutoState(goog.ui.Component.State.FOCUSED)) {
    this.setFocused(true)
  }
};
goog.ui.Control.prototype.handleBlur = function(e) {
  if(this.isAutoState(goog.ui.Component.State.ACTIVE)) {
    this.setActive(false)
  }
  if(this.isAutoState(goog.ui.Component.State.FOCUSED)) {
    this.setFocused(false)
  }
};
goog.ui.Control.prototype.handleKeyEvent = function(e) {
  if(this.isVisible() && this.isEnabled() && this.handleKeyEventInternal(e)) {
    e.preventDefault();
    e.stopPropagation();
    return true
  }
  return false
};
goog.ui.Control.prototype.handleKeyEventInternal = function(e) {
  return e.keyCode == goog.events.KeyCodes.ENTER && this.performActionInternal(e)
};
goog.ui.registry.setDefaultRenderer(goog.ui.Control, goog.ui.ControlRenderer);
goog.ui.registry.setDecoratorByClassName(goog.ui.ControlRenderer.CSS_CLASS, function() {
  return new goog.ui.Control(null)
});
goog.provide("goog.ui.MenuSeparatorRenderer");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.ControlRenderer");
goog.ui.MenuSeparatorRenderer = function() {
  goog.ui.ControlRenderer.call(this)
};
goog.inherits(goog.ui.MenuSeparatorRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.MenuSeparatorRenderer);
goog.ui.MenuSeparatorRenderer.CSS_CLASS = goog.getCssName("goog-menuseparator");
goog.ui.MenuSeparatorRenderer.prototype.createDom = function(separator) {
  return separator.getDomHelper().createDom("div", this.getCssClass())
};
goog.ui.MenuSeparatorRenderer.prototype.decorate = function(separator, element) {
  if(element.id) {
    separator.setId(element.id)
  }
  if(element.tagName == "HR") {
    var hr = element;
    element = this.createDom(separator);
    goog.dom.insertSiblingBefore(element, hr);
    goog.dom.removeNode(hr)
  }else {
    goog.dom.classes.add(element, this.getCssClass())
  }
  return element
};
goog.ui.MenuSeparatorRenderer.prototype.setContent = function(separator, content) {
};
goog.ui.MenuSeparatorRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuSeparatorRenderer.CSS_CLASS
};
goog.provide("goog.ui.Separator");
goog.require("goog.dom.a11y");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.Control");
goog.require("goog.ui.MenuSeparatorRenderer");
goog.require("goog.ui.registry");
goog.ui.Separator = function(opt_renderer, opt_domHelper) {
  goog.ui.Control.call(this, null, opt_renderer || goog.ui.MenuSeparatorRenderer.getInstance(), opt_domHelper);
  this.setSupportedState(goog.ui.Component.State.DISABLED, false);
  this.setSupportedState(goog.ui.Component.State.HOVER, false);
  this.setSupportedState(goog.ui.Component.State.ACTIVE, false);
  this.setSupportedState(goog.ui.Component.State.FOCUSED, false);
  this.setStateInternal(goog.ui.Component.State.DISABLED)
};
goog.inherits(goog.ui.Separator, goog.ui.Control);
goog.ui.Separator.prototype.enterDocument = function() {
  goog.ui.Separator.superClass_.enterDocument.call(this);
  goog.dom.a11y.setRole(this.getElement(), "separator")
};
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuSeparatorRenderer.CSS_CLASS, function() {
  return new goog.ui.Separator
});
goog.provide("goog.ui.ContainerRenderer");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.classes");
goog.require("goog.string");
goog.require("goog.style");
goog.require("goog.ui.Separator");
goog.require("goog.ui.registry");
goog.require("goog.userAgent");
goog.ui.ContainerRenderer = function() {
};
goog.addSingletonGetter(goog.ui.ContainerRenderer);
goog.ui.ContainerRenderer.getCustomRenderer = function(ctor, cssClassName) {
  var renderer = new ctor;
  renderer.getCssClass = function() {
    return cssClassName
  };
  return renderer
};
goog.ui.ContainerRenderer.CSS_CLASS = goog.getCssName("goog-container");
goog.ui.ContainerRenderer.prototype.getAriaRole = function() {
  return undefined
};
goog.ui.ContainerRenderer.prototype.enableTabIndex = function(element, enable) {
  if(element) {
    element.tabIndex = enable ? 0 : -1
  }
};
goog.ui.ContainerRenderer.prototype.createDom = function(container) {
  return container.getDomHelper().createDom("div", this.getClassNames(container).join(" "))
};
goog.ui.ContainerRenderer.prototype.getContentElement = function(element) {
  return element
};
goog.ui.ContainerRenderer.prototype.canDecorate = function(element) {
  return element.tagName == "DIV"
};
goog.ui.ContainerRenderer.prototype.decorate = function(container, element) {
  if(element.id) {
    container.setId(element.id)
  }
  var baseClass = this.getCssClass();
  var hasBaseClass = false;
  var classNames = goog.dom.classes.get(element);
  if(classNames) {
    goog.array.forEach(classNames, function(className) {
      if(className == baseClass) {
        hasBaseClass = true
      }else {
        if(className) {
          this.setStateFromClassName(container, className, baseClass)
        }
      }
    }, this)
  }
  if(!hasBaseClass) {
    goog.dom.classes.add(element, baseClass)
  }
  this.decorateChildren(container, this.getContentElement(element));
  return element
};
goog.ui.ContainerRenderer.prototype.setStateFromClassName = function(container, className, baseClass) {
  if(className == goog.getCssName(baseClass, "disabled")) {
    container.setEnabled(false)
  }else {
    if(className == goog.getCssName(baseClass, "horizontal")) {
      container.setOrientation(goog.ui.Container.Orientation.HORIZONTAL)
    }else {
      if(className == goog.getCssName(baseClass, "vertical")) {
        container.setOrientation(goog.ui.Container.Orientation.VERTICAL)
      }
    }
  }
};
goog.ui.ContainerRenderer.prototype.decorateChildren = function(container, element, opt_firstChild) {
  if(element) {
    var node = opt_firstChild || element.firstChild, next;
    while(node && node.parentNode == element) {
      next = node.nextSibling;
      if(node.nodeType == goog.dom.NodeType.ELEMENT) {
        var child = this.getDecoratorForChild(node);
        if(child) {
          child.setElementInternal(node);
          if(!container.isEnabled()) {
            child.setEnabled(false)
          }
          container.addChild(child);
          child.decorate(node)
        }
      }else {
        if(!node.nodeValue || goog.string.trim(node.nodeValue) == "") {
          element.removeChild(node)
        }
      }
      node = next
    }
  }
};
goog.ui.ContainerRenderer.prototype.getDecoratorForChild = function(element) {
  return goog.ui.registry.getDecorator(element)
};
goog.ui.ContainerRenderer.prototype.initializeDom = function(container) {
  var elem = container.getElement();
  goog.style.setUnselectable(elem, true, goog.userAgent.GECKO);
  if(goog.userAgent.IE) {
    elem.hideFocus = true
  }
  var ariaRole = this.getAriaRole();
  if(ariaRole) {
    goog.dom.a11y.setRole(elem, ariaRole)
  }
};
goog.ui.ContainerRenderer.prototype.getKeyEventTarget = function(container) {
  return container.getElement()
};
goog.ui.ContainerRenderer.prototype.getCssClass = function() {
  return goog.ui.ContainerRenderer.CSS_CLASS
};
goog.ui.ContainerRenderer.prototype.getClassNames = function(container) {
  var baseClass = this.getCssClass();
  var isHorizontal = container.getOrientation() == goog.ui.Container.Orientation.HORIZONTAL;
  var classNames = [baseClass, isHorizontal ? goog.getCssName(baseClass, "horizontal") : goog.getCssName(baseClass, "vertical")];
  if(!container.isEnabled()) {
    classNames.push(goog.getCssName(baseClass, "disabled"))
  }
  return classNames
};
goog.ui.ContainerRenderer.prototype.getDefaultOrientation = function() {
  return goog.ui.Container.Orientation.VERTICAL
};
goog.provide("goog.ui.Container");
goog.provide("goog.ui.Container.EventType");
goog.provide("goog.ui.Container.Orientation");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.State");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.events.KeyHandler");
goog.require("goog.events.KeyHandler.EventType");
goog.require("goog.style");
goog.require("goog.ui.Component");
goog.require("goog.ui.Component.Error");
goog.require("goog.ui.Component.EventType");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ContainerRenderer");
goog.ui.Container = function(opt_orientation, opt_renderer, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.renderer_ = opt_renderer || goog.ui.ContainerRenderer.getInstance();
  this.orientation_ = opt_orientation || this.renderer_.getDefaultOrientation()
};
goog.inherits(goog.ui.Container, goog.ui.Component);
goog.ui.Container.EventType = {AFTER_SHOW:"aftershow", AFTER_HIDE:"afterhide"};
goog.ui.Container.Orientation = {HORIZONTAL:"horizontal", VERTICAL:"vertical"};
goog.ui.Container.prototype.keyEventTarget_ = null;
goog.ui.Container.prototype.keyHandler_ = null;
goog.ui.Container.prototype.renderer_ = null;
goog.ui.Container.prototype.orientation_ = null;
goog.ui.Container.prototype.visible_ = true;
goog.ui.Container.prototype.enabled_ = true;
goog.ui.Container.prototype.focusable_ = true;
goog.ui.Container.prototype.highlightedIndex_ = -1;
goog.ui.Container.prototype.openItem_ = null;
goog.ui.Container.prototype.mouseButtonPressed_ = false;
goog.ui.Container.prototype.allowFocusableChildren_ = false;
goog.ui.Container.prototype.openFollowsHighlight_ = true;
goog.ui.Container.prototype.childElementIdMap_ = null;
goog.ui.Container.prototype.getKeyEventTarget = function() {
  return this.keyEventTarget_ || this.renderer_.getKeyEventTarget(this)
};
goog.ui.Container.prototype.setKeyEventTarget = function(element) {
  if(this.focusable_) {
    var oldTarget = this.getKeyEventTarget();
    var inDocument = this.isInDocument();
    this.keyEventTarget_ = element;
    var newTarget = this.getKeyEventTarget();
    if(inDocument) {
      this.keyEventTarget_ = oldTarget;
      this.enableFocusHandling_(false);
      this.keyEventTarget_ = element;
      this.getKeyHandler().attach(newTarget);
      this.enableFocusHandling_(true)
    }
  }else {
    throw Error("Can't set key event target for container " + "that doesn't support keyboard focus!");
  }
};
goog.ui.Container.prototype.getKeyHandler = function() {
  return this.keyHandler_ || (this.keyHandler_ = new goog.events.KeyHandler(this.getKeyEventTarget()))
};
goog.ui.Container.prototype.getRenderer = function() {
  return this.renderer_
};
goog.ui.Container.prototype.setRenderer = function(renderer) {
  if(this.getElement()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.renderer_ = renderer
};
goog.ui.Container.prototype.createDom = function() {
  this.setElementInternal(this.renderer_.createDom(this))
};
goog.ui.Container.prototype.getContentElement = function() {
  return this.renderer_.getContentElement(this.getElement())
};
goog.ui.Container.prototype.canDecorate = function(element) {
  return this.renderer_.canDecorate(element)
};
goog.ui.Container.prototype.decorateInternal = function(element) {
  this.setElementInternal(this.renderer_.decorate(this, element));
  if(element.style.display == "none") {
    this.visible_ = false
  }
};
goog.ui.Container.prototype.enterDocument = function() {
  goog.ui.Container.superClass_.enterDocument.call(this);
  this.forEachChild(function(child) {
    if(child.isInDocument()) {
      this.registerChildId_(child)
    }
  }, this);
  var elem = this.getElement();
  this.renderer_.initializeDom(this);
  this.setVisible(this.visible_, true);
  this.getHandler().listen(this, goog.ui.Component.EventType.ENTER, this.handleEnterItem).listen(this, goog.ui.Component.EventType.HIGHLIGHT, this.handleHighlightItem).listen(this, goog.ui.Component.EventType.UNHIGHLIGHT, this.handleUnHighlightItem).listen(this, goog.ui.Component.EventType.OPEN, this.handleOpenItem).listen(this, goog.ui.Component.EventType.CLOSE, this.handleCloseItem).listen(elem, goog.events.EventType.MOUSEDOWN, this.handleMouseDown).listen(goog.dom.getOwnerDocument(elem), goog.events.EventType.MOUSEUP, 
  this.handleDocumentMouseUp).listen(elem, [goog.events.EventType.MOUSEDOWN, goog.events.EventType.MOUSEUP, goog.events.EventType.MOUSEOVER, goog.events.EventType.MOUSEOUT], this.handleChildMouseEvents);
  if(this.isFocusable()) {
    this.enableFocusHandling_(true)
  }
};
goog.ui.Container.prototype.enableFocusHandling_ = function(enable) {
  var handler = this.getHandler();
  var keyTarget = this.getKeyEventTarget();
  if(enable) {
    handler.listen(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).listen(keyTarget, goog.events.EventType.BLUR, this.handleBlur).listen(this.getKeyHandler(), goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent)
  }else {
    handler.unlisten(keyTarget, goog.events.EventType.FOCUS, this.handleFocus).unlisten(keyTarget, goog.events.EventType.BLUR, this.handleBlur).unlisten(this.getKeyHandler(), goog.events.KeyHandler.EventType.KEY, this.handleKeyEvent)
  }
};
goog.ui.Container.prototype.exitDocument = function() {
  this.setHighlightedIndex(-1);
  if(this.openItem_) {
    this.openItem_.setOpen(false)
  }
  this.mouseButtonPressed_ = false;
  goog.ui.Container.superClass_.exitDocument.call(this)
};
goog.ui.Container.prototype.disposeInternal = function() {
  goog.ui.Container.superClass_.disposeInternal.call(this);
  if(this.keyHandler_) {
    this.keyHandler_.dispose();
    this.keyHandler_ = null
  }
  this.keyEventTarget_ = null;
  this.childElementIdMap_ = null;
  this.openItem_ = null;
  this.renderer_ = null
};
goog.ui.Container.prototype.handleEnterItem = function(e) {
  return true
};
goog.ui.Container.prototype.handleHighlightItem = function(e) {
  var index = this.indexOfChild(e.target);
  if(index > -1 && index != this.highlightedIndex_) {
    var item = this.getHighlighted();
    if(item) {
      item.setHighlighted(false)
    }
    this.highlightedIndex_ = index;
    item = this.getHighlighted();
    if(this.isMouseButtonPressed()) {
      item.setActive(true)
    }
    if(this.openFollowsHighlight_ && this.openItem_ && item != this.openItem_) {
      if(item.isSupportedState(goog.ui.Component.State.OPENED)) {
        item.setOpen(true)
      }else {
        this.openItem_.setOpen(false)
      }
    }
  }
  goog.dom.a11y.setState(this.getElement(), goog.dom.a11y.State.ACTIVEDESCENDANT, e.target.getElement().id)
};
goog.ui.Container.prototype.handleUnHighlightItem = function(e) {
  if(e.target == this.getHighlighted()) {
    this.highlightedIndex_ = -1
  }
  goog.dom.a11y.setState(this.getElement(), goog.dom.a11y.State.ACTIVEDESCENDANT, "")
};
goog.ui.Container.prototype.handleOpenItem = function(e) {
  var item = e.target;
  if(item && item != this.openItem_ && item.getParent() == this) {
    if(this.openItem_) {
      this.openItem_.setOpen(false)
    }
    this.openItem_ = item
  }
};
goog.ui.Container.prototype.handleCloseItem = function(e) {
  if(e.target == this.openItem_) {
    this.openItem_ = null
  }
};
goog.ui.Container.prototype.handleMouseDown = function(e) {
  if(this.enabled_) {
    this.setMouseButtonPressed(true)
  }
  var keyTarget = this.getKeyEventTarget();
  if(keyTarget && goog.dom.isFocusableTabIndex(keyTarget)) {
    keyTarget.focus()
  }else {
    e.preventDefault()
  }
};
goog.ui.Container.prototype.handleDocumentMouseUp = function(e) {
  this.setMouseButtonPressed(false)
};
goog.ui.Container.prototype.handleChildMouseEvents = function(e) {
  var control = this.getOwnerControl(e.target);
  if(control) {
    switch(e.type) {
      case goog.events.EventType.MOUSEDOWN:
        control.handleMouseDown(e);
        break;
      case goog.events.EventType.MOUSEUP:
        control.handleMouseUp(e);
        break;
      case goog.events.EventType.MOUSEOVER:
        control.handleMouseOver(e);
        break;
      case goog.events.EventType.MOUSEOUT:
        control.handleMouseOut(e);
        break
    }
  }
};
goog.ui.Container.prototype.getOwnerControl = function(node) {
  if(this.childElementIdMap_) {
    var elem = this.getElement();
    while(node && node !== elem) {
      var id = node.id;
      if(id in this.childElementIdMap_) {
        return this.childElementIdMap_[id]
      }
      node = node.parentNode
    }
  }
  return null
};
goog.ui.Container.prototype.handleFocus = function(e) {
};
goog.ui.Container.prototype.handleBlur = function(e) {
  this.setHighlightedIndex(-1);
  this.setMouseButtonPressed(false);
  if(this.openItem_) {
    this.openItem_.setOpen(false)
  }
};
goog.ui.Container.prototype.handleKeyEvent = function(e) {
  if(this.isEnabled() && this.isVisible() && (this.getChildCount() != 0 || this.keyEventTarget_) && this.handleKeyEventInternal(e)) {
    e.preventDefault();
    e.stopPropagation();
    return true
  }
  return false
};
goog.ui.Container.prototype.handleKeyEventInternal = function(e) {
  var highlighted = this.getHighlighted();
  if(highlighted && typeof highlighted.handleKeyEvent == "function" && highlighted.handleKeyEvent(e)) {
    return true
  }
  if(this.openItem_ && this.openItem_ != highlighted && typeof this.openItem_.handleKeyEvent == "function" && this.openItem_.handleKeyEvent(e)) {
    return true
  }
  if(e.shiftKey || e.ctrlKey || e.metaKey || e.altKey) {
    return false
  }
  switch(e.keyCode) {
    case goog.events.KeyCodes.ESC:
      if(this.isFocusable()) {
        this.getKeyEventTarget().blur()
      }else {
        return false
      }
      break;
    case goog.events.KeyCodes.HOME:
      this.highlightFirst();
      break;
    case goog.events.KeyCodes.END:
      this.highlightLast();
      break;
    case goog.events.KeyCodes.UP:
      if(this.orientation_ == goog.ui.Container.Orientation.VERTICAL) {
        this.highlightPrevious()
      }else {
        return false
      }
      break;
    case goog.events.KeyCodes.LEFT:
      if(this.orientation_ == goog.ui.Container.Orientation.HORIZONTAL) {
        if(this.isRightToLeft()) {
          this.highlightNext()
        }else {
          this.highlightPrevious()
        }
      }else {
        return false
      }
      break;
    case goog.events.KeyCodes.DOWN:
      if(this.orientation_ == goog.ui.Container.Orientation.VERTICAL) {
        this.highlightNext()
      }else {
        return false
      }
      break;
    case goog.events.KeyCodes.RIGHT:
      if(this.orientation_ == goog.ui.Container.Orientation.HORIZONTAL) {
        if(this.isRightToLeft()) {
          this.highlightPrevious()
        }else {
          this.highlightNext()
        }
      }else {
        return false
      }
      break;
    default:
      return false
  }
  return true
};
goog.ui.Container.prototype.registerChildId_ = function(child) {
  var childElem = child.getElement();
  var id = childElem.id || (childElem.id = child.getId());
  if(!this.childElementIdMap_) {
    this.childElementIdMap_ = {}
  }
  this.childElementIdMap_[id] = child
};
goog.ui.Container.prototype.addChild = function(child, opt_render) {
  goog.ui.Container.superClass_.addChild.call(this, child, opt_render)
};
goog.ui.Container.prototype.getChild;
goog.ui.Container.prototype.getChildAt;
goog.ui.Container.prototype.addChildAt = function(control, index, opt_render) {
  control.setDispatchTransitionEvents(goog.ui.Component.State.HOVER, true);
  control.setDispatchTransitionEvents(goog.ui.Component.State.OPENED, true);
  if(this.isFocusable() || !this.isFocusableChildrenAllowed()) {
    control.setSupportedState(goog.ui.Component.State.FOCUSED, false)
  }
  control.setHandleMouseEvents(false);
  goog.ui.Container.superClass_.addChildAt.call(this, control, index, opt_render);
  if(control.isInDocument() && this.isInDocument()) {
    this.registerChildId_(control)
  }
  if(index <= this.highlightedIndex_) {
    this.highlightedIndex_++
  }
};
goog.ui.Container.prototype.removeChild = function(control, opt_unrender) {
  control = goog.isString(control) ? this.getChild(control) : control;
  if(control) {
    var index = this.indexOfChild(control);
    if(index != -1) {
      if(index == this.highlightedIndex_) {
        control.setHighlighted(false)
      }else {
        if(index < this.highlightedIndex_) {
          this.highlightedIndex_--
        }
      }
    }
    var childElem = control.getElement();
    if(childElem && childElem.id && this.childElementIdMap_) {
      goog.object.remove(this.childElementIdMap_, childElem.id)
    }
  }
  control = goog.ui.Container.superClass_.removeChild.call(this, control, opt_unrender);
  control.setHandleMouseEvents(true);
  return control
};
goog.ui.Container.prototype.getOrientation = function() {
  return this.orientation_
};
goog.ui.Container.prototype.setOrientation = function(orientation) {
  if(this.getElement()) {
    throw Error(goog.ui.Component.Error.ALREADY_RENDERED);
  }
  this.orientation_ = orientation
};
goog.ui.Container.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.Container.prototype.setVisible = function(visible, opt_force) {
  if(opt_force || this.visible_ != visible && this.dispatchEvent(visible ? goog.ui.Component.EventType.SHOW : goog.ui.Component.EventType.HIDE)) {
    this.visible_ = visible;
    var elem = this.getElement();
    if(elem) {
      goog.style.showElement(elem, visible);
      if(this.isFocusable()) {
        this.renderer_.enableTabIndex(this.getKeyEventTarget(), this.enabled_ && this.visible_)
      }
      if(!opt_force) {
        this.dispatchEvent(this.visible_ ? goog.ui.Container.EventType.AFTER_SHOW : goog.ui.Container.EventType.AFTER_HIDE)
      }
    }
    return true
  }
  return false
};
goog.ui.Container.prototype.isEnabled = function() {
  return this.enabled_
};
goog.ui.Container.prototype.setEnabled = function(enable) {
  if(this.enabled_ != enable && this.dispatchEvent(enable ? goog.ui.Component.EventType.ENABLE : goog.ui.Component.EventType.DISABLE)) {
    if(enable) {
      this.enabled_ = true;
      this.forEachChild(function(child) {
        if(child.wasDisabled) {
          delete child.wasDisabled
        }else {
          child.setEnabled(true)
        }
      })
    }else {
      this.forEachChild(function(child) {
        if(child.isEnabled()) {
          child.setEnabled(false)
        }else {
          child.wasDisabled = true
        }
      });
      this.enabled_ = false;
      this.setMouseButtonPressed(false)
    }
    if(this.isFocusable()) {
      this.renderer_.enableTabIndex(this.getKeyEventTarget(), enable && this.visible_)
    }
  }
};
goog.ui.Container.prototype.isFocusable = function() {
  return this.focusable_
};
goog.ui.Container.prototype.setFocusable = function(focusable) {
  if(focusable != this.focusable_ && this.isInDocument()) {
    this.enableFocusHandling_(focusable)
  }
  this.focusable_ = focusable;
  if(this.enabled_ && this.visible_) {
    this.renderer_.enableTabIndex(this.getKeyEventTarget(), focusable)
  }
};
goog.ui.Container.prototype.isFocusableChildrenAllowed = function() {
  return this.allowFocusableChildren_
};
goog.ui.Container.prototype.setFocusableChildrenAllowed = function(focusable) {
  this.allowFocusableChildren_ = focusable
};
goog.ui.Container.prototype.isOpenFollowsHighlight = function() {
  return this.openFollowsHighlight_
};
goog.ui.Container.prototype.setOpenFollowsHighlight = function(follow) {
  this.openFollowsHighlight_ = follow
};
goog.ui.Container.prototype.getHighlightedIndex = function() {
  return this.highlightedIndex_
};
goog.ui.Container.prototype.setHighlightedIndex = function(index) {
  var child = this.getChildAt(index);
  if(child) {
    child.setHighlighted(true)
  }else {
    if(this.highlightedIndex_ > -1) {
      this.getHighlighted().setHighlighted(false)
    }
  }
};
goog.ui.Container.prototype.setHighlighted = function(item) {
  this.setHighlightedIndex(this.indexOfChild(item))
};
goog.ui.Container.prototype.getHighlighted = function() {
  return this.getChildAt(this.highlightedIndex_)
};
goog.ui.Container.prototype.highlightFirst = function() {
  this.highlightHelper(function(index, max) {
    return(index + 1) % max
  }, this.getChildCount() - 1)
};
goog.ui.Container.prototype.highlightLast = function() {
  this.highlightHelper(function(index, max) {
    index--;
    return index < 0 ? max - 1 : index
  }, 0)
};
goog.ui.Container.prototype.highlightNext = function() {
  this.highlightHelper(function(index, max) {
    return(index + 1) % max
  }, this.highlightedIndex_)
};
goog.ui.Container.prototype.highlightPrevious = function() {
  this.highlightHelper(function(index, max) {
    index--;
    return index < 0 ? max - 1 : index
  }, this.highlightedIndex_)
};
goog.ui.Container.prototype.highlightHelper = function(fn, startIndex) {
  var curIndex = startIndex < 0 ? this.indexOfChild(this.openItem_) : startIndex;
  var numItems = this.getChildCount();
  curIndex = fn.call(this, curIndex, numItems);
  var visited = 0;
  while(visited <= numItems) {
    var control = this.getChildAt(curIndex);
    if(control && this.canHighlightItem(control)) {
      this.setHighlightedIndexFromKeyEvent(curIndex);
      return true
    }
    visited++;
    curIndex = fn.call(this, curIndex, numItems)
  }
  return false
};
goog.ui.Container.prototype.canHighlightItem = function(item) {
  return item.isVisible() && item.isEnabled() && item.isSupportedState(goog.ui.Component.State.HOVER)
};
goog.ui.Container.prototype.setHighlightedIndexFromKeyEvent = function(index) {
  this.setHighlightedIndex(index)
};
goog.ui.Container.prototype.getOpenItem = function() {
  return this.openItem_
};
goog.ui.Container.prototype.isMouseButtonPressed = function() {
  return this.mouseButtonPressed_
};
goog.ui.Container.prototype.setMouseButtonPressed = function(pressed) {
  this.mouseButtonPressed_ = pressed
};
goog.provide("goog.ui.MenuHeaderRenderer");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.ui.ControlRenderer");
goog.ui.MenuHeaderRenderer = function() {
  goog.ui.ControlRenderer.call(this)
};
goog.inherits(goog.ui.MenuHeaderRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.MenuHeaderRenderer);
goog.ui.MenuHeaderRenderer.CSS_CLASS = goog.getCssName("goog-menuheader");
goog.ui.MenuHeaderRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuHeaderRenderer.CSS_CLASS
};
goog.provide("goog.ui.MenuHeader");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.Control");
goog.require("goog.ui.MenuHeaderRenderer");
goog.require("goog.ui.registry");
goog.ui.MenuHeader = function(content, opt_domHelper, opt_renderer) {
  goog.ui.Control.call(this, content, opt_renderer || goog.ui.MenuHeaderRenderer.getInstance(), opt_domHelper);
  this.setSupportedState(goog.ui.Component.State.DISABLED, false);
  this.setSupportedState(goog.ui.Component.State.HOVER, false);
  this.setSupportedState(goog.ui.Component.State.ACTIVE, false);
  this.setSupportedState(goog.ui.Component.State.FOCUSED, false);
  this.setStateInternal(goog.ui.Component.State.DISABLED)
};
goog.inherits(goog.ui.MenuHeader, goog.ui.Control);
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuHeaderRenderer.CSS_CLASS, function() {
  return new goog.ui.MenuHeader(null)
});
goog.provide("goog.ui.MenuItemRenderer");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.Role");
goog.require("goog.dom.classes");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.ControlRenderer");
goog.ui.MenuItemRenderer = function() {
  goog.ui.ControlRenderer.call(this);
  this.classNameCache_ = []
};
goog.inherits(goog.ui.MenuItemRenderer, goog.ui.ControlRenderer);
goog.addSingletonGetter(goog.ui.MenuItemRenderer);
goog.ui.MenuItemRenderer.CSS_CLASS = goog.getCssName("goog-menuitem");
goog.ui.MenuItemRenderer.CompositeCssClassIndex_ = {HOVER:0, CHECKBOX:1, CONTENT:2};
goog.ui.MenuItemRenderer.prototype.getCompositeCssClass_ = function(index) {
  var result = this.classNameCache_[index];
  if(!result) {
    switch(index) {
      case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER:
        result = goog.getCssName(this.getStructuralCssClass(), "highlight");
        break;
      case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX:
        result = goog.getCssName(this.getStructuralCssClass(), "checkbox");
        break;
      case goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT:
        result = goog.getCssName(this.getStructuralCssClass(), "content");
        break
    }
    this.classNameCache_[index] = result
  }
  return result
};
goog.ui.MenuItemRenderer.prototype.getAriaRole = function() {
  return goog.dom.a11y.Role.MENU_ITEM
};
goog.ui.MenuItemRenderer.prototype.createDom = function(item) {
  var element = item.getDomHelper().createDom("div", this.getClassNames(item).join(" "), this.createContent(item.getContent(), item.getDomHelper()));
  this.setEnableCheckBoxStructure(item, element, item.isSupportedState(goog.ui.Component.State.SELECTED) || item.isSupportedState(goog.ui.Component.State.CHECKED));
  return element
};
goog.ui.MenuItemRenderer.prototype.getContentElement = function(element) {
  return element && element.firstChild
};
goog.ui.MenuItemRenderer.prototype.decorate = function(item, element) {
  if(!this.hasContentStructure(element)) {
    element.appendChild(this.createContent(element.childNodes, item.getDomHelper()))
  }
  if(goog.dom.classes.has(element, goog.getCssName("goog-option"))) {
    item.setCheckable(true);
    this.setCheckable(item, element, true)
  }
  return goog.ui.MenuItemRenderer.superClass_.decorate.call(this, item, element)
};
goog.ui.MenuItemRenderer.prototype.setContent = function(element, content) {
  var contentElement = this.getContentElement(element);
  var checkBoxElement = this.hasCheckBoxStructure(element) ? contentElement.firstChild : null;
  goog.ui.MenuItemRenderer.superClass_.setContent.call(this, element, content);
  if(checkBoxElement && !this.hasCheckBoxStructure(element)) {
    contentElement.insertBefore(checkBoxElement, contentElement.firstChild || null)
  }
};
goog.ui.MenuItemRenderer.prototype.hasContentStructure = function(element) {
  var child = goog.dom.getFirstElementChild(element);
  var contentClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT);
  return!!child && child.className.indexOf(contentClassName) != -1
};
goog.ui.MenuItemRenderer.prototype.createContent = function(content, dom) {
  var contentClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CONTENT);
  return dom.createDom("div", contentClassName, content)
};
goog.ui.MenuItemRenderer.prototype.setSelectable = function(item, element, selectable) {
  if(element) {
    goog.dom.a11y.setRole(element, selectable ? goog.dom.a11y.Role.MENU_ITEM_RADIO : this.getAriaRole());
    this.setEnableCheckBoxStructure(item, element, selectable)
  }
};
goog.ui.MenuItemRenderer.prototype.setCheckable = function(item, element, checkable) {
  if(element) {
    goog.dom.a11y.setRole(element, checkable ? goog.dom.a11y.Role.MENU_ITEM_CHECKBOX : this.getAriaRole());
    this.setEnableCheckBoxStructure(item, element, checkable)
  }
};
goog.ui.MenuItemRenderer.prototype.hasCheckBoxStructure = function(element) {
  var contentElement = this.getContentElement(element);
  if(contentElement) {
    var child = contentElement.firstChild;
    var checkboxClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX);
    return!!child && !!child.className && child.className.indexOf(checkboxClassName) != -1
  }
  return false
};
goog.ui.MenuItemRenderer.prototype.setEnableCheckBoxStructure = function(item, element, enable) {
  if(enable != this.hasCheckBoxStructure(element)) {
    goog.dom.classes.enable(element, goog.getCssName("goog-option"), enable);
    var contentElement = this.getContentElement(element);
    if(enable) {
      var checkboxClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.CHECKBOX);
      contentElement.insertBefore(item.getDomHelper().createDom("div", checkboxClassName), contentElement.firstChild || null)
    }else {
      contentElement.removeChild(contentElement.firstChild)
    }
  }
};
goog.ui.MenuItemRenderer.prototype.getClassForState = function(state) {
  switch(state) {
    case goog.ui.Component.State.HOVER:
      return this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER);
    case goog.ui.Component.State.CHECKED:
    ;
    case goog.ui.Component.State.SELECTED:
      return goog.getCssName("goog-option-selected");
    default:
      return goog.ui.MenuItemRenderer.superClass_.getClassForState.call(this, state)
  }
};
goog.ui.MenuItemRenderer.prototype.getStateFromClass = function(className) {
  var hoverClassName = this.getCompositeCssClass_(goog.ui.MenuItemRenderer.CompositeCssClassIndex_.HOVER);
  switch(className) {
    case goog.getCssName("goog-option-selected"):
      return goog.ui.Component.State.CHECKED;
    case hoverClassName:
      return goog.ui.Component.State.HOVER;
    default:
      return goog.ui.MenuItemRenderer.superClass_.getStateFromClass.call(this, className)
  }
};
goog.ui.MenuItemRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuItemRenderer.CSS_CLASS
};
goog.provide("goog.ui.MenuItem");
goog.require("goog.array");
goog.require("goog.dom");
goog.require("goog.dom.classes");
goog.require("goog.math.Coordinate");
goog.require("goog.string");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.Control");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.MenuItemRenderer");
goog.require("goog.ui.registry");
goog.ui.MenuItem = function(content, opt_model, opt_domHelper, opt_renderer) {
  goog.ui.Control.call(this, content, opt_renderer || goog.ui.MenuItemRenderer.getInstance(), opt_domHelper);
  this.setValue(opt_model)
};
goog.inherits(goog.ui.MenuItem, goog.ui.Control);
goog.ui.MenuItem.prototype.getValue = function() {
  var model = this.getModel();
  return model != null ? model : this.getCaption()
};
goog.ui.MenuItem.prototype.setValue = function(value) {
  this.setModel(value)
};
goog.ui.MenuItem.prototype.setSelectable = function(selectable) {
  this.setSupportedState(goog.ui.Component.State.SELECTED, selectable);
  if(this.isChecked() && !selectable) {
    this.setChecked(false)
  }
  var element = this.getElement();
  if(element) {
    this.getRenderer().setSelectable(this, element, selectable)
  }
};
goog.ui.MenuItem.prototype.setCheckable = function(checkable) {
  this.setSupportedState(goog.ui.Component.State.CHECKED, checkable);
  var element = this.getElement();
  if(element) {
    this.getRenderer().setCheckable(this, element, checkable)
  }
};
goog.ui.MenuItem.prototype.getCaption = function() {
  var content = this.getContent();
  if(goog.isArray(content)) {
    var acceleratorClass = goog.getCssName("goog-menuitem-accel");
    var caption = goog.array.map(content, function(node) {
      return goog.dom.classes.has(node, acceleratorClass) ? "" : goog.dom.getRawTextContent(node)
    }).join("");
    return goog.string.collapseBreakingSpaces(caption)
  }
  return goog.ui.MenuItem.superClass_.getCaption.call(this)
};
goog.ui.MenuItem.prototype.handleMouseUp = function(e) {
  var parentMenu = this.getParent();
  if(parentMenu) {
    var oldCoords = parentMenu.openingCoords;
    parentMenu.openingCoords = null;
    if(oldCoords && goog.isNumber(e.clientX)) {
      var newCoords = new goog.math.Coordinate(e.clientX, e.clientY);
      if(goog.math.Coordinate.equals(oldCoords, newCoords)) {
        return
      }
    }
  }
  goog.base(this, "handleMouseUp", e)
};
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuItemRenderer.CSS_CLASS, function() {
  return new goog.ui.MenuItem(null)
});
goog.provide("goog.ui.MenuRenderer");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.Role");
goog.require("goog.dom.a11y.State");
goog.require("goog.ui.ContainerRenderer");
goog.require("goog.ui.Separator");
goog.ui.MenuRenderer = function() {
  goog.ui.ContainerRenderer.call(this)
};
goog.inherits(goog.ui.MenuRenderer, goog.ui.ContainerRenderer);
goog.addSingletonGetter(goog.ui.MenuRenderer);
goog.ui.MenuRenderer.CSS_CLASS = goog.getCssName("goog-menu");
goog.ui.MenuRenderer.prototype.getAriaRole = function() {
  return goog.dom.a11y.Role.MENU
};
goog.ui.MenuRenderer.prototype.canDecorate = function(element) {
  return element.tagName == "UL" || goog.ui.MenuRenderer.superClass_.canDecorate.call(this, element)
};
goog.ui.MenuRenderer.prototype.getDecoratorForChild = function(element) {
  return element.tagName == "HR" ? new goog.ui.Separator : goog.ui.MenuRenderer.superClass_.getDecoratorForChild.call(this, element)
};
goog.ui.MenuRenderer.prototype.containsElement = function(menu, element) {
  return goog.dom.contains(menu.getElement(), element)
};
goog.ui.MenuRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuRenderer.CSS_CLASS
};
goog.ui.MenuRenderer.prototype.initializeDom = function(container) {
  goog.ui.MenuRenderer.superClass_.initializeDom.call(this, container);
  var element = container.getElement();
  goog.dom.a11y.setState(element, goog.dom.a11y.State.HASPOPUP, "true")
};
goog.provide("goog.ui.MenuSeparator");
goog.require("goog.ui.MenuSeparatorRenderer");
goog.require("goog.ui.Separator");
goog.require("goog.ui.registry");
goog.ui.MenuSeparator = function(opt_domHelper) {
  goog.ui.Separator.call(this, goog.ui.MenuSeparatorRenderer.getInstance(), opt_domHelper)
};
goog.inherits(goog.ui.MenuSeparator, goog.ui.Separator);
goog.ui.registry.setDecoratorByClassName(goog.ui.MenuSeparatorRenderer.CSS_CLASS, function() {
  return new goog.ui.Separator
});
goog.provide("goog.ui.Menu");
goog.provide("goog.ui.Menu.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.string");
goog.require("goog.style");
goog.require("goog.ui.Component.EventType");
goog.require("goog.ui.Component.State");
goog.require("goog.ui.Container");
goog.require("goog.ui.Container.Orientation");
goog.require("goog.ui.MenuHeader");
goog.require("goog.ui.MenuItem");
goog.require("goog.ui.MenuRenderer");
goog.require("goog.ui.MenuSeparator");
goog.ui.Menu = function(opt_domHelper, opt_renderer) {
  goog.ui.Container.call(this, goog.ui.Container.Orientation.VERTICAL, opt_renderer || goog.ui.MenuRenderer.getInstance(), opt_domHelper);
  this.setFocusable(false)
};
goog.inherits(goog.ui.Menu, goog.ui.Container);
goog.ui.Menu.EventType = {BEFORE_SHOW:goog.ui.Component.EventType.BEFORE_SHOW, SHOW:goog.ui.Component.EventType.SHOW, BEFORE_HIDE:goog.ui.Component.EventType.HIDE, HIDE:goog.ui.Component.EventType.HIDE};
goog.ui.Menu.CSS_CLASS = goog.ui.MenuRenderer.CSS_CLASS;
goog.ui.Menu.prototype.openingCoords;
goog.ui.Menu.prototype.allowAutoFocus_ = true;
goog.ui.Menu.prototype.allowHighlightDisabled_ = false;
goog.ui.Menu.prototype.getCssClass = function() {
  return this.getRenderer().getCssClass()
};
goog.ui.Menu.prototype.containsElement = function(element) {
  if(this.getRenderer().containsElement(this, element)) {
    return true
  }
  for(var i = 0, count = this.getChildCount();i < count;i++) {
    var child = this.getChildAt(i);
    if(typeof child.containsElement == "function" && child.containsElement(element)) {
      return true
    }
  }
  return false
};
goog.ui.Menu.prototype.addItem = function(item) {
  this.addChild(item, true)
};
goog.ui.Menu.prototype.addItemAt = function(item, n) {
  this.addChildAt(item, n, true)
};
goog.ui.Menu.prototype.removeItem = function(item) {
  var removedChild = this.removeChild(item, true);
  if(removedChild) {
    removedChild.dispose()
  }
};
goog.ui.Menu.prototype.removeItemAt = function(n) {
  var removedChild = this.removeChildAt(n, true);
  if(removedChild) {
    removedChild.dispose()
  }
};
goog.ui.Menu.prototype.getItemAt = function(n) {
  return this.getChildAt(n)
};
goog.ui.Menu.prototype.getItemCount = function() {
  return this.getChildCount()
};
goog.ui.Menu.prototype.getItems = function() {
  var children = [];
  this.forEachChild(function(child) {
    children.push(child)
  });
  return children
};
goog.ui.Menu.prototype.setPosition = function(x, opt_y) {
  var visible = this.isVisible();
  if(!visible) {
    goog.style.showElement(this.getElement(), true)
  }
  goog.style.setPageOffset(this.getElement(), x, opt_y);
  if(!visible) {
    goog.style.showElement(this.getElement(), false)
  }
};
goog.ui.Menu.prototype.getPosition = function() {
  return this.isVisible() ? goog.style.getPageOffset(this.getElement()) : null
};
goog.ui.Menu.prototype.setAllowAutoFocus = function(allow) {
  this.allowAutoFocus_ = allow;
  if(allow) {
    this.setFocusable(true)
  }
};
goog.ui.Menu.prototype.getAllowAutoFocus = function() {
  return this.allowAutoFocus_
};
goog.ui.Menu.prototype.setAllowHighlightDisabled = function(allow) {
  this.allowHighlightDisabled_ = allow
};
goog.ui.Menu.prototype.getAllowHighlightDisabled = function() {
  return this.allowHighlightDisabled_
};
goog.ui.Menu.prototype.setVisible = function(show, opt_force, opt_e) {
  var visibilityChanged = goog.ui.Menu.superClass_.setVisible.call(this, show, opt_force);
  if(visibilityChanged && show && this.isInDocument() && this.allowAutoFocus_) {
    this.getKeyEventTarget().focus()
  }
  if(show && opt_e && goog.isNumber(opt_e.clientX)) {
    this.openingCoords = new goog.math.Coordinate(opt_e.clientX, opt_e.clientY)
  }else {
    this.openingCoords = null
  }
  return visibilityChanged
};
goog.ui.Menu.prototype.handleEnterItem = function(e) {
  if(this.allowAutoFocus_) {
    this.getKeyEventTarget().focus()
  }
  return goog.ui.Menu.superClass_.handleEnterItem.call(this, e)
};
goog.ui.Menu.prototype.highlightNextPrefix = function(charStr) {
  var re = new RegExp("^" + goog.string.regExpEscape(charStr), "i");
  return this.highlightHelper(function(index, max) {
    var start = index < 0 ? 0 : index;
    var wrapped = false;
    do {
      ++index;
      if(index == max) {
        index = 0;
        wrapped = true
      }
      var name = this.getChildAt(index).getCaption();
      if(name && name.match(re)) {
        return index
      }
    }while(!wrapped || index != start);
    return this.getHighlightedIndex()
  }, this.getHighlightedIndex())
};
goog.ui.Menu.prototype.canHighlightItem = function(item) {
  return(this.allowHighlightDisabled_ || item.isEnabled()) && item.isVisible() && item.isSupportedState(goog.ui.Component.State.HOVER)
};
goog.ui.Menu.prototype.decorateInternal = function(element) {
  this.decorateContent(element);
  goog.ui.Menu.superClass_.decorateInternal.call(this, element)
};
goog.ui.Menu.prototype.decorateContent = function(element) {
  var renderer = this.getRenderer();
  var contentElements = this.getDomHelper().getElementsByTagNameAndClass("div", goog.getCssName(renderer.getCssClass(), "content"), element);
  var length = contentElements.length;
  for(var i = 0;i < length;i++) {
    renderer.decorateChildren(this, contentElements[i])
  }
};
goog.provide("goog.ui.MenuButtonRenderer");
goog.require("goog.dom");
goog.require("goog.style");
goog.require("goog.ui.CustomButtonRenderer");
goog.require("goog.ui.INLINE_BLOCK_CLASSNAME");
goog.require("goog.ui.Menu");
goog.require("goog.ui.MenuRenderer");
goog.require("goog.userAgent");
goog.ui.MenuButtonRenderer = function() {
  goog.ui.CustomButtonRenderer.call(this)
};
goog.inherits(goog.ui.MenuButtonRenderer, goog.ui.CustomButtonRenderer);
goog.addSingletonGetter(goog.ui.MenuButtonRenderer);
goog.ui.MenuButtonRenderer.CSS_CLASS = goog.getCssName("goog-menu-button");
goog.ui.MenuButtonRenderer.WRAPPER_PROP_ = "__goog_wrapper_div";
if(goog.userAgent.GECKO) {
  goog.ui.MenuButtonRenderer.prototype.setContent = function(element, content) {
    var caption = goog.ui.MenuButtonRenderer.superClass_.getContentElement.call(this, element && element.firstChild);
    if(caption) {
      goog.dom.replaceNode(this.createCaption(content, goog.dom.getDomHelper(element)), caption)
    }
  }
}
goog.ui.MenuButtonRenderer.prototype.getContentElement = function(element) {
  var content = goog.ui.MenuButtonRenderer.superClass_.getContentElement.call(this, element && element.firstChild);
  if(goog.userAgent.GECKO && content && content[goog.ui.MenuButtonRenderer.WRAPPER_PROP_]) {
    content = content.firstChild
  }
  return content
};
goog.ui.MenuButtonRenderer.prototype.decorate = function(button, element) {
  var menuElem = goog.dom.getElementsByTagNameAndClass("*", goog.ui.MenuRenderer.CSS_CLASS, element)[0];
  if(menuElem) {
    goog.style.showElement(menuElem, false);
    goog.dom.appendChild(goog.dom.getOwnerDocument(menuElem).body, menuElem);
    var menu = new goog.ui.Menu;
    menu.decorate(menuElem);
    button.setMenu(menu)
  }
  return goog.ui.MenuButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.MenuButtonRenderer.prototype.createButton = function(content, dom) {
  return goog.ui.MenuButtonRenderer.superClass_.createButton.call(this, [this.createCaption(content, dom), this.createDropdown(dom)], dom)
};
goog.ui.MenuButtonRenderer.prototype.createCaption = function(content, dom) {
  return goog.ui.MenuButtonRenderer.wrapCaption(content, this.getCssClass(), dom)
};
goog.ui.MenuButtonRenderer.wrapCaption = function(content, cssClass, dom) {
  return dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + goog.getCssName(cssClass, "caption"), content)
};
goog.ui.MenuButtonRenderer.prototype.createDropdown = function(dom) {
  return dom.createDom("div", goog.ui.INLINE_BLOCK_CLASSNAME + " " + goog.getCssName(this.getCssClass(), "dropdown"), "\u00a0")
};
goog.ui.MenuButtonRenderer.prototype.getCssClass = function() {
  return goog.ui.MenuButtonRenderer.CSS_CLASS
};
goog.provide("goog.fx.DragEvent");
goog.provide("goog.fx.Dragger");
goog.provide("goog.fx.Dragger.EventType");
goog.require("goog.dom");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent.MouseButton");
goog.require("goog.events.Event");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Rect");
goog.require("goog.userAgent");
goog.fx.Dragger = function(target, opt_handle, opt_limits) {
  goog.events.EventTarget.call(this);
  this.target = target;
  this.handle = opt_handle || target;
  this.limits = opt_limits || new goog.math.Rect(NaN, NaN, NaN, NaN);
  this.document_ = goog.dom.getOwnerDocument(target);
  this.eventHandler_ = new goog.events.EventHandler(this);
  goog.events.listen(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this)
};
goog.inherits(goog.fx.Dragger, goog.events.EventTarget);
goog.fx.Dragger.HAS_SET_CAPTURE_ = goog.userAgent.IE || goog.userAgent.GECKO && goog.userAgent.isVersion("1.9.3");
goog.fx.Dragger.EventType = {EARLY_CANCEL:"earlycancel", START:"start", BEFOREDRAG:"beforedrag", DRAG:"drag", END:"end"};
goog.fx.Dragger.prototype.target;
goog.fx.Dragger.prototype.handle;
goog.fx.Dragger.prototype.limits;
goog.fx.Dragger.prototype.clientX = 0;
goog.fx.Dragger.prototype.clientY = 0;
goog.fx.Dragger.prototype.screenX = 0;
goog.fx.Dragger.prototype.screenY = 0;
goog.fx.Dragger.prototype.startX = 0;
goog.fx.Dragger.prototype.startY = 0;
goog.fx.Dragger.prototype.deltaX = 0;
goog.fx.Dragger.prototype.deltaY = 0;
goog.fx.Dragger.prototype.pageScroll;
goog.fx.Dragger.prototype.enabled_ = true;
goog.fx.Dragger.prototype.dragging_ = false;
goog.fx.Dragger.prototype.hysteresisDistanceSquared_ = 0;
goog.fx.Dragger.prototype.mouseDownTime_ = 0;
goog.fx.Dragger.prototype.document_;
goog.fx.Dragger.prototype.eventHandler_;
goog.fx.Dragger.prototype.scrollTarget_;
goog.fx.Dragger.prototype.ieDragStartCancellingOn_ = false;
goog.fx.Dragger.prototype.getHandler = function() {
  return this.eventHandler_
};
goog.fx.Dragger.prototype.setLimits = function(limits) {
  this.limits = limits || new goog.math.Rect(NaN, NaN, NaN, NaN)
};
goog.fx.Dragger.prototype.setHysteresis = function(distance) {
  this.hysteresisDistanceSquared_ = Math.pow(distance, 2)
};
goog.fx.Dragger.prototype.getHysteresis = function() {
  return Math.sqrt(this.hysteresisDistanceSquared_)
};
goog.fx.Dragger.prototype.setScrollTarget = function(scrollTarget) {
  this.scrollTarget_ = scrollTarget
};
goog.fx.Dragger.prototype.setCancelIeDragStart = function(cancelIeDragStart) {
  this.ieDragStartCancellingOn_ = cancelIeDragStart
};
goog.fx.Dragger.prototype.getEnabled = function() {
  return this.enabled_
};
goog.fx.Dragger.prototype.setEnabled = function(enabled) {
  this.enabled_ = enabled
};
goog.fx.Dragger.prototype.disposeInternal = function() {
  goog.fx.Dragger.superClass_.disposeInternal.call(this);
  goog.events.unlisten(this.handle, [goog.events.EventType.TOUCHSTART, goog.events.EventType.MOUSEDOWN], this.startDrag, false, this);
  this.eventHandler_.dispose();
  delete this.target;
  delete this.handle;
  delete this.eventHandler_
};
goog.fx.Dragger.prototype.startDrag = function(e) {
  var isMouseDown = e.type == goog.events.EventType.MOUSEDOWN;
  if(this.enabled_ && !this.dragging_ && (!isMouseDown || e.isMouseActionButton())) {
    this.maybeReinitTouchEvent_(e);
    if(this.hysteresisDistanceSquared_ == 0) {
      this.initializeDrag_(e);
      if(this.dragging_) {
        e.preventDefault()
      }else {
        return
      }
    }else {
      e.preventDefault()
    }
    this.setupDragHandlers();
    this.clientX = this.startX = e.clientX;
    this.clientY = this.startY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    this.deltaX = this.target.offsetLeft;
    this.deltaY = this.target.offsetTop;
    this.pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
    this.mouseDownTime_ = goog.now()
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
};
goog.fx.Dragger.prototype.setupDragHandlers = function() {
  var doc = this.document_;
  var docEl = doc.documentElement;
  var useCapture = !goog.fx.Dragger.HAS_SET_CAPTURE_;
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHMOVE, goog.events.EventType.MOUSEMOVE], this.handleMove_, useCapture);
  this.eventHandler_.listen(doc, [goog.events.EventType.TOUCHEND, goog.events.EventType.MOUSEUP], this.endDrag, useCapture);
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    docEl.setCapture(false);
    this.eventHandler_.listen(docEl, goog.events.EventType.LOSECAPTURE, this.endDrag)
  }else {
    this.eventHandler_.listen(goog.dom.getWindow(doc), goog.events.EventType.BLUR, this.endDrag)
  }
  if(goog.userAgent.IE && this.ieDragStartCancellingOn_) {
    this.eventHandler_.listen(doc, goog.events.EventType.DRAGSTART, goog.events.Event.preventDefault)
  }
  if(this.scrollTarget_) {
    this.eventHandler_.listen(this.scrollTarget_, goog.events.EventType.SCROLL, this.onScroll_, useCapture)
  }
};
goog.fx.Dragger.prototype.initializeDrag_ = function(e) {
  var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.START, this, e.clientX, e.clientY, e));
  if(rv !== false) {
    this.dragging_ = true
  }
};
goog.fx.Dragger.prototype.endDrag = function(e, opt_dragCanceled) {
  this.eventHandler_.removeAll();
  if(goog.fx.Dragger.HAS_SET_CAPTURE_) {
    this.document_.releaseCapture()
  }
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  if(this.dragging_) {
    this.maybeReinitTouchEvent_(e);
    this.dragging_ = false;
    var dragCancelled = opt_dragCanceled || e.type == goog.events.EventType.TOUCHCANCEL;
    this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.END, this, e.clientX, e.clientY, e, x, y, dragCancelled))
  }else {
    this.dispatchEvent(goog.fx.Dragger.EventType.EARLY_CANCEL)
  }
  if(e.type == goog.events.EventType.TOUCHEND || e.type == goog.events.EventType.TOUCHCANCEL) {
    e.preventDefault()
  }
};
goog.fx.Dragger.prototype.endDragCancel = function(e) {
  this.endDrag(e, true)
};
goog.fx.Dragger.prototype.maybeReinitTouchEvent_ = function(e) {
  var type = e.type;
  if(type == goog.events.EventType.TOUCHSTART || type == goog.events.EventType.TOUCHMOVE) {
    e.init(e.getBrowserEvent().targetTouches[0], e.currentTarget)
  }else {
    if(type == goog.events.EventType.TOUCHEND || type == goog.events.EventType.TOUCHCANCEL) {
      e.init(e.getBrowserEvent().changedTouches[0], e.currentTarget)
    }
  }
};
goog.fx.Dragger.prototype.handleMove_ = function(e) {
  if(this.enabled_) {
    this.maybeReinitTouchEvent_(e);
    var dx = e.clientX - this.clientX;
    var dy = e.clientY - this.clientY;
    this.clientX = e.clientX;
    this.clientY = e.clientY;
    this.screenX = e.screenX;
    this.screenY = e.screenY;
    if(!this.dragging_) {
      var diffX = this.startX - this.clientX;
      var diffY = this.startY - this.clientY;
      var distance = diffX * diffX + diffY * diffY;
      if(distance > this.hysteresisDistanceSquared_) {
        this.initializeDrag_(e);
        if(!this.dragging_) {
          this.endDrag(e);
          return
        }
      }
    }
    var pos = this.calculatePosition_(dx, dy);
    var x = pos.x;
    var y = pos.y;
    if(this.dragging_) {
      var rv = this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.BEFOREDRAG, this, e.clientX, e.clientY, e, x, y));
      if(rv !== false) {
        this.doDrag(e, x, y, false);
        e.preventDefault()
      }
    }
  }
};
goog.fx.Dragger.prototype.calculatePosition_ = function(dx, dy) {
  var pageScroll = goog.dom.getDomHelper(this.document_).getDocumentScroll();
  dx += pageScroll.x - this.pageScroll.x;
  dy += pageScroll.y - this.pageScroll.y;
  this.pageScroll = pageScroll;
  this.deltaX += dx;
  this.deltaY += dy;
  var x = this.limitX(this.deltaX);
  var y = this.limitY(this.deltaY);
  return new goog.math.Coordinate(x, y)
};
goog.fx.Dragger.prototype.onScroll_ = function(e) {
  var pos = this.calculatePosition_(0, 0);
  e.clientX = this.clientX;
  e.clientY = this.clientY;
  this.doDrag(e, pos.x, pos.y, true)
};
goog.fx.Dragger.prototype.doDrag = function(e, x, y, dragFromScroll) {
  this.defaultAction(x, y);
  this.dispatchEvent(new goog.fx.DragEvent(goog.fx.Dragger.EventType.DRAG, this, e.clientX, e.clientY, e, x, y))
};
goog.fx.Dragger.prototype.limitX = function(x) {
  var rect = this.limits;
  var left = !isNaN(rect.left) ? rect.left : null;
  var width = !isNaN(rect.width) ? rect.width : 0;
  var maxX = left != null ? left + width : Infinity;
  var minX = left != null ? left : -Infinity;
  return Math.min(maxX, Math.max(minX, x))
};
goog.fx.Dragger.prototype.limitY = function(y) {
  var rect = this.limits;
  var top = !isNaN(rect.top) ? rect.top : null;
  var height = !isNaN(rect.height) ? rect.height : 0;
  var maxY = top != null ? top + height : Infinity;
  var minY = top != null ? top : -Infinity;
  return Math.min(maxY, Math.max(minY, y))
};
goog.fx.Dragger.prototype.defaultAction = function(x, y) {
  this.target.style.left = x + "px";
  this.target.style.top = y + "px"
};
goog.fx.DragEvent = function(type, dragobj, clientX, clientY, browserEvent, opt_actX, opt_actY, opt_dragCanceled) {
  goog.events.Event.call(this, type);
  this.clientX = clientX;
  this.clientY = clientY;
  this.browserEvent = browserEvent;
  this.left = goog.isDef(opt_actX) ? opt_actX : dragobj.deltaX;
  this.top = goog.isDef(opt_actY) ? opt_actY : dragobj.deltaY;
  this.dragger = dragobj;
  this.dragCanceled = !!opt_dragCanceled
};
goog.inherits(goog.fx.DragEvent, goog.events.Event);
goog.provide("goog.dom.iframe");
goog.require("goog.dom");
goog.dom.iframe.BLANK_SOURCE = 'javascript:""';
goog.dom.iframe.STYLES_ = "border:0;vertical-align:bottom;";
goog.dom.iframe.createBlank = function(domHelper, opt_styles) {
  return domHelper.createDom("iframe", {"frameborder":0, "style":goog.dom.iframe.STYLES_ + (opt_styles || ""), "src":goog.dom.iframe.BLANK_SOURCE})
};
goog.dom.iframe.writeContent = function(iframe, content) {
  var doc = goog.dom.getFrameContentDocument(iframe);
  doc.open();
  doc.write(content);
  doc.close()
};
goog.dom.iframe.createWithContent = function(parentElement, opt_headContents, opt_bodyContents, opt_styles, opt_quirks) {
  var domHelper = goog.dom.getDomHelper(parentElement);
  var contentBuf = [];
  if(!opt_quirks) {
    contentBuf.push("<!DOCTYPE html>")
  }
  contentBuf.push("<html><head>", opt_headContents, "</head><body>", opt_bodyContents, "</body></html>");
  var iframe = goog.dom.iframe.createBlank(domHelper, opt_styles);
  parentElement.appendChild(iframe);
  goog.dom.iframe.writeContent(iframe, contentBuf.join(""));
  return iframe
};
goog.provide("goog.events.FocusHandler");
goog.provide("goog.events.FocusHandler.EventType");
goog.require("goog.events");
goog.require("goog.events.BrowserEvent");
goog.require("goog.events.EventTarget");
goog.require("goog.userAgent");
goog.events.FocusHandler = function(element) {
  goog.events.EventTarget.call(this);
  this.element_ = element;
  var typeIn = goog.userAgent.IE ? "focusin" : "focus";
  var typeOut = goog.userAgent.IE ? "focusout" : "blur";
  this.listenKeyIn_ = goog.events.listen(this.element_, typeIn, this, !goog.userAgent.IE);
  this.listenKeyOut_ = goog.events.listen(this.element_, typeOut, this, !goog.userAgent.IE)
};
goog.inherits(goog.events.FocusHandler, goog.events.EventTarget);
goog.events.FocusHandler.EventType = {FOCUSIN:"focusin", FOCUSOUT:"focusout"};
goog.events.FocusHandler.prototype.handleEvent = function(e) {
  var be = e.getBrowserEvent();
  var event = new goog.events.BrowserEvent(be);
  event.type = e.type == "focusin" || e.type == "focus" ? goog.events.FocusHandler.EventType.FOCUSIN : goog.events.FocusHandler.EventType.FOCUSOUT;
  try {
    this.dispatchEvent(event)
  }finally {
    event.dispose()
  }
};
goog.events.FocusHandler.prototype.disposeInternal = function() {
  goog.events.FocusHandler.superClass_.disposeInternal.call(this);
  goog.events.unlistenByKey(this.listenKeyIn_);
  goog.events.unlistenByKey(this.listenKeyOut_);
  delete this.element_
};
goog.provide("goog.fx.Transition");
goog.provide("goog.fx.Transition.EventType");
goog.fx.Transition = function() {
};
goog.fx.Transition.EventType = {PLAY:"play", BEGIN:"begin", RESUME:"resume", END:"end", STOP:"stop", FINISH:"finish", PAUSE:"pause"};
goog.fx.Transition.prototype.play;
goog.fx.Transition.prototype.stop;
goog.provide("goog.ui.PopupBase");
goog.provide("goog.ui.PopupBase.EventType");
goog.provide("goog.ui.PopupBase.Type");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventTarget");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.fx.Transition");
goog.require("goog.fx.Transition.EventType");
goog.require("goog.style");
goog.require("goog.userAgent");
goog.ui.PopupBase = function(opt_element, opt_type) {
  goog.events.EventTarget.call(this);
  this.handler_ = new goog.events.EventHandler(this);
  this.setElement(opt_element || null);
  if(opt_type) {
    this.setType(opt_type)
  }
};
goog.inherits(goog.ui.PopupBase, goog.events.EventTarget);
goog.ui.PopupBase.Type = {TOGGLE_DISPLAY:"toggle_display", MOVE_OFFSCREEN:"move_offscreen"};
goog.ui.PopupBase.prototype.element_ = null;
goog.ui.PopupBase.prototype.autoHide_ = true;
goog.ui.PopupBase.prototype.autoHideRegion_ = null;
goog.ui.PopupBase.prototype.isVisible_ = false;
goog.ui.PopupBase.prototype.shouldHideAsync_ = false;
goog.ui.PopupBase.prototype.lastShowTime_ = -1;
goog.ui.PopupBase.prototype.lastHideTime_ = -1;
goog.ui.PopupBase.prototype.hideOnEscape_ = false;
goog.ui.PopupBase.prototype.enableCrossIframeDismissal_ = true;
goog.ui.PopupBase.prototype.type_ = goog.ui.PopupBase.Type.TOGGLE_DISPLAY;
goog.ui.PopupBase.prototype.showTransition_;
goog.ui.PopupBase.prototype.hideTransition_;
goog.ui.PopupBase.EventType = {BEFORE_SHOW:"beforeshow", SHOW:"show", BEFORE_HIDE:"beforehide", HIDE:"hide"};
goog.ui.PopupBase.DEBOUNCE_DELAY_MS = 150;
goog.ui.PopupBase.prototype.getType = function() {
  return this.type_
};
goog.ui.PopupBase.prototype.setType = function(type) {
  this.type_ = type
};
goog.ui.PopupBase.prototype.shouldHideAsync = function() {
  return this.shouldHideAsync_
};
goog.ui.PopupBase.prototype.setShouldHideAsync = function(b) {
  this.shouldHideAsync_ = b
};
goog.ui.PopupBase.prototype.getElement = function() {
  return this.element_
};
goog.ui.PopupBase.prototype.setElement = function(elt) {
  this.ensureNotVisible_();
  this.element_ = elt
};
goog.ui.PopupBase.prototype.getAutoHide = function() {
  return this.autoHide_
};
goog.ui.PopupBase.prototype.setAutoHide = function(autoHide) {
  this.ensureNotVisible_();
  this.autoHide_ = autoHide
};
goog.ui.PopupBase.prototype.getHideOnEscape = function() {
  return this.hideOnEscape_
};
goog.ui.PopupBase.prototype.setHideOnEscape = function(hideOnEscape) {
  this.ensureNotVisible_();
  this.hideOnEscape_ = hideOnEscape
};
goog.ui.PopupBase.prototype.getEnableCrossIframeDismissal = function() {
  return this.enableCrossIframeDismissal_
};
goog.ui.PopupBase.prototype.setEnableCrossIframeDismissal = function(enable) {
  this.enableCrossIframeDismissal_ = enable
};
goog.ui.PopupBase.prototype.getAutoHideRegion = function() {
  return this.autoHideRegion_
};
goog.ui.PopupBase.prototype.setAutoHideRegion = function(element) {
  this.autoHideRegion_ = element
};
goog.ui.PopupBase.prototype.setTransition = function(opt_showTransition, opt_hideTransition) {
  this.showTransition_ = opt_showTransition;
  this.hideTransition_ = opt_hideTransition
};
goog.ui.PopupBase.prototype.getLastShowTime = function() {
  return this.lastShowTime_
};
goog.ui.PopupBase.prototype.getLastHideTime = function() {
  return this.lastHideTime_
};
goog.ui.PopupBase.prototype.ensureNotVisible_ = function() {
  if(this.isVisible_) {
    throw Error("Can not change this state of the popup while showing.");
  }
};
goog.ui.PopupBase.prototype.isVisible = function() {
  return this.isVisible_
};
goog.ui.PopupBase.prototype.isOrWasRecentlyVisible = function() {
  return this.isVisible_ || goog.now() - this.lastHideTime_ < goog.ui.PopupBase.DEBOUNCE_DELAY_MS
};
goog.ui.PopupBase.prototype.setVisible = function(visible) {
  if(this.showTransition_) {
    this.showTransition_.stop()
  }
  if(this.hideTransition_) {
    this.hideTransition_.stop()
  }
  if(visible) {
    this.show_()
  }else {
    this.hide_()
  }
};
goog.ui.PopupBase.prototype.reposition = goog.nullFunction;
goog.ui.PopupBase.prototype.show_ = function() {
  if(this.isVisible_) {
    return
  }
  if(!this.onBeforeShow()) {
    return
  }
  if(!this.element_) {
    throw Error("Caller must call setElement before trying to show the popup");
  }
  this.reposition();
  var doc = goog.dom.getOwnerDocument(this.element_);
  if(this.hideOnEscape_) {
    this.handler_.listen(doc, goog.events.EventType.KEYDOWN, this.onDocumentKeyDown_, true)
  }
  if(this.autoHide_) {
    this.handler_.listen(doc, goog.events.EventType.MOUSEDOWN, this.onDocumentMouseDown_, true);
    if(goog.userAgent.IE) {
      var activeElement;
      try {
        activeElement = doc.activeElement
      }catch(e) {
      }
      while(activeElement && activeElement.nodeName == "IFRAME") {
        try {
          var tempDoc = goog.dom.getFrameContentDocument(activeElement)
        }catch(e) {
          break
        }
        doc = tempDoc;
        activeElement = doc.activeElement
      }
      this.handler_.listen(doc, goog.events.EventType.MOUSEDOWN, this.onDocumentMouseDown_, true);
      this.handler_.listen(doc, goog.events.EventType.DEACTIVATE, this.onDocumentBlur_)
    }else {
      this.handler_.listen(doc, goog.events.EventType.BLUR, this.onDocumentBlur_)
    }
  }
  if(this.type_ == goog.ui.PopupBase.Type.TOGGLE_DISPLAY) {
    this.showPopupElement()
  }else {
    if(this.type_ == goog.ui.PopupBase.Type.MOVE_OFFSCREEN) {
      this.reposition()
    }
  }
  this.isVisible_ = true;
  if(this.showTransition_) {
    goog.events.listenOnce(this.showTransition_, goog.fx.Transition.EventType.END, this.onShow_, false, this);
    this.showTransition_.play()
  }else {
    this.onShow_()
  }
};
goog.ui.PopupBase.prototype.hide_ = function(opt_target) {
  if(!this.isVisible_ || !this.onBeforeHide_(opt_target)) {
    return false
  }
  if(this.handler_) {
    this.handler_.removeAll()
  }
  if(this.hideTransition_) {
    goog.events.listenOnce(this.hideTransition_, goog.fx.Transition.EventType.END, goog.partial(this.continueHidingPopup_, opt_target), false, this);
    this.hideTransition_.play()
  }else {
    this.continueHidingPopup_(opt_target)
  }
  return true
};
goog.ui.PopupBase.prototype.continueHidingPopup_ = function(opt_target) {
  if(this.type_ == goog.ui.PopupBase.Type.TOGGLE_DISPLAY) {
    if(this.shouldHideAsync_) {
      goog.Timer.callOnce(this.hidePopupElement_, 0, this)
    }else {
      this.hidePopupElement_()
    }
  }else {
    if(this.type_ == goog.ui.PopupBase.Type.MOVE_OFFSCREEN) {
      this.moveOffscreen_()
    }
  }
  this.isVisible_ = false;
  this.onHide_(opt_target)
};
goog.ui.PopupBase.prototype.showPopupElement = function() {
  this.element_.style.visibility = "visible";
  goog.style.showElement(this.element_, true)
};
goog.ui.PopupBase.prototype.hidePopupElement_ = function() {
  this.element_.style.visibility = "hidden";
  goog.style.showElement(this.element_, false)
};
goog.ui.PopupBase.prototype.moveOffscreen_ = function() {
  this.element_.style.left = "-200px";
  this.element_.style.top = "-200px"
};
goog.ui.PopupBase.prototype.onBeforeShow = function() {
  return this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_SHOW)
};
goog.ui.PopupBase.prototype.onShow_ = function() {
  this.lastShowTime_ = goog.now();
  this.lastHideTime_ = -1;
  this.dispatchEvent(goog.ui.PopupBase.EventType.SHOW)
};
goog.ui.PopupBase.prototype.onBeforeHide_ = function(opt_target) {
  return this.dispatchEvent({type:goog.ui.PopupBase.EventType.BEFORE_HIDE, target:opt_target})
};
goog.ui.PopupBase.prototype.onHide_ = function(opt_target) {
  this.lastHideTime_ = goog.now();
  this.dispatchEvent({type:goog.ui.PopupBase.EventType.HIDE, target:opt_target})
};
goog.ui.PopupBase.prototype.onDocumentMouseDown_ = function(e) {
  var target = e.target;
  if(!goog.dom.contains(this.element_, target) && (!this.autoHideRegion_ || goog.dom.contains(this.autoHideRegion_, target)) && !this.shouldDebounce_()) {
    this.hide_(target)
  }
};
goog.ui.PopupBase.prototype.onDocumentKeyDown_ = function(e) {
  if(e.keyCode == goog.events.KeyCodes.ESC) {
    if(this.hide_(e.target)) {
      e.preventDefault();
      e.stopPropagation()
    }
  }
};
goog.ui.PopupBase.prototype.onDocumentBlur_ = function(e) {
  if(!this.enableCrossIframeDismissal_) {
    return
  }
  var doc = goog.dom.getOwnerDocument(this.element_);
  if(goog.userAgent.IE || goog.userAgent.OPERA) {
    var activeElement = doc.activeElement;
    if(!activeElement || goog.dom.contains(this.element_, activeElement) || activeElement.tagName == "BODY") {
      return
    }
  }else {
    if(e.target != doc) {
      return
    }
  }
  if(this.shouldDebounce_()) {
    return
  }
  this.hide_()
};
goog.ui.PopupBase.prototype.shouldDebounce_ = function() {
  return goog.now() - this.lastShowTime_ < goog.ui.PopupBase.DEBOUNCE_DELAY_MS
};
goog.ui.PopupBase.prototype.disposeInternal = function() {
  goog.base(this, "disposeInternal");
  this.handler_.dispose();
  goog.dispose(this.showTransition_);
  goog.dispose(this.hideTransition_);
  delete this.element_;
  delete this.handler_
};
goog.provide("goog.ui.ModalPopup");
goog.require("goog.Timer");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.require("goog.dom.classes");
goog.require("goog.dom.iframe");
goog.require("goog.events");
goog.require("goog.events.EventType");
goog.require("goog.events.FocusHandler");
goog.require("goog.style");
goog.require("goog.ui.Component");
goog.require("goog.ui.PopupBase.EventType");
goog.require("goog.userAgent");
goog.ui.ModalPopup = function(opt_useIframeMask, opt_domHelper) {
  goog.base(this, opt_domHelper);
  this.useIframeMask_ = !!opt_useIframeMask
};
goog.inherits(goog.ui.ModalPopup, goog.ui.Component);
goog.ui.ModalPopup.prototype.focusHandler_ = null;
goog.ui.ModalPopup.prototype.visible_ = false;
goog.ui.ModalPopup.prototype.bgEl_ = null;
goog.ui.ModalPopup.prototype.bgIframeEl_ = null;
goog.ui.ModalPopup.prototype.tabCatcherElement_ = null;
goog.ui.ModalPopup.prototype.getCssClass = function() {
  return goog.getCssName("goog-modalpopup")
};
goog.ui.ModalPopup.prototype.getBackgroundIframe = function() {
  return this.bgIframeEl_
};
goog.ui.ModalPopup.prototype.getBackgroundElement = function() {
  return this.bgEl_
};
goog.ui.ModalPopup.prototype.createDom = function() {
  goog.base(this, "createDom");
  var element = this.getElement();
  goog.dom.classes.add(element, this.getCssClass());
  goog.dom.setFocusableTabIndex(element, true);
  goog.style.showElement(element, false);
  this.manageBackgroundDom_();
  this.createTabCatcher_()
};
goog.ui.ModalPopup.prototype.manageBackgroundDom_ = function() {
  if(this.useIframeMask_ && !this.bgIframeEl_) {
    this.bgIframeEl_ = goog.dom.iframe.createBlank(this.getDomHelper());
    this.bgIframeEl_.className = goog.getCssName(this.getCssClass(), "bg");
    goog.style.showElement(this.bgIframeEl_, false);
    goog.style.setOpacity(this.bgIframeEl_, 0)
  }
  if(!this.bgEl_) {
    this.bgEl_ = this.getDomHelper().createDom("div", goog.getCssName(this.getCssClass(), "bg"));
    goog.style.showElement(this.bgEl_, false)
  }
};
goog.ui.ModalPopup.prototype.createTabCatcher_ = function() {
  if(!this.tabCatcherElement_) {
    this.tabCatcherElement_ = this.getDomHelper().createElement("span");
    goog.style.showElement(this.tabCatcherElement_, false);
    goog.dom.setFocusableTabIndex(this.tabCatcherElement_, true);
    this.tabCatcherElement_.style.position = "absolute"
  }
};
goog.ui.ModalPopup.prototype.renderBackground_ = function() {
  goog.asserts.assert(!!this.bgEl_, "Background element must not be null.");
  if(this.bgIframeEl_) {
    goog.dom.insertSiblingBefore(this.bgIframeEl_, this.getElement())
  }
  goog.dom.insertSiblingBefore(this.bgEl_, this.getElement())
};
goog.ui.ModalPopup.prototype.canDecorate = function(element) {
  return!!element && element.tagName == goog.dom.TagName.DIV
};
goog.ui.ModalPopup.prototype.decorateInternal = function(element) {
  goog.base(this, "decorateInternal", element);
  goog.dom.classes.add(this.getElement(), this.getCssClass());
  this.manageBackgroundDom_();
  this.createTabCatcher_();
  goog.style.showElement(this.getElement(), false)
};
goog.ui.ModalPopup.prototype.enterDocument = function() {
  this.renderBackground_();
  goog.base(this, "enterDocument");
  goog.dom.insertSiblingAfter(this.tabCatcherElement_, this.getElement());
  this.focusHandler_ = new goog.events.FocusHandler(this.getDomHelper().getDocument());
  this.getHandler().listen(this.focusHandler_, goog.events.FocusHandler.EventType.FOCUSIN, this.onFocus_)
};
goog.ui.ModalPopup.prototype.exitDocument = function() {
  if(this.isVisible()) {
    this.setVisible(false)
  }
  goog.dispose(this.focusHandler_);
  goog.base(this, "exitDocument");
  goog.dom.removeNode(this.bgIframeEl_);
  goog.dom.removeNode(this.bgEl_);
  goog.dom.removeNode(this.tabCatcherElement_)
};
goog.ui.ModalPopup.prototype.setVisible = function(visible) {
  goog.asserts.assert(this.isInDocument(), "ModalPopup must be rendered first.");
  if(visible == this.visible_) {
    return
  }
  if(visible) {
    this.show_()
  }else {
    this.hide_()
  }
};
goog.ui.ModalPopup.prototype.show_ = function() {
  if(!this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_SHOW)) {
    return
  }
  this.resizeBackground_();
  this.reposition();
  this.getHandler().listen(this.getDomHelper().getWindow(), goog.events.EventType.RESIZE, this.resizeBackground_);
  this.showPopupElement_(true);
  this.focus();
  this.visible_ = true;
  this.dispatchEvent(goog.ui.PopupBase.EventType.SHOW)
};
goog.ui.ModalPopup.prototype.hide_ = function() {
  if(!this.dispatchEvent(goog.ui.PopupBase.EventType.BEFORE_HIDE)) {
    return
  }
  this.getHandler().unlisten(this.getDomHelper().getWindow(), goog.events.EventType.RESIZE, this.resizeBackground_);
  this.showPopupElement_(false);
  this.visible_ = false;
  this.dispatchEvent(goog.ui.PopupBase.EventType.HIDE)
};
goog.ui.ModalPopup.prototype.showPopupElement_ = function(visible) {
  if(this.bgIframeEl_) {
    goog.style.showElement(this.bgIframeEl_, visible)
  }
  if(this.bgEl_) {
    goog.style.showElement(this.bgEl_, visible)
  }
  goog.style.showElement(this.getElement(), visible);
  goog.style.showElement(this.tabCatcherElement_, visible)
};
goog.ui.ModalPopup.prototype.isVisible = function() {
  return this.visible_
};
goog.ui.ModalPopup.prototype.focus = function() {
  this.focusElement_()
};
goog.ui.ModalPopup.prototype.resizeBackground_ = function() {
  if(this.bgIframeEl_) {
    goog.style.showElement(this.bgIframeEl_, false)
  }
  if(this.bgEl_) {
    goog.style.showElement(this.bgEl_, false)
  }
  var doc = this.getDomHelper().getDocument();
  var win = goog.dom.getWindow(doc) || window;
  var viewSize = goog.dom.getViewportSize(win);
  var w = Math.max(doc.body.scrollWidth, viewSize.width);
  var h = Math.max(doc.body.scrollHeight, viewSize.height);
  if(this.bgIframeEl_) {
    goog.style.showElement(this.bgIframeEl_, true);
    goog.style.setSize(this.bgIframeEl_, w, h)
  }
  if(this.bgEl_) {
    goog.style.showElement(this.bgEl_, true);
    goog.style.setSize(this.bgEl_, w, h)
  }
};
goog.ui.ModalPopup.prototype.reposition = function() {
  var doc = this.getDomHelper().getDocument();
  var win = goog.dom.getWindow(doc) || window;
  if(goog.style.getComputedPosition(this.getElement()) == "fixed") {
    var x = 0;
    var y = 0
  }else {
    var scroll = this.getDomHelper().getDocumentScroll();
    var x = scroll.x;
    var y = scroll.y
  }
  var popupSize = goog.style.getSize(this.getElement());
  var viewSize = goog.dom.getViewportSize(win);
  var left = Math.max(x + viewSize.width / 2 - popupSize.width / 2, 0);
  var top = Math.max(y + viewSize.height / 2 - popupSize.height / 2, 0);
  goog.style.setPosition(this.getElement(), left, top);
  goog.style.setPosition(this.tabCatcherElement_, left, top)
};
goog.ui.ModalPopup.prototype.onFocus_ = function(e) {
  if(e.target == this.tabCatcherElement_) {
    goog.Timer.callOnce(this.focusElement_, 0, this)
  }
};
goog.ui.ModalPopup.prototype.focusElement_ = function() {
  try {
    if(goog.userAgent.IE) {
      this.getDomHelper().getDocument().body.focus()
    }
    this.getElement().focus()
  }catch(e) {
  }
};
goog.provide("goog.ui.Dialog");
goog.provide("goog.ui.Dialog.ButtonSet");
goog.provide("goog.ui.Dialog.ButtonSet.DefaultButtons");
goog.provide("goog.ui.Dialog.DefaultButtonCaptions");
goog.provide("goog.ui.Dialog.DefaultButtonKeys");
goog.provide("goog.ui.Dialog.Event");
goog.provide("goog.ui.Dialog.EventType");
goog.require("goog.asserts");
goog.require("goog.dom");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.dom.a11y");
goog.require("goog.dom.classes");
goog.require("goog.events.Event");
goog.require("goog.events.EventType");
goog.require("goog.events.KeyCodes");
goog.require("goog.fx.Dragger");
goog.require("goog.math.Rect");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.style");
goog.require("goog.ui.ModalPopup");
goog.require("goog.userAgent");
goog.ui.Dialog = function(opt_class, opt_useIframeMask, opt_domHelper) {
  goog.base(this, opt_useIframeMask, opt_domHelper);
  this.class_ = opt_class || goog.getCssName("modal-dialog");
  this.buttons_ = goog.ui.Dialog.ButtonSet.createOkCancel()
};
goog.inherits(goog.ui.Dialog, goog.ui.ModalPopup);
goog.ui.Dialog.prototype.buttons_;
goog.ui.Dialog.prototype.escapeToCancel_ = true;
goog.ui.Dialog.prototype.hasTitleCloseButton_ = true;
goog.ui.Dialog.prototype.modal_ = true;
goog.ui.Dialog.prototype.draggable_ = true;
goog.ui.Dialog.prototype.backgroundElementOpacity_ = 0.5;
goog.ui.Dialog.prototype.title_ = "";
goog.ui.Dialog.prototype.content_ = "";
goog.ui.Dialog.prototype.dragger_ = null;
goog.ui.Dialog.prototype.disposeOnHide_ = false;
goog.ui.Dialog.prototype.titleEl_ = null;
goog.ui.Dialog.prototype.titleTextEl_ = null;
goog.ui.Dialog.prototype.titleId_ = null;
goog.ui.Dialog.prototype.titleCloseEl_ = null;
goog.ui.Dialog.prototype.contentEl_ = null;
goog.ui.Dialog.prototype.buttonEl_ = null;
goog.ui.Dialog.prototype.getCssClass = function() {
  return this.class_
};
goog.ui.Dialog.prototype.setTitle = function(title) {
  this.title_ = title;
  if(this.titleTextEl_) {
    goog.dom.setTextContent(this.titleTextEl_, title)
  }
};
goog.ui.Dialog.prototype.getTitle = function() {
  return this.title_
};
goog.ui.Dialog.prototype.setContent = function(html) {
  this.content_ = html;
  if(this.contentEl_) {
    this.contentEl_.innerHTML = html
  }
};
goog.ui.Dialog.prototype.getContent = function() {
  return this.content_
};
goog.ui.Dialog.prototype.renderIfNoDom_ = function() {
  if(!this.getElement()) {
    this.render()
  }
};
goog.ui.Dialog.prototype.getContentElement = function() {
  this.renderIfNoDom_();
  return this.contentEl_
};
goog.ui.Dialog.prototype.getTitleElement = function() {
  this.renderIfNoDom_();
  return this.titleEl_
};
goog.ui.Dialog.prototype.getTitleTextElement = function() {
  this.renderIfNoDom_();
  return this.titleTextEl_
};
goog.ui.Dialog.prototype.getTitleCloseElement = function() {
  this.renderIfNoDom_();
  return this.titleCloseEl_
};
goog.ui.Dialog.prototype.getButtonElement = function() {
  this.renderIfNoDom_();
  return this.buttonEl_
};
goog.ui.Dialog.prototype.getDialogElement = function() {
  this.renderIfNoDom_();
  return this.getElement()
};
goog.ui.Dialog.prototype.getBackgroundElement = function() {
  this.renderIfNoDom_();
  return goog.base(this, "getBackgroundElement")
};
goog.ui.Dialog.prototype.getBackgroundElementOpacity = function() {
  return this.backgroundElementOpacity_
};
goog.ui.Dialog.prototype.setBackgroundElementOpacity = function(opacity) {
  this.backgroundElementOpacity_ = opacity;
  if(this.getElement()) {
    var bgEl = this.getBackgroundElement();
    if(bgEl) {
      goog.style.setOpacity(bgEl, this.backgroundElementOpacity_)
    }
  }
};
goog.ui.Dialog.prototype.setModal = function(modal) {
  if(modal != this.modal_) {
    this.setModalInternal_(modal)
  }
};
goog.ui.Dialog.prototype.setModalInternal_ = function(modal) {
  this.modal_ = modal;
  if(this.isInDocument()) {
    var dom = this.getDomHelper();
    var bg = this.getBackgroundElement();
    var bgIframe = this.getBackgroundIframe();
    if(modal) {
      if(bgIframe) {
        dom.insertSiblingBefore(bgIframe, this.getElement())
      }
      dom.insertSiblingBefore(bg, this.getElement())
    }else {
      dom.removeNode(bgIframe);
      dom.removeNode(bg)
    }
  }
};
goog.ui.Dialog.prototype.getModal = function() {
  return this.modal_
};
goog.ui.Dialog.prototype.getClass = function() {
  return this.getCssClass()
};
goog.ui.Dialog.prototype.setDraggable = function(draggable) {
  this.draggable_ = draggable;
  this.setDraggingEnabled_(draggable && this.isInDocument())
};
goog.ui.Dialog.prototype.createDragger = function() {
  return new goog.fx.Dragger(this.getElement(), this.titleEl_)
};
goog.ui.Dialog.prototype.getDraggable = function() {
  return this.draggable_
};
goog.ui.Dialog.prototype.setDraggingEnabled_ = function(enabled) {
  if(this.getElement()) {
    goog.dom.classes.enable(this.titleEl_, goog.getCssName(this.class_, "title-draggable"), enabled)
  }
  if(enabled && !this.dragger_) {
    this.dragger_ = this.createDragger();
    goog.dom.classes.add(this.titleEl_, goog.getCssName(this.class_, "title-draggable"));
    goog.events.listen(this.dragger_, goog.fx.Dragger.EventType.START, this.setDraggerLimits_, false, this)
  }else {
    if(!enabled && this.dragger_) {
      this.dragger_.dispose();
      this.dragger_ = null
    }
  }
};
goog.ui.Dialog.prototype.createDom = function() {
  goog.base(this, "createDom");
  var element = this.getElement();
  goog.asserts.assert(element, "getElement() returns null");
  var dom = this.getDomHelper();
  this.titleEl_ = dom.createDom("div", {"className":goog.getCssName(this.class_, "title"), "id":this.getId()}, this.titleTextEl_ = dom.createDom("span", goog.getCssName(this.class_, "title-text"), this.title_), this.titleCloseEl_ = dom.createDom("span", goog.getCssName(this.class_, "title-close"))), goog.dom.append(element, this.titleEl_, this.contentEl_ = dom.createDom("div", goog.getCssName(this.class_, "content")), this.buttonEl_ = dom.createDom("div", goog.getCssName(this.class_, "buttons")));
  this.titleId_ = this.titleEl_.id;
  goog.dom.a11y.setRole(element, "dialog");
  goog.dom.a11y.setState(element, "labelledby", this.titleId_ || "");
  if(this.content_) {
    this.contentEl_.innerHTML = this.content_
  }
  goog.style.showElement(this.titleCloseEl_, this.hasTitleCloseButton_);
  if(this.buttons_) {
    this.buttons_.attachToElement(this.buttonEl_)
  }
  goog.style.showElement(this.buttonEl_, !!this.buttons_);
  this.setBackgroundElementOpacity(this.backgroundElementOpacity_)
};
goog.ui.Dialog.prototype.decorateInternal = function(element) {
  goog.base(this, "decorateInternal", element);
  var contentClass = goog.getCssName(this.class_, "content");
  this.contentEl_ = goog.dom.getElementsByTagNameAndClass(null, contentClass, this.getElement())[0];
  if(this.contentEl_) {
    this.content_ = this.contentEl_.innerHTML
  }else {
    this.contentEl_ = this.getDomHelper().createDom("div", contentClass);
    if(this.content_) {
      this.contentEl_.innerHTML = this.content_
    }
    this.getElement().appendChild(this.contentEl_)
  }
  var titleClass = goog.getCssName(this.class_, "title");
  var titleTextClass = goog.getCssName(this.class_, "title-text");
  var titleCloseClass = goog.getCssName(this.class_, "title-close");
  this.titleEl_ = goog.dom.getElementsByTagNameAndClass(null, titleClass, this.getElement())[0];
  if(this.titleEl_) {
    this.titleTextEl_ = goog.dom.getElementsByTagNameAndClass(null, titleTextClass, this.titleEl_)[0];
    this.titleCloseEl_ = goog.dom.getElementsByTagNameAndClass(null, titleCloseClass, this.titleEl_)[0]
  }else {
    this.titleEl_ = this.getDomHelper().createDom("div", titleClass);
    this.getElement().insertBefore(this.titleEl_, this.contentEl_)
  }
  if(this.titleTextEl_) {
    this.title_ = goog.dom.getTextContent(this.titleTextEl_)
  }else {
    this.titleTextEl_ = this.getDomHelper().createDom("span", titleTextClass, this.title_);
    this.titleEl_.appendChild(this.titleTextEl_)
  }
  goog.dom.a11y.setState(this.getElement(), "labelledby", this.titleId_ || "");
  if(!this.titleCloseEl_) {
    this.titleCloseEl_ = this.getDomHelper().createDom("span", titleCloseClass);
    this.titleEl_.appendChild(this.titleCloseEl_)
  }
  goog.style.showElement(this.titleCloseEl_, this.hasTitleCloseButton_);
  var buttonsClass = goog.getCssName(this.class_, "buttons");
  this.buttonEl_ = goog.dom.getElementsByTagNameAndClass(null, buttonsClass, this.getElement())[0];
  if(this.buttonEl_) {
    this.buttons_ = new goog.ui.Dialog.ButtonSet(this.getDomHelper());
    this.buttons_.decorate(this.buttonEl_)
  }else {
    this.buttonEl_ = this.getDomHelper().createDom("div", buttonsClass);
    this.getElement().appendChild(this.buttonEl_);
    if(this.buttons_) {
      this.buttons_.attachToElement(this.buttonEl_)
    }
    goog.style.showElement(this.buttonEl_, !!this.buttons_)
  }
  this.setBackgroundElementOpacity(this.backgroundElementOpacity_)
};
goog.ui.Dialog.prototype.enterDocument = function() {
  goog.base(this, "enterDocument");
  this.getHandler().listen(this, [goog.ui.PopupBase.EventType.SHOW, goog.ui.PopupBase.EventType.HIDE], this.setVisibleInternal_);
  this.setDraggingEnabled_(this.draggable_);
  this.getHandler().listen(this.titleCloseEl_, goog.events.EventType.CLICK, this.onTitleCloseClick_);
  goog.dom.a11y.setRole(this.getElement(), "dialog");
  if(this.titleTextEl_.id !== "") {
    goog.dom.a11y.setState(this.getElement(), "labelledby", this.titleTextEl_.id)
  }
  if(!this.modal_) {
    this.setModalInternal_(false)
  }
};
goog.ui.Dialog.prototype.exitDocument = function() {
  if(this.isVisible()) {
    this.setVisible(false)
  }
  this.setDraggingEnabled_(false);
  goog.base(this, "exitDocument")
};
goog.ui.Dialog.prototype.setVisible = function(visible) {
  if(visible == this.isVisible()) {
    return
  }
  if(!this.isInDocument()) {
    this.render()
  }
  goog.base(this, "setVisible", visible)
};
goog.ui.Dialog.prototype.setVisibleInternal_ = function(e) {
  if(e.target != this) {
    return
  }
  var visible = this.isVisible();
  if(visible) {
    this.getHandler().listen(this.getElement(), goog.events.EventType.KEYDOWN, this.onKey_).listen(this.getElement(), goog.events.EventType.KEYPRESS, this.onKey_);
    this.dispatchEvent(goog.ui.Dialog.EventType.AFTER_SHOW);
    this.getHandler().listen(this.buttonEl_, goog.events.EventType.CLICK, this.onButtonClick_)
  }else {
    this.getHandler().unlisten(this.getElement(), goog.events.EventType.KEYDOWN, this.onKey_).unlisten(this.getElement(), goog.events.EventType.KEYPRESS, this.onKey_).unlisten(this.buttonEl_, goog.events.EventType.CLICK, this.onButtonClick_);
    this.dispatchEvent(goog.ui.Dialog.EventType.AFTER_HIDE);
    if(this.disposeOnHide_) {
      this.dispose()
    }
  }
};
goog.ui.Dialog.prototype.focus = function() {
  goog.base(this, "focus");
  if(this.getButtonSet()) {
    var defaultButton = this.getButtonSet().getDefault();
    if(defaultButton) {
      var doc = this.getDomHelper().getDocument();
      var buttons = this.buttonEl_.getElementsByTagName("button");
      for(var i = 0, button;button = buttons[i];i++) {
        if(button.name == defaultButton) {
          try {
            if(goog.userAgent.WEBKIT || goog.userAgent.OPERA) {
              var temp = doc.createElement("input");
              temp.style.cssText = "position:fixed;width:0;height:0;left:0;top:0;";
              this.getElement().appendChild(temp);
              temp.focus();
              this.getElement().removeChild(temp)
            }
            button.focus()
          }catch(e) {
          }
          break
        }
      }
    }
  }
};
goog.ui.Dialog.prototype.setDraggerLimits_ = function(e) {
  var doc = this.getDomHelper().getDocument();
  var win = goog.dom.getWindow(doc) || window;
  var viewSize = goog.dom.getViewportSize(win);
  var w = Math.max(doc.body.scrollWidth, viewSize.width);
  var h = Math.max(doc.body.scrollHeight, viewSize.height);
  var dialogSize = goog.style.getSize(this.getElement());
  if(goog.style.getComputedPosition(this.getElement()) == "fixed") {
    this.dragger_.setLimits(new goog.math.Rect(0, 0, Math.max(0, viewSize.width - dialogSize.width), Math.max(0, viewSize.height - dialogSize.height)))
  }else {
    this.dragger_.setLimits(new goog.math.Rect(0, 0, w - dialogSize.width, h - dialogSize.height))
  }
};
goog.ui.Dialog.prototype.onTitleCloseClick_ = function(e) {
  if(!this.hasTitleCloseButton_) {
    return
  }
  var bs = this.getButtonSet();
  var key = bs && bs.getCancel();
  if(key) {
    var caption = bs.get(key);
    if(this.dispatchEvent(new goog.ui.Dialog.Event(key, caption))) {
      this.setVisible(false)
    }
  }else {
    this.setVisible(false)
  }
};
goog.ui.Dialog.prototype.getHasTitleCloseButton = function() {
  return this.hasTitleCloseButton_
};
goog.ui.Dialog.prototype.setHasTitleCloseButton = function(b) {
  this.hasTitleCloseButton_ = b;
  if(this.titleCloseEl_) {
    goog.style.showElement(this.titleCloseEl_, this.hasTitleCloseButton_)
  }
};
goog.ui.Dialog.prototype.isEscapeToCancel = function() {
  return this.escapeToCancel_
};
goog.ui.Dialog.prototype.setEscapeToCancel = function(b) {
  this.escapeToCancel_ = b
};
goog.ui.Dialog.prototype.setDisposeOnHide = function(b) {
  this.disposeOnHide_ = b
};
goog.ui.Dialog.prototype.getDisposeOnHide = function() {
  return this.disposeOnHide_
};
goog.ui.Dialog.prototype.disposeInternal = function() {
  this.titleCloseEl_ = null;
  this.buttonEl_ = null;
  goog.base(this, "disposeInternal")
};
goog.ui.Dialog.prototype.setButtonSet = function(buttons) {
  this.buttons_ = buttons;
  if(this.buttonEl_) {
    if(this.buttons_) {
      this.buttons_.attachToElement(this.buttonEl_)
    }else {
      this.buttonEl_.innerHTML = ""
    }
    goog.style.showElement(this.buttonEl_, !!this.buttons_)
  }
};
goog.ui.Dialog.prototype.getButtonSet = function() {
  return this.buttons_
};
goog.ui.Dialog.prototype.onButtonClick_ = function(e) {
  var button = this.findParentButton_(e.target);
  if(button && !button.disabled) {
    var key = button.name;
    var caption = this.getButtonSet().get(key);
    if(this.dispatchEvent(new goog.ui.Dialog.Event(key, caption))) {
      this.setVisible(false)
    }
  }
};
goog.ui.Dialog.prototype.findParentButton_ = function(element) {
  var el = element;
  while(el != null && el != this.buttonEl_) {
    if(el.tagName == "BUTTON") {
      return el
    }
    el = el.parentNode
  }
  return null
};
goog.ui.Dialog.prototype.onKey_ = function(e) {
  var close = false;
  var hasHandler = false;
  var buttonSet = this.getButtonSet();
  var target = e.target;
  if(e.type == goog.events.EventType.KEYDOWN) {
    if(this.escapeToCancel_ && e.keyCode == goog.events.KeyCodes.ESC) {
      var cancel = buttonSet && buttonSet.getCancel();
      var isSpecialFormElement = target.tagName == "SELECT" && !target.disabled;
      if(cancel && !isSpecialFormElement) {
        hasHandler = true;
        var caption = buttonSet.get(cancel);
        close = this.dispatchEvent(new goog.ui.Dialog.Event(cancel, caption))
      }else {
        if(!isSpecialFormElement) {
          close = true
        }
      }
    }else {
      if(e.keyCode == goog.events.KeyCodes.TAB && e.shiftKey && target == this.getElement()) {
        hasHandler = true
      }
    }
  }else {
    if(e.keyCode == goog.events.KeyCodes.ENTER) {
      var key;
      if(target.tagName == "BUTTON") {
        key = target.name
      }else {
        if(buttonSet) {
          var defaultKey = buttonSet.getDefault();
          var defaultButton = defaultKey && buttonSet.getButton(defaultKey);
          var isSpecialFormElement = (target.tagName == "TEXTAREA" || target.tagName == "SELECT") && !target.disabled;
          if(defaultButton && !defaultButton.disabled && !isSpecialFormElement) {
            key = defaultKey
          }
        }
      }
      if(key && buttonSet) {
        hasHandler = true;
        close = this.dispatchEvent(new goog.ui.Dialog.Event(key, String(buttonSet.get(key))))
      }
    }
  }
  if(close || hasHandler) {
    e.stopPropagation();
    e.preventDefault()
  }
  if(close) {
    this.setVisible(false)
  }
};
goog.ui.Dialog.Event = function(key, caption) {
  this.type = goog.ui.Dialog.EventType.SELECT;
  this.key = key;
  this.caption = caption
};
goog.inherits(goog.ui.Dialog.Event, goog.events.Event);
goog.ui.Dialog.SELECT_EVENT = "dialogselect";
goog.ui.Dialog.EventType = {SELECT:"dialogselect", AFTER_HIDE:"afterhide", AFTER_SHOW:"aftershow"};
goog.ui.Dialog.ButtonSet = function(opt_domHelper) {
  this.dom_ = opt_domHelper || goog.dom.getDomHelper();
  goog.structs.Map.call(this)
};
goog.inherits(goog.ui.Dialog.ButtonSet, goog.structs.Map);
goog.ui.Dialog.ButtonSet.prototype.class_ = goog.getCssName("goog-buttonset");
goog.ui.Dialog.ButtonSet.prototype.defaultButton_ = null;
goog.ui.Dialog.ButtonSet.prototype.element_ = null;
goog.ui.Dialog.ButtonSet.prototype.cancelButton_ = null;
goog.ui.Dialog.ButtonSet.prototype.set = function(key, caption, opt_isDefault, opt_isCancel) {
  goog.structs.Map.prototype.set.call(this, key, caption);
  if(opt_isDefault) {
    this.defaultButton_ = key
  }
  if(opt_isCancel) {
    this.cancelButton_ = key
  }
  return this
};
goog.ui.Dialog.ButtonSet.prototype.addButton = function(button, opt_isDefault, opt_isCancel) {
  return this.set(button.key, button.caption, opt_isDefault, opt_isCancel)
};
goog.ui.Dialog.ButtonSet.prototype.attachToElement = function(el) {
  this.element_ = el;
  this.render()
};
goog.ui.Dialog.ButtonSet.prototype.render = function() {
  if(this.element_) {
    this.element_.innerHTML = "";
    var domHelper = goog.dom.getDomHelper(this.element_);
    goog.structs.forEach(this, function(caption, key) {
      var button = domHelper.createDom("button", {"name":key}, caption);
      if(key == this.defaultButton_) {
        button.className = goog.getCssName(this.class_, "default")
      }
      this.element_.appendChild(button)
    }, this)
  }
};
goog.ui.Dialog.ButtonSet.prototype.decorate = function(element) {
  if(!element || element.nodeType != goog.dom.NodeType.ELEMENT) {
    return
  }
  this.element_ = element;
  var buttons = this.element_.getElementsByTagName("button");
  for(var i = 0, button, key, caption;button = buttons[i];i++) {
    key = button.name || button.id;
    caption = goog.dom.getTextContent(button) || button.value;
    if(key) {
      var isDefault = i == 0;
      var isCancel = button.name == goog.ui.Dialog.DefaultButtonKeys.CANCEL;
      this.set(key, caption, isDefault, isCancel);
      if(isDefault) {
        goog.dom.classes.add(button, goog.getCssName(this.class_, "default"))
      }
    }
  }
};
goog.ui.Dialog.ButtonSet.prototype.getElement = function() {
  return this.element_
};
goog.ui.Dialog.ButtonSet.prototype.getDomHelper = function() {
  return this.dom_
};
goog.ui.Dialog.ButtonSet.prototype.setDefault = function(key) {
  this.defaultButton_ = key
};
goog.ui.Dialog.ButtonSet.prototype.getDefault = function() {
  return this.defaultButton_
};
goog.ui.Dialog.ButtonSet.prototype.setCancel = function(key) {
  this.cancelButton_ = key
};
goog.ui.Dialog.ButtonSet.prototype.getCancel = function() {
  return this.cancelButton_
};
goog.ui.Dialog.ButtonSet.prototype.getButton = function(key) {
  var buttons = this.getAllButtons();
  for(var i = 0, nextButton;nextButton = buttons[i];i++) {
    if(nextButton.name == key || nextButton.id == key) {
      return nextButton
    }
  }
  return null
};
goog.ui.Dialog.ButtonSet.prototype.getAllButtons = function() {
  return this.element_.getElementsByTagName(goog.dom.TagName.BUTTON)
};
goog.ui.Dialog.ButtonSet.prototype.setButtonEnabled = function(key, enabled) {
  var button = this.getButton(key);
  if(button) {
    button.disabled = !enabled
  }
};
goog.ui.Dialog.ButtonSet.prototype.setAllButtonsEnabled = function(enabled) {
  var allButtons = this.getAllButtons();
  for(var i = 0, button;button = allButtons[i];i++) {
    button.disabled = !enabled
  }
};
goog.ui.Dialog.DefaultButtonKeys = {OK:"ok", CANCEL:"cancel", YES:"yes", NO:"no", SAVE:"save", CONTINUE:"continue"};
goog.ui.Dialog.MSG_DIALOG_OK_ = goog.getMsg("OK");
goog.ui.Dialog.MSG_DIALOG_CANCEL_ = goog.getMsg("Cancel");
goog.ui.Dialog.MSG_DIALOG_YES_ = goog.getMsg("Yes");
goog.ui.Dialog.MSG_DIALOG_NO_ = goog.getMsg("No");
goog.ui.Dialog.MSG_DIALOG_SAVE_ = goog.getMsg("Save");
goog.ui.Dialog.MSG_DIALOG_CONTINUE_ = goog.getMsg("Continue");
goog.ui.Dialog.DefaultButtonCaptions = {OK:goog.ui.Dialog.MSG_DIALOG_OK_, CANCEL:goog.ui.Dialog.MSG_DIALOG_CANCEL_, YES:goog.ui.Dialog.MSG_DIALOG_YES_, NO:goog.ui.Dialog.MSG_DIALOG_NO_, SAVE:goog.ui.Dialog.MSG_DIALOG_SAVE_, CONTINUE:goog.ui.Dialog.MSG_DIALOG_CONTINUE_};
goog.ui.Dialog.ButtonSet.DefaultButtons = {OK:{key:goog.ui.Dialog.DefaultButtonKeys.OK, caption:goog.ui.Dialog.DefaultButtonCaptions.OK}, CANCEL:{key:goog.ui.Dialog.DefaultButtonKeys.CANCEL, caption:goog.ui.Dialog.DefaultButtonCaptions.CANCEL}, YES:{key:goog.ui.Dialog.DefaultButtonKeys.YES, caption:goog.ui.Dialog.DefaultButtonCaptions.YES}, NO:{key:goog.ui.Dialog.DefaultButtonKeys.NO, caption:goog.ui.Dialog.DefaultButtonCaptions.NO}, SAVE:{key:goog.ui.Dialog.DefaultButtonKeys.SAVE, caption:goog.ui.Dialog.DefaultButtonCaptions.SAVE}, 
CONTINUE:{key:goog.ui.Dialog.DefaultButtonKeys.CONTINUE, caption:goog.ui.Dialog.DefaultButtonCaptions.CONTINUE}};
goog.ui.Dialog.ButtonSet.createOk = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.OK, true, true)
};
goog.ui.Dialog.ButtonSet.createOkCancel = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.OK, true).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CANCEL, false, true)
};
goog.ui.Dialog.ButtonSet.createYesNo = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.YES, true).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.NO, false, true)
};
goog.ui.Dialog.ButtonSet.createYesNoCancel = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.YES).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.NO, true).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CANCEL, false, true)
};
goog.ui.Dialog.ButtonSet.createContinueSaveCancel = function() {
  return(new goog.ui.Dialog.ButtonSet).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CONTINUE).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.SAVE).addButton(goog.ui.Dialog.ButtonSet.DefaultButtons.CANCEL, true, true)
};
(function() {
  if(typeof document != "undefined") {
    goog.ui.Dialog.ButtonSet.OK = goog.ui.Dialog.ButtonSet.createOk();
    goog.ui.Dialog.ButtonSet.OK_CANCEL = goog.ui.Dialog.ButtonSet.createOkCancel();
    goog.ui.Dialog.ButtonSet.YES_NO = goog.ui.Dialog.ButtonSet.createYesNo();
    goog.ui.Dialog.ButtonSet.YES_NO_CANCEL = goog.ui.Dialog.ButtonSet.createYesNoCancel();
    goog.ui.Dialog.ButtonSet.CONTINUE_SAVE_CANCEL = goog.ui.Dialog.ButtonSet.createContinueSaveCancel()
  }
})();
goog.provide("goog.debug.RelativeTimeProvider");
goog.debug.RelativeTimeProvider = function() {
  this.relativeTimeStart_ = goog.now()
};
goog.debug.RelativeTimeProvider.defaultInstance_ = new goog.debug.RelativeTimeProvider;
goog.debug.RelativeTimeProvider.prototype.set = function(timeStamp) {
  this.relativeTimeStart_ = timeStamp
};
goog.debug.RelativeTimeProvider.prototype.reset = function() {
  this.set(goog.now())
};
goog.debug.RelativeTimeProvider.prototype.get = function() {
  return this.relativeTimeStart_
};
goog.debug.RelativeTimeProvider.getDefaultInstance = function() {
  return goog.debug.RelativeTimeProvider.defaultInstance_
};
goog.provide("goog.debug.Formatter");
goog.provide("goog.debug.HtmlFormatter");
goog.provide("goog.debug.TextFormatter");
goog.require("goog.debug.RelativeTimeProvider");
goog.require("goog.string");
goog.debug.Formatter = function(opt_prefix) {
  this.prefix_ = opt_prefix || "";
  this.startTimeProvider_ = goog.debug.RelativeTimeProvider.getDefaultInstance()
};
goog.debug.Formatter.prototype.showAbsoluteTime = true;
goog.debug.Formatter.prototype.showRelativeTime = true;
goog.debug.Formatter.prototype.showLoggerName = true;
goog.debug.Formatter.prototype.showExceptionText = false;
goog.debug.Formatter.prototype.showSeverityLevel = false;
goog.debug.Formatter.prototype.formatRecord = goog.abstractMethod;
goog.debug.Formatter.prototype.setStartTimeProvider = function(provider) {
  this.startTimeProvider_ = provider
};
goog.debug.Formatter.prototype.getStartTimeProvider = function() {
  return this.startTimeProvider_
};
goog.debug.Formatter.prototype.resetRelativeTimeStart = function() {
  this.startTimeProvider_.reset()
};
goog.debug.Formatter.getDateTimeStamp_ = function(logRecord) {
  var time = new Date(logRecord.getMillis());
  return goog.debug.Formatter.getTwoDigitString_(time.getFullYear() - 2E3) + goog.debug.Formatter.getTwoDigitString_(time.getMonth() + 1) + goog.debug.Formatter.getTwoDigitString_(time.getDate()) + " " + goog.debug.Formatter.getTwoDigitString_(time.getHours()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getMinutes()) + ":" + goog.debug.Formatter.getTwoDigitString_(time.getSeconds()) + "." + goog.debug.Formatter.getTwoDigitString_(Math.floor(time.getMilliseconds() / 10))
};
goog.debug.Formatter.getTwoDigitString_ = function(n) {
  if(n < 10) {
    return"0" + n
  }
  return String(n)
};
goog.debug.Formatter.getRelativeTime_ = function(logRecord, relativeTimeStart) {
  var ms = logRecord.getMillis() - relativeTimeStart;
  var sec = ms / 1E3;
  var str = sec.toFixed(3);
  var spacesToPrepend = 0;
  if(sec < 1) {
    spacesToPrepend = 2
  }else {
    while(sec < 100) {
      spacesToPrepend++;
      sec *= 10
    }
  }
  while(spacesToPrepend-- > 0) {
    str = " " + str
  }
  return str
};
goog.debug.HtmlFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.HtmlFormatter, goog.debug.Formatter);
goog.debug.HtmlFormatter.prototype.showExceptionText = true;
goog.debug.HtmlFormatter.prototype.formatRecord = function(logRecord) {
  var className;
  switch(logRecord.getLevel().value) {
    case goog.debug.Logger.Level.SHOUT.value:
      className = "dbg-sh";
      break;
    case goog.debug.Logger.Level.SEVERE.value:
      className = "dbg-sev";
      break;
    case goog.debug.Logger.Level.WARNING.value:
      className = "dbg-w";
      break;
    case goog.debug.Logger.Level.INFO.value:
      className = "dbg-i";
      break;
    case goog.debug.Logger.Level.FINE.value:
    ;
    default:
      className = "dbg-f";
      break
  }
  var sb = [];
  sb.push(this.prefix_, " ");
  if(this.showAbsoluteTime) {
    sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ")
  }
  if(this.showRelativeTime) {
    sb.push("[", goog.string.whitespaceEscape(goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get())), "s] ")
  }
  if(this.showLoggerName) {
    sb.push("[", goog.string.htmlEscape(logRecord.getLoggerName()), "] ")
  }
  sb.push('<span class="', className, '">', goog.string.newLineToBr(goog.string.whitespaceEscape(goog.string.htmlEscape(logRecord.getMessage()))));
  if(this.showExceptionText && logRecord.getException()) {
    sb.push("<br>", goog.string.newLineToBr(goog.string.whitespaceEscape(logRecord.getExceptionText() || "")))
  }
  sb.push("</span><br>");
  return sb.join("")
};
goog.debug.TextFormatter = function(opt_prefix) {
  goog.debug.Formatter.call(this, opt_prefix)
};
goog.inherits(goog.debug.TextFormatter, goog.debug.Formatter);
goog.debug.TextFormatter.prototype.formatRecord = function(logRecord) {
  var sb = [];
  sb.push(this.prefix_, " ");
  if(this.showAbsoluteTime) {
    sb.push("[", goog.debug.Formatter.getDateTimeStamp_(logRecord), "] ")
  }
  if(this.showRelativeTime) {
    sb.push("[", goog.debug.Formatter.getRelativeTime_(logRecord, this.startTimeProvider_.get()), "s] ")
  }
  if(this.showLoggerName) {
    sb.push("[", logRecord.getLoggerName(), "] ")
  }
  if(this.showSeverityLevel) {
    sb.push("[", logRecord.getLevel().name, "] ")
  }
  sb.push(logRecord.getMessage(), "\n");
  if(this.showExceptionText && logRecord.getException()) {
    sb.push(logRecord.getExceptionText(), "\n")
  }
  return sb.join("")
};
goog.provide("goog.ui.LabelInput");
goog.require("goog.Timer");
goog.require("goog.dom");
goog.require("goog.dom.a11y");
goog.require("goog.dom.a11y.State");
goog.require("goog.dom.classes");
goog.require("goog.events.EventHandler");
goog.require("goog.events.EventType");
goog.require("goog.ui.Component");
goog.require("goog.userAgent");
goog.ui.LabelInput = function(opt_label, opt_domHelper) {
  goog.ui.Component.call(this, opt_domHelper);
  this.label_ = opt_label || ""
};
goog.inherits(goog.ui.LabelInput, goog.ui.Component);
goog.ui.LabelInput.prototype.ffKeyRestoreValue_ = null;
goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_ = "placeholder" in document.createElement("input");
goog.ui.LabelInput.prototype.eventHandler_;
goog.ui.LabelInput.prototype.hasFocus_ = false;
goog.ui.LabelInput.prototype.createDom = function() {
  this.setElementInternal(this.getDomHelper().createDom("input", {"type":"text"}))
};
goog.ui.LabelInput.prototype.decorateInternal = function(element) {
  goog.ui.LabelInput.superClass_.decorateInternal.call(this, element);
  if(!this.label_) {
    this.label_ = element.getAttribute("label") || ""
  }
  if(goog.dom.getActiveElement(goog.dom.getOwnerDocument(element)) == element) {
    this.hasFocus_ = true;
    goog.dom.classes.remove(this.getElement(), this.LABEL_CLASS_NAME)
  }
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.getElement().placeholder = this.label_;
    return
  }
  goog.dom.a11y.setState(this.getElement(), goog.dom.a11y.State.LABEL, this.label_)
};
goog.ui.LabelInput.prototype.enterDocument = function() {
  goog.ui.LabelInput.superClass_.enterDocument.call(this);
  this.attachEvents_();
  this.check_();
  this.getElement().labelInput_ = this
};
goog.ui.LabelInput.prototype.exitDocument = function() {
  goog.ui.LabelInput.superClass_.exitDocument.call(this);
  this.detachEvents_();
  this.getElement().labelInput_ = null
};
goog.ui.LabelInput.prototype.attachEvents_ = function() {
  var eh = new goog.events.EventHandler(this);
  eh.listen(this.getElement(), goog.events.EventType.FOCUS, this.handleFocus_);
  eh.listen(this.getElement(), goog.events.EventType.BLUR, this.handleBlur_);
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.eventHandler_ = eh;
    return
  }
  if(goog.userAgent.GECKO) {
    eh.listen(this.getElement(), [goog.events.EventType.KEYPRESS, goog.events.EventType.KEYDOWN, goog.events.EventType.KEYUP], this.handleEscapeKeys_)
  }
  var d = goog.dom.getOwnerDocument(this.getElement());
  var w = goog.dom.getWindow(d);
  eh.listen(w, goog.events.EventType.LOAD, this.handleWindowLoad_);
  this.eventHandler_ = eh;
  this.attachEventsToForm_()
};
goog.ui.LabelInput.prototype.attachEventsToForm_ = function() {
  if(!this.formAttached_ && this.eventHandler_ && this.getElement().form) {
    this.eventHandler_.listen(this.getElement().form, goog.events.EventType.SUBMIT, this.handleFormSubmit_);
    this.formAttached_ = true
  }
};
goog.ui.LabelInput.prototype.detachEvents_ = function() {
  if(this.eventHandler_) {
    this.eventHandler_.dispose();
    this.eventHandler_ = null
  }
};
goog.ui.LabelInput.prototype.disposeInternal = function() {
  goog.ui.LabelInput.superClass_.disposeInternal.call(this);
  this.detachEvents_()
};
goog.ui.LabelInput.prototype.LABEL_CLASS_NAME = goog.getCssName("label-input-label");
goog.ui.LabelInput.prototype.handleFocus_ = function(e) {
  this.hasFocus_ = true;
  goog.dom.classes.remove(this.getElement(), this.LABEL_CLASS_NAME);
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    return
  }
  if(!this.hasChanged() && !this.inFocusAndSelect_) {
    var me = this;
    var clearValue = function() {
      me.getElement().value = ""
    };
    if(goog.userAgent.IE) {
      goog.Timer.callOnce(clearValue, 10)
    }else {
      clearValue()
    }
  }
};
goog.ui.LabelInput.prototype.handleBlur_ = function(e) {
  if(!goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.eventHandler_.unlisten(this.getElement(), goog.events.EventType.CLICK, this.handleFocus_);
    this.ffKeyRestoreValue_ = null
  }
  this.hasFocus_ = false;
  this.check_()
};
goog.ui.LabelInput.prototype.handleEscapeKeys_ = function(e) {
  if(e.keyCode == 27) {
    if(e.type == goog.events.EventType.KEYDOWN) {
      this.ffKeyRestoreValue_ = this.getElement().value
    }else {
      if(e.type == goog.events.EventType.KEYPRESS) {
        this.getElement().value = this.ffKeyRestoreValue_
      }else {
        if(e.type == goog.events.EventType.KEYUP) {
          this.ffKeyRestoreValue_ = null
        }
      }
    }
    e.preventDefault()
  }
};
goog.ui.LabelInput.prototype.handleFormSubmit_ = function(e) {
  if(!this.hasChanged()) {
    this.getElement().value = "";
    goog.Timer.callOnce(this.handleAfterSubmit_, 10, this)
  }
};
goog.ui.LabelInput.prototype.handleAfterSubmit_ = function(e) {
  if(!this.hasChanged()) {
    this.getElement().value = this.label_
  }
};
goog.ui.LabelInput.prototype.handleWindowLoad_ = function(e) {
  this.check_()
};
goog.ui.LabelInput.prototype.hasFocus = function() {
  return this.hasFocus_
};
goog.ui.LabelInput.prototype.hasChanged = function() {
  return!!this.getElement() && this.getElement().value != "" && this.getElement().value != this.label_
};
goog.ui.LabelInput.prototype.clear = function() {
  this.getElement().value = "";
  if(this.ffKeyRestoreValue_ != null) {
    this.ffKeyRestoreValue_ = ""
  }
};
goog.ui.LabelInput.prototype.reset = function() {
  if(this.hasChanged()) {
    this.clear();
    this.check_()
  }
};
goog.ui.LabelInput.prototype.setValue = function(s) {
  if(this.ffKeyRestoreValue_ != null) {
    this.ffKeyRestoreValue_ = s
  }
  this.getElement().value = s;
  this.check_()
};
goog.ui.LabelInput.prototype.getValue = function() {
  if(this.ffKeyRestoreValue_ != null) {
    return this.ffKeyRestoreValue_
  }
  return this.hasChanged() ? this.getElement().value : ""
};
goog.ui.LabelInput.prototype.setLabel = function(label) {
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.label_ = label;
    if(this.getElement()) {
      this.getElement().placeholder = this.label_
    }
    return
  }
  if(this.getElement() && !this.hasChanged()) {
    this.getElement().value = ""
  }
  this.label_ = label;
  this.restoreLabel_();
  if(this.getElement()) {
    goog.dom.a11y.setState(this.getElement(), goog.dom.a11y.State.LABEL, this.label_)
  }
};
goog.ui.LabelInput.prototype.getLabel = function() {
  return this.label_
};
goog.ui.LabelInput.prototype.check_ = function() {
  if(!goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.attachEventsToForm_();
    goog.dom.a11y.setState(this.getElement(), goog.dom.a11y.State.LABEL, this.label_)
  }else {
    if(this.getElement().placeholder != this.label_) {
      this.getElement().placeholder = this.label_
    }
  }
  if(!this.hasChanged()) {
    if(!this.inFocusAndSelect_ && !this.hasFocus_) {
      goog.dom.classes.add(this.getElement(), this.LABEL_CLASS_NAME)
    }
    if(!goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
      goog.Timer.callOnce(this.restoreLabel_, 10, this)
    }
  }else {
    goog.dom.classes.remove(this.getElement(), this.LABEL_CLASS_NAME)
  }
};
goog.ui.LabelInput.prototype.focusAndSelect = function() {
  var hc = this.hasChanged();
  this.inFocusAndSelect_ = true;
  this.getElement().focus();
  if(!hc && !goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    this.getElement().value = this.label_
  }
  this.getElement().select();
  if(goog.ui.LabelInput.SUPPORTS_PLACEHOLDER_) {
    return
  }
  if(this.eventHandler_) {
    this.eventHandler_.listenOnce(this.getElement(), goog.events.EventType.CLICK, this.handleFocus_)
  }
  goog.Timer.callOnce(this.focusAndSelect_, 10, this)
};
goog.ui.LabelInput.prototype.setEnabled = function(enabled) {
  this.getElement().disabled = !enabled;
  goog.dom.classes.enable(this.getElement(), goog.getCssName(this.LABEL_CLASS_NAME, "disabled"), !enabled)
};
goog.ui.LabelInput.prototype.focusAndSelect_ = function() {
  this.inFocusAndSelect_ = false
};
goog.ui.LabelInput.prototype.restoreLabel_ = function() {
  if(this.getElement() && !this.hasChanged() && !this.hasFocus_) {
    this.getElement().value = this.label_
  }
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if(opt_uri instanceof goog.Uri) {
    this.setIgnoreCase(opt_ignoreCase == null ? opt_uri.getIgnoreCase() : opt_ignoreCase);
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment())
  }else {
    if(opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQuery(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true)
    }else {
      this.setIgnoreCase(!!opt_ignoreCase);
      this.queryData_ = new goog.Uri.QueryData(null, this, this.ignoreCase_)
    }
  }
};
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  if(this.cachedToString_) {
    return this.cachedToString_
  }
  var out = [];
  if(this.scheme_) {
    out.push(goog.Uri.encodeSpecialChars_(this.scheme_, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":")
  }
  if(this.domain_) {
    out.push("//");
    if(this.userInfo_) {
      out.push(goog.Uri.encodeSpecialChars_(this.userInfo_, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@")
    }
    out.push(goog.Uri.encodeString_(this.domain_));
    if(this.port_ != null) {
      out.push(":", String(this.getPort()))
    }
  }
  if(this.path_) {
    if(this.hasDomain() && this.path_.charAt(0) != "/") {
      out.push("/")
    }
    out.push(goog.Uri.encodeSpecialChars_(this.path_, this.path_.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_))
  }
  var query = String(this.queryData_);
  if(query) {
    out.push("?", query)
  }
  if(this.fragment_) {
    out.push("#", goog.Uri.encodeSpecialChars_(this.fragment_, goog.Uri.reDisallowedInFragment_))
  }
  return this.cachedToString_ = out.join("")
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if(overridden) {
    absoluteUri.setScheme(relativeUri.getScheme())
  }else {
    overridden = relativeUri.hasUserInfo()
  }
  if(overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo())
  }else {
    overridden = relativeUri.hasDomain()
  }
  if(overridden) {
    absoluteUri.setDomain(relativeUri.getDomain())
  }else {
    overridden = relativeUri.hasPort()
  }
  var path = relativeUri.getPath();
  if(overridden) {
    absoluteUri.setPort(relativeUri.getPort())
  }else {
    overridden = relativeUri.hasPath();
    if(overridden) {
      if(path.charAt(0) != "/") {
        if(this.hasDomain() && !this.hasPath()) {
          path = "/" + path
        }else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if(lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path
          }
        }
      }
      path = goog.Uri.removeDotSegments(path)
    }
  }
  if(overridden) {
    absoluteUri.setPath(path)
  }else {
    overridden = relativeUri.hasQuery()
  }
  if(overridden) {
    absoluteUri.setQuery(relativeUri.getDecodedQuery())
  }else {
    overridden = relativeUri.hasFragment()
  }
  if(overridden) {
    absoluteUri.setFragment(relativeUri.getFragment())
  }
  return absoluteUri
};
goog.Uri.prototype.clone = function() {
  return goog.Uri.create(this.scheme_, this.userInfo_, this.domain_, this.port_, this.path_, this.queryData_.clone(), this.fragment_, this.ignoreCase_)
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if(this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "")
  }
  return this
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_
};
goog.Uri.prototype.getPort = function() {
  return this.port_
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(newPort) {
    newPort = Number(newPort);
    if(isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort
  }else {
    this.port_ = null
  }
  return this
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null
};
goog.Uri.prototype.getPath = function() {
  return this.path_
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== ""
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.uri_ = this;
    this.queryData_.setIgnoreCase(this.ignoreCase_)
  }else {
    if(!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_)
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, this, this.ignoreCase_)
  }
  return this
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode)
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString()
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString()
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery()
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.queryData_.set(key, value);
  return this
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  if(!goog.isArray(values)) {
    values = [String(values)]
  }
  this.queryData_.setValues(key, values);
  return this
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name)
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return this.queryData_.get(paramName)
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  delete this.cachedToString_;
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort())
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_
};
goog.Uri.prototype.enforceReadOnly = function() {
  if(this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if(this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase)
  }
  return this
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase)
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri
};
goog.Uri.resolve = function(base, rel) {
  if(!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base)
  }
  if(!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel)
  }
  return base.resolve(rel)
};
goog.Uri.removeDotSegments = function(path) {
  if(path == ".." || path == ".") {
    return""
  }else {
    if(!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path
    }else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for(var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if(segment == ".") {
          if(leadingSlash && pos == segments.length) {
            out.push("")
          }
        }else {
          if(segment == "..") {
            if(out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop()
            }
            if(leadingSlash && pos == segments.length) {
              out.push("")
            }
          }else {
            out.push(segment);
            leadingSlash = true
          }
        }
      }
      return out.join("/")
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : ""
};
goog.Uri.encodeString_ = function(unescapedPart) {
  if(goog.isString(unescapedPart)) {
    return encodeURIComponent(unescapedPart)
  }
  return null
};
goog.Uri.encodeSpecialRegExp_ = /^[a-zA-Z0-9\-_.!~*'():\/;?]*$/;
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  var ret = null;
  if(goog.isString(unescapedPart)) {
    ret = unescapedPart;
    if(!goog.Uri.encodeSpecialRegExp_.test(ret)) {
      ret = encodeURI(unescapedPart)
    }
    if(ret.search(extra) >= 0) {
      ret = ret.replace(extra, goog.Uri.encodeChar_)
    }
  }
  return ret
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return"%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16)
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT]
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.uri_ = opt_uri || null;
  this.ignoreCase_ = !!opt_ignoreCase
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if(!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if(this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("&");
      for(var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("=");
        var name = null;
        var value = null;
        if(indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1)
        }else {
          name = pairs[i]
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "")
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if(typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  return goog.Uri.QueryData.createFromKeysValues(keys, goog.structs.getValues(map), opt_uri, opt_ignoreCase)
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if(keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, opt_uri, opt_ignoreCase);
  for(var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i])
  }
  return queryData
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.decodedQuery_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(!this.containsKey(key)) {
    this.keyMap_.set(key, value)
  }else {
    var current = this.keyMap_.get(key);
    if(goog.isArray(current)) {
      current.push(value)
    }else {
      this.keyMap_.set(key, [current, value])
    }
  }
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
    return this.keyMap_.remove(key)
  }
  return false
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  if(this.keyMap_) {
    this.keyMap_.clear()
  }
  this.count_ = 0
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key)
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value)
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = this.keyMap_.getValues();
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for(var i = 0;i < keys.length;i++) {
    var val = vals[i];
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        rv.push(keys[i])
      }
    }else {
      rv.push(keys[i])
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv;
  if(opt_key) {
    var key = this.getKeyName_(opt_key);
    if(this.containsKey(key)) {
      var value = this.keyMap_.get(key);
      if(goog.isArray(value)) {
        return value
      }else {
        rv = [];
        rv.push(value)
      }
    }else {
      rv = []
    }
  }else {
    var vals = this.keyMap_.getValues();
    rv = [];
    for(var i = 0;i < vals.length;i++) {
      var val = vals[i];
      if(goog.isArray(val)) {
        goog.array.extend(rv, val)
      }else {
        rv.push(val)
      }
    }
  }
  return rv
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  this.keyMap_.set(key, value);
  this.count_++;
  return this
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      return val[0]
    }else {
      return val
    }
  }else {
    return opt_default
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if(this.containsKey(key)) {
    var old = this.keyMap_.get(key);
    if(goog.isArray(old)) {
      this.count_ -= old.length
    }else {
      this.count_--
    }
  }
  if(values.length > 0) {
    this.keyMap_.set(key, values);
    this.count_ += values.length
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if(this.encodedQuery_) {
    return this.encodedQuery_
  }
  if(!this.keyMap_) {
    return""
  }
  var sb = [];
  var count = 0;
  var keys = this.keyMap_.getKeys();
  for(var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.keyMap_.get(key);
    if(goog.isArray(val)) {
      for(var j = 0;j < val.length;j++) {
        if(count > 0) {
          sb.push("&")
        }
        sb.push(encodedKey);
        if(val[j] !== "") {
          sb.push("=", goog.string.urlEncode(val[j]))
        }
        count++
      }
    }else {
      if(count > 0) {
        sb.push("&")
      }
      sb.push(encodedKey);
      if(val !== "") {
        sb.push("=", goog.string.urlEncode(val))
      }
      count++
    }
  }
  return this.encodedQuery_ = sb.join("")
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  if(!this.decodedQuery_) {
    this.decodedQuery_ = goog.Uri.decodeOrEmpty_(this.toString())
  }
  return this.decodedQuery_
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  delete this.decodedQuery_;
  delete this.encodedQuery_;
  if(this.uri_) {
    delete this.uri_.cachedToString_
  }
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  goog.structs.forEach(this.keyMap_, function(value, key, map) {
    if(!goog.array.contains(keys, key)) {
      this.remove(key)
    }
  }, this);
  return this
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  if(this.decodedQuery_) {
    rv.decodedQuery_ = this.decodedQuery_
  }
  if(this.encodedQuery_) {
    rv.encodedQuery_ = this.encodedQuery_
  }
  if(this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone()
  }
  return rv
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if(this.ignoreCase_) {
    keyName = keyName.toLowerCase()
  }
  return keyName
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if(resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    goog.structs.forEach(this.keyMap_, function(value, key, map) {
      var lowerCase = key.toLowerCase();
      if(key != lowerCase) {
        this.remove(key);
        this.add(lowerCase, value)
      }
    }, this)
  }
  this.ignoreCase_ = ignoreCase
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for(var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value)
    }, this)
  }
};
goog.provide("goog.ui.NativeButtonRenderer");
goog.require("goog.dom.classes");
goog.require("goog.events.EventType");
goog.require("goog.ui.ButtonRenderer");
goog.require("goog.ui.Component.State");
goog.ui.NativeButtonRenderer = function() {
  goog.ui.ButtonRenderer.call(this)
};
goog.inherits(goog.ui.NativeButtonRenderer, goog.ui.ButtonRenderer);
goog.addSingletonGetter(goog.ui.NativeButtonRenderer);
goog.ui.NativeButtonRenderer.prototype.getAriaRole = function() {
  return undefined
};
goog.ui.NativeButtonRenderer.prototype.createDom = function(button) {
  this.setUpNativeButton_(button);
  return button.getDomHelper().createDom("button", {"class":this.getClassNames(button).join(" "), "disabled":!button.isEnabled(), "title":button.getTooltip() || "", "value":button.getValue() || ""}, button.getCaption() || "")
};
goog.ui.NativeButtonRenderer.prototype.canDecorate = function(element) {
  return element.tagName == "BUTTON" || element.tagName == "INPUT" && (element.type == "button" || element.type == "submit" || element.type == "reset")
};
goog.ui.NativeButtonRenderer.prototype.decorate = function(button, element) {
  this.setUpNativeButton_(button);
  if(element.disabled) {
    goog.dom.classes.add(element, this.getClassForState(goog.ui.Component.State.DISABLED))
  }
  return goog.ui.NativeButtonRenderer.superClass_.decorate.call(this, button, element)
};
goog.ui.NativeButtonRenderer.prototype.initializeDom = function(button) {
  button.getHandler().listen(button.getElement(), goog.events.EventType.CLICK, button.performActionInternal)
};
goog.ui.NativeButtonRenderer.prototype.setAllowTextSelection = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.setRightToLeft = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.isFocusable = function(button) {
  return button.isEnabled()
};
goog.ui.NativeButtonRenderer.prototype.setFocusable = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.setState = function(button, state, enable) {
  goog.ui.NativeButtonRenderer.superClass_.setState.call(this, button, state, enable);
  var element = button.getElement();
  if(element && state == goog.ui.Component.State.DISABLED) {
    element.disabled = enable
  }
};
goog.ui.NativeButtonRenderer.prototype.getValue = function(element) {
  return element.value
};
goog.ui.NativeButtonRenderer.prototype.setValue = function(element, value) {
  if(element) {
    element.value = value
  }
};
goog.ui.NativeButtonRenderer.prototype.updateAriaState = goog.nullFunction;
goog.ui.NativeButtonRenderer.prototype.setUpNativeButton_ = function(button) {
  button.setHandleMouseEvents(false);
  button.setAutoStates(goog.ui.Component.State.ALL, false);
  button.setSupportedState(goog.ui.Component.State.FOCUSED, false)
};
goog.provide("goog.ui.Button");
goog.provide("goog.ui.Button.Side");
goog.require("goog.events.KeyCodes");
goog.require("goog.ui.ButtonRenderer");
goog.require("goog.ui.ButtonSide");
goog.require("goog.ui.Control");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.NativeButtonRenderer");
goog.ui.Button = function(content, opt_renderer, opt_domHelper) {
  goog.ui.Control.call(this, content, opt_renderer || goog.ui.NativeButtonRenderer.getInstance(), opt_domHelper)
};
goog.inherits(goog.ui.Button, goog.ui.Control);
goog.ui.Button.Side = goog.ui.ButtonSide;
goog.ui.Button.prototype.value_;
goog.ui.Button.prototype.tooltip_;
goog.ui.Button.prototype.getValue = function() {
  return this.value_
};
goog.ui.Button.prototype.setValue = function(value) {
  this.value_ = value;
  this.getRenderer().setValue(this.getElement(), value)
};
goog.ui.Button.prototype.setValueInternal = function(value) {
  this.value_ = value
};
goog.ui.Button.prototype.getTooltip = function() {
  return this.tooltip_
};
goog.ui.Button.prototype.setTooltip = function(tooltip) {
  this.tooltip_ = tooltip;
  this.getRenderer().setTooltip(this.getElement(), tooltip)
};
goog.ui.Button.prototype.setTooltipInternal = function(tooltip) {
  this.tooltip_ = tooltip
};
goog.ui.Button.prototype.setCollapsed = function(sides) {
  this.getRenderer().setCollapsed(this, sides)
};
goog.ui.Button.prototype.disposeInternal = function() {
  goog.ui.Button.superClass_.disposeInternal.call(this);
  delete this.value_;
  delete this.tooltip_
};
goog.ui.Button.prototype.enterDocument = function() {
  goog.ui.Button.superClass_.enterDocument.call(this);
  if(this.isSupportedState(goog.ui.Component.State.FOCUSED)) {
    var keyTarget = this.getKeyEventTarget();
    if(keyTarget) {
      this.getHandler().listen(keyTarget, goog.events.EventType.KEYUP, this.handleKeyEventInternal)
    }
  }
};
goog.ui.Button.prototype.handleKeyEventInternal = function(e) {
  if(e.keyCode == goog.events.KeyCodes.ENTER && e.type == goog.events.KeyHandler.EventType.KEY || e.keyCode == goog.events.KeyCodes.SPACE && e.type == goog.events.EventType.KEYUP) {
    return this.performActionInternal(e)
  }
  return e.keyCode == goog.events.KeyCodes.SPACE
};
goog.ui.registry.setDecoratorByClassName(goog.ui.ButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.Button(null)
});
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue
  }
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  }
};
goog.functions.lock = function(f) {
  return function() {
    return f.call(this)
  }
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue))
};
goog.functions.compose = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if(length) {
      result = functions[length - 1].apply(this, arguments)
    }
    for(var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result)
    }
    return result
  }
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for(var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments)
    }
    return result
  }
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(!functions[i].apply(this, arguments)) {
        return false
      }
    }
    return true
  }
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for(var i = 0;i < length;i++) {
      if(functions[i].apply(this, arguments)) {
        return true
      }
    }
    return false
  }
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments)
  }
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj
};
goog.provide("goog.color.names");
goog.color.names = {"aliceblue":"#f0f8ff", "antiquewhite":"#faebd7", "aqua":"#00ffff", "aquamarine":"#7fffd4", "azure":"#f0ffff", "beige":"#f5f5dc", "bisque":"#ffe4c4", "black":"#000000", "blanchedalmond":"#ffebcd", "blue":"#0000ff", "blueviolet":"#8a2be2", "brown":"#a52a2a", "burlywood":"#deb887", "cadetblue":"#5f9ea0", "chartreuse":"#7fff00", "chocolate":"#d2691e", "coral":"#ff7f50", "cornflowerblue":"#6495ed", "cornsilk":"#fff8dc", "crimson":"#dc143c", "cyan":"#00ffff", "darkblue":"#00008b", "darkcyan":"#008b8b", 
"darkgoldenrod":"#b8860b", "darkgray":"#a9a9a9", "darkgreen":"#006400", "darkgrey":"#a9a9a9", "darkkhaki":"#bdb76b", "darkmagenta":"#8b008b", "darkolivegreen":"#556b2f", "darkorange":"#ff8c00", "darkorchid":"#9932cc", "darkred":"#8b0000", "darksalmon":"#e9967a", "darkseagreen":"#8fbc8f", "darkslateblue":"#483d8b", "darkslategray":"#2f4f4f", "darkslategrey":"#2f4f4f", "darkturquoise":"#00ced1", "darkviolet":"#9400d3", "deeppink":"#ff1493", "deepskyblue":"#00bfff", "dimgray":"#696969", "dimgrey":"#696969", 
"dodgerblue":"#1e90ff", "firebrick":"#b22222", "floralwhite":"#fffaf0", "forestgreen":"#228b22", "fuchsia":"#ff00ff", "gainsboro":"#dcdcdc", "ghostwhite":"#f8f8ff", "gold":"#ffd700", "goldenrod":"#daa520", "gray":"#808080", "green":"#008000", "greenyellow":"#adff2f", "grey":"#808080", "honeydew":"#f0fff0", "hotpink":"#ff69b4", "indianred":"#cd5c5c", "indigo":"#4b0082", "ivory":"#fffff0", "khaki":"#f0e68c", "lavender":"#e6e6fa", "lavenderblush":"#fff0f5", "lawngreen":"#7cfc00", "lemonchiffon":"#fffacd", 
"lightblue":"#add8e6", "lightcoral":"#f08080", "lightcyan":"#e0ffff", "lightgoldenrodyellow":"#fafad2", "lightgray":"#d3d3d3", "lightgreen":"#90ee90", "lightgrey":"#d3d3d3", "lightpink":"#ffb6c1", "lightsalmon":"#ffa07a", "lightseagreen":"#20b2aa", "lightskyblue":"#87cefa", "lightslategray":"#778899", "lightslategrey":"#778899", "lightsteelblue":"#b0c4de", "lightyellow":"#ffffe0", "lime":"#00ff00", "limegreen":"#32cd32", "linen":"#faf0e6", "magenta":"#ff00ff", "maroon":"#800000", "mediumaquamarine":"#66cdaa", 
"mediumblue":"#0000cd", "mediumorchid":"#ba55d3", "mediumpurple":"#9370d8", "mediumseagreen":"#3cb371", "mediumslateblue":"#7b68ee", "mediumspringgreen":"#00fa9a", "mediumturquoise":"#48d1cc", "mediumvioletred":"#c71585", "midnightblue":"#191970", "mintcream":"#f5fffa", "mistyrose":"#ffe4e1", "moccasin":"#ffe4b5", "navajowhite":"#ffdead", "navy":"#000080", "oldlace":"#fdf5e6", "olive":"#808000", "olivedrab":"#6b8e23", "orange":"#ffa500", "orangered":"#ff4500", "orchid":"#da70d6", "palegoldenrod":"#eee8aa", 
"palegreen":"#98fb98", "paleturquoise":"#afeeee", "palevioletred":"#d87093", "papayawhip":"#ffefd5", "peachpuff":"#ffdab9", "peru":"#cd853f", "pink":"#ffc0cb", "plum":"#dda0dd", "powderblue":"#b0e0e6", "purple":"#800080", "red":"#ff0000", "rosybrown":"#bc8f8f", "royalblue":"#4169e1", "saddlebrown":"#8b4513", "salmon":"#fa8072", "sandybrown":"#f4a460", "seagreen":"#2e8b57", "seashell":"#fff5ee", "sienna":"#a0522d", "silver":"#c0c0c0", "skyblue":"#87ceeb", "slateblue":"#6a5acd", "slategray":"#708090", 
"slategrey":"#708090", "snow":"#fffafa", "springgreen":"#00ff7f", "steelblue":"#4682b4", "tan":"#d2b48c", "teal":"#008080", "thistle":"#d8bfd8", "tomato":"#ff6347", "turquoise":"#40e0d0", "violet":"#ee82ee", "wheat":"#f5deb3", "white":"#ffffff", "whitesmoke":"#f5f5f5", "yellow":"#ffff00", "yellowgreen":"#9acd32"};
goog.provide("goog.math");
goog.require("goog.array");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a)
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a)
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max)
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a)
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1.0E-6)
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360)
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees))
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees))
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)))
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if(d > 180) {
    d = d - 360
  }else {
    if(d <= -180) {
      d = 360 + d
    }
  }
  return d
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1]
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for(var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0
  }
  for(var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0
  }
  for(i = 1;i <= length1;i++) {
    for(j = 1;j <= length1;j++) {
      if(compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1
      }else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1])
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while(i > 0 && j > 0) {
    if(compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--
    }else {
      if(arr[i - 1][j] > arr[i][j - 1]) {
        i--
      }else {
        j--
      }
    }
  }
  return result
};
goog.math.sum = function(var_args) {
  return goog.array.reduce(arguments, function(sum, value) {
    return sum + value
  }, 0)
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length
};
goog.math.standardDeviation = function(var_args) {
  var sampleSize = arguments.length;
  if(sampleSize < 2) {
    return 0
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2)
  })) / (sampleSize - 1);
  return Math.sqrt(variance)
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num)
};
goog.provide("goog.color");
goog.require("goog.color.names");
goog.require("goog.math");
goog.color.parse = function(str) {
  var result = {};
  str = String(str);
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  if(goog.color.isValidHexColor_(maybeHex)) {
    result.hex = goog.color.normalizeHex(maybeHex);
    result.type = "hex";
    return result
  }else {
    var rgb = goog.color.isValidRgbColor_(str);
    if(rgb.length) {
      result.hex = goog.color.rgbArrayToHex(rgb);
      result.type = "rgb";
      return result
    }else {
      if(goog.color.names) {
        var hex = goog.color.names[str.toLowerCase()];
        if(hex) {
          result.hex = hex;
          result.type = "named";
          return result
        }
      }
    }
  }
  throw Error(str + " is not a valid color string");
};
goog.color.isValidColor = function(str) {
  var maybeHex = goog.color.prependHashIfNecessaryHelper(str);
  return!!(goog.color.isValidHexColor_(maybeHex) || goog.color.isValidRgbColor_(str).length || goog.color.names && goog.color.names[str.toLowerCase()])
};
goog.color.parseRgb = function(str) {
  var rgb = goog.color.isValidRgbColor_(str);
  if(!rgb.length) {
    throw Error(str + " is not a valid RGB color");
  }
  return rgb
};
goog.color.hexToRgbStyle = function(hexColor) {
  return goog.color.rgbStyle_(goog.color.hexToRgb(hexColor))
};
goog.color.hexTripletRe_ = /#(.)(.)(.)/;
goog.color.normalizeHex = function(hexColor) {
  if(!goog.color.isValidHexColor_(hexColor)) {
    throw Error("'" + hexColor + "' is not a valid hex color");
  }
  if(hexColor.length == 4) {
    hexColor = hexColor.replace(goog.color.hexTripletRe_, "#$1$1$2$2$3$3")
  }
  return hexColor.toLowerCase()
};
goog.color.hexToRgb = function(hexColor) {
  hexColor = goog.color.normalizeHex(hexColor);
  var r = parseInt(hexColor.substr(1, 2), 16);
  var g = parseInt(hexColor.substr(3, 2), 16);
  var b = parseInt(hexColor.substr(5, 2), 16);
  return[r, g, b]
};
goog.color.rgbToHex = function(r, g, b) {
  r = Number(r);
  g = Number(g);
  b = Number(b);
  if(isNaN(r) || r < 0 || r > 255 || isNaN(g) || g < 0 || g > 255 || isNaN(b) || b < 0 || b > 255) {
    throw Error('"(' + r + "," + g + "," + b + '") is not a valid RGB color');
  }
  var hexR = goog.color.prependZeroIfNecessaryHelper(r.toString(16));
  var hexG = goog.color.prependZeroIfNecessaryHelper(g.toString(16));
  var hexB = goog.color.prependZeroIfNecessaryHelper(b.toString(16));
  return"#" + hexR + hexG + hexB
};
goog.color.rgbArrayToHex = function(rgb) {
  return goog.color.rgbToHex(rgb[0], rgb[1], rgb[2])
};
goog.color.rgbToHsl = function(r, g, b) {
  var normR = r / 255;
  var normG = g / 255;
  var normB = b / 255;
  var max = Math.max(normR, normG, normB);
  var min = Math.min(normR, normG, normB);
  var h = 0;
  var s = 0;
  var l = 0.5 * (max + min);
  if(max != min) {
    if(max == normR) {
      h = 60 * (normG - normB) / (max - min)
    }else {
      if(max == normG) {
        h = 60 * (normB - normR) / (max - min) + 120
      }else {
        if(max == normB) {
          h = 60 * (normR - normG) / (max - min) + 240
        }
      }
    }
    if(0 < l && l <= 0.5) {
      s = (max - min) / (2 * l)
    }else {
      s = (max - min) / (2 - 2 * l)
    }
  }
  return[Math.round(h + 360) % 360, s, l]
};
goog.color.rgbArrayToHsl = function(rgb) {
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hueToRgb_ = function(v1, v2, vH) {
  if(vH < 0) {
    vH += 1
  }else {
    if(vH > 1) {
      vH -= 1
    }
  }
  if(6 * vH < 1) {
    return v1 + (v2 - v1) * 6 * vH
  }else {
    if(2 * vH < 1) {
      return v2
    }else {
      if(3 * vH < 2) {
        return v1 + (v2 - v1) * (2 / 3 - vH) * 6
      }
    }
  }
  return v1
};
goog.color.hslToRgb = function(h, s, l) {
  var r = 0;
  var g = 0;
  var b = 0;
  var normH = h / 360;
  if(s == 0) {
    r = g = b = l * 255
  }else {
    var temp1 = 0;
    var temp2 = 0;
    if(l < 0.5) {
      temp2 = l * (1 + s)
    }else {
      temp2 = l + s - s * l
    }
    temp1 = 2 * l - temp2;
    r = 255 * goog.color.hueToRgb_(temp1, temp2, normH + 1 / 3);
    g = 255 * goog.color.hueToRgb_(temp1, temp2, normH);
    b = 255 * goog.color.hueToRgb_(temp1, temp2, normH - 1 / 3)
  }
  return[Math.round(r), Math.round(g), Math.round(b)]
};
goog.color.hslArrayToRgb = function(hsl) {
  return goog.color.hslToRgb(hsl[0], hsl[1], hsl[2])
};
goog.color.validHexColorRe_ = /^#(?:[0-9a-f]{3}){1,2}$/i;
goog.color.isValidHexColor_ = function(str) {
  return goog.color.validHexColorRe_.test(str)
};
goog.color.normalizedHexColorRe_ = /^#[0-9a-f]{6}$/;
goog.color.isNormalizedHexColor_ = function(str) {
  return goog.color.normalizedHexColorRe_.test(str)
};
goog.color.rgbColorRe_ = /^(?:rgb)?\((0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2}),\s?(0|[1-9]\d{0,2})\)$/i;
goog.color.isValidRgbColor_ = function(str) {
  var regExpResultArray = str.match(goog.color.rgbColorRe_);
  if(regExpResultArray) {
    var r = Number(regExpResultArray[1]);
    var g = Number(regExpResultArray[2]);
    var b = Number(regExpResultArray[3]);
    if(r >= 0 && r <= 255 && g >= 0 && g <= 255 && b >= 0 && b <= 255) {
      return[r, g, b]
    }
  }
  return[]
};
goog.color.prependZeroIfNecessaryHelper = function(hex) {
  return hex.length == 1 ? "0" + hex : hex
};
goog.color.prependHashIfNecessaryHelper = function(str) {
  return str.charAt(0) == "#" ? str : "#" + str
};
goog.color.rgbStyle_ = function(rgb) {
  return"rgb(" + rgb.join(",") + ")"
};
goog.color.hsvToRgb = function(h, s, brightness) {
  var red = 0;
  var green = 0;
  var blue = 0;
  if(s == 0) {
    red = brightness;
    green = brightness;
    blue = brightness
  }else {
    var sextant = Math.floor(h / 60);
    var remainder = h / 60 - sextant;
    var val1 = brightness * (1 - s);
    var val2 = brightness * (1 - s * remainder);
    var val3 = brightness * (1 - s * (1 - remainder));
    switch(sextant) {
      case 1:
        red = val2;
        green = brightness;
        blue = val1;
        break;
      case 2:
        red = val1;
        green = brightness;
        blue = val3;
        break;
      case 3:
        red = val1;
        green = val2;
        blue = brightness;
        break;
      case 4:
        red = val3;
        green = val1;
        blue = brightness;
        break;
      case 5:
        red = brightness;
        green = val1;
        blue = val2;
        break;
      case 6:
      ;
      case 0:
        red = brightness;
        green = val3;
        blue = val1;
        break
    }
  }
  return[Math.floor(red), Math.floor(green), Math.floor(blue)]
};
goog.color.rgbToHsv = function(red, green, blue) {
  var max = Math.max(Math.max(red, green), blue);
  var min = Math.min(Math.min(red, green), blue);
  var hue;
  var saturation;
  var value = max;
  if(min == max) {
    hue = 0;
    saturation = 0
  }else {
    var delta = max - min;
    saturation = delta / max;
    if(red == max) {
      hue = (green - blue) / delta
    }else {
      if(green == max) {
        hue = 2 + (blue - red) / delta
      }else {
        hue = 4 + (red - green) / delta
      }
    }
    hue *= 60;
    if(hue < 0) {
      hue += 360
    }
    if(hue > 360) {
      hue -= 360
    }
  }
  return[hue, saturation, value]
};
goog.color.rgbArrayToHsv = function(rgb) {
  return goog.color.rgbToHsv(rgb[0], rgb[1], rgb[2])
};
goog.color.hsvArrayToRgb = function(hsv) {
  return goog.color.hsvToRgb(hsv[0], hsv[1], hsv[2])
};
goog.color.hexToHsl = function(hex) {
  var rgb = goog.color.hexToRgb(hex);
  return goog.color.rgbToHsl(rgb[0], rgb[1], rgb[2])
};
goog.color.hslToHex = function(h, s, l) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(h, s, l))
};
goog.color.hslArrayToHex = function(hsl) {
  return goog.color.rgbArrayToHex(goog.color.hslToRgb(hsl[0], hsl[1], hsl[2]))
};
goog.color.hexToHsv = function(hex) {
  return goog.color.rgbArrayToHsv(goog.color.hexToRgb(hex))
};
goog.color.hsvToHex = function(h, s, v) {
  return goog.color.rgbArrayToHex(goog.color.hsvToRgb(h, s, v))
};
goog.color.hsvArrayToHex = function(hsv) {
  return goog.color.hsvToHex(hsv[0], hsv[1], hsv[2])
};
goog.color.hslDistance = function(hsl1, hsl2) {
  var sl1, sl2;
  if(hsl1[2] <= 0.5) {
    sl1 = hsl1[1] * hsl1[2]
  }else {
    sl1 = hsl1[1] * (1 - hsl1[2])
  }
  if(hsl2[2] <= 0.5) {
    sl2 = hsl2[1] * hsl2[2]
  }else {
    sl2 = hsl2[1] * (1 - hsl2[2])
  }
  var h1 = hsl1[0] / 360;
  var h2 = hsl2[0] / 360;
  var dh = (h1 - h2) * 2 * Math.PI;
  return(hsl1[2] - hsl2[2]) * (hsl1[2] - hsl2[2]) + sl1 * sl1 + sl2 * sl2 - 2 * sl1 * sl2 * Math.cos(dh)
};
goog.color.blend = function(rgb1, rgb2, factor) {
  factor = goog.math.clamp(factor, 0, 1);
  return[Math.round(factor * rgb1[0] + (1 - factor) * rgb2[0]), Math.round(factor * rgb1[1] + (1 - factor) * rgb2[1]), Math.round(factor * rgb1[2] + (1 - factor) * rgb2[2])]
};
goog.color.darken = function(rgb, factor) {
  var black = [0, 0, 0];
  return goog.color.blend(black, rgb, factor)
};
goog.color.lighten = function(rgb, factor) {
  var white = [255, 255, 255];
  return goog.color.blend(white, rgb, factor)
};
goog.color.highContrast = function(prime, suggestions) {
  var suggestionsWithDiff = [];
  for(var i = 0;i < suggestions.length;i++) {
    suggestionsWithDiff.push({color:suggestions[i], diff:goog.color.yiqBrightnessDiff_(suggestions[i], prime) + goog.color.colorDiff_(suggestions[i], prime)})
  }
  suggestionsWithDiff.sort(function(a, b) {
    return b.diff - a.diff
  });
  return suggestionsWithDiff[0].color
};
goog.color.yiqBrightness_ = function(rgb) {
  return Math.round((rgb[0] * 299 + rgb[1] * 587 + rgb[2] * 114) / 1E3)
};
goog.color.yiqBrightnessDiff_ = function(rgb1, rgb2) {
  return Math.abs(goog.color.yiqBrightness_(rgb1) - goog.color.yiqBrightness_(rgb2))
};
goog.color.colorDiff_ = function(rgb1, rgb2) {
  return Math.abs(rgb1[0] - rgb2[0]) + Math.abs(rgb1[1] - rgb2[1]) + Math.abs(rgb1[2] - rgb2[2])
};
goog.provide("goog.ui.ColorMenuButtonRenderer");
goog.require("goog.color");
goog.require("goog.dom.classes");
goog.require("goog.ui.ControlContent");
goog.require("goog.ui.MenuButtonRenderer");
goog.require("goog.userAgent");
goog.ui.ColorMenuButtonRenderer = function() {
  goog.ui.MenuButtonRenderer.call(this)
};
goog.inherits(goog.ui.ColorMenuButtonRenderer, goog.ui.MenuButtonRenderer);
goog.addSingletonGetter(goog.ui.ColorMenuButtonRenderer);
goog.ui.ColorMenuButtonRenderer.CSS_CLASS = goog.getCssName("goog-color-menu-button");
goog.ui.ColorMenuButtonRenderer.prototype.createCaption = function(content, dom) {
  return goog.ui.ColorMenuButtonRenderer.superClass_.createCaption.call(this, goog.ui.ColorMenuButtonRenderer.wrapCaption(content, dom), dom)
};
goog.ui.ColorMenuButtonRenderer.wrapCaption = function(content, dom) {
  return dom.createDom("div", goog.getCssName(goog.ui.ColorMenuButtonRenderer.CSS_CLASS, "indicator"), content)
};
goog.ui.ColorMenuButtonRenderer.prototype.setValue = function(element, value) {
  if(element) {
    goog.ui.ColorMenuButtonRenderer.setCaptionValue(this.getContentElement(element), value)
  }
};
goog.ui.ColorMenuButtonRenderer.setCaptionValue = function(caption, value) {
  if(caption && caption.firstChild) {
    var hexColor;
    try {
      hexColor = goog.color.parse(value).hex
    }catch(ex) {
      hexColor = null
    }
    caption.firstChild.style.borderBottomColor = hexColor || (goog.userAgent.IE ? "" : "transparent")
  }
};
goog.ui.ColorMenuButtonRenderer.prototype.initializeDom = function(button) {
  this.setValue(button.getElement(), button.getValue());
  goog.dom.classes.add(button.getElement(), goog.ui.ColorMenuButtonRenderer.CSS_CLASS);
  goog.ui.ColorMenuButtonRenderer.superClass_.initializeDom.call(this, button)
};
goog.provide("goog.ui.ColorButtonRenderer");
goog.require("goog.dom.classes");
goog.require("goog.functions");
goog.require("goog.ui.ColorMenuButtonRenderer");
goog.ui.ColorButtonRenderer = function() {
  goog.base(this);
  this.createDropdown = goog.functions.NULL
};
goog.inherits(goog.ui.ColorButtonRenderer, goog.ui.ColorMenuButtonRenderer);
goog.addSingletonGetter(goog.ui.ColorButtonRenderer);
goog.ui.ColorButtonRenderer.CSS_CLASS = goog.getCssName("goog-color-button");
goog.ui.ColorButtonRenderer.prototype.createCaption = function(content, dom) {
  var caption = goog.base(this, "createCaption", content, dom);
  goog.dom.classes.add(caption, goog.ui.ColorButtonRenderer.CSS_CLASS);
  return caption
};
goog.ui.ColorButtonRenderer.prototype.initializeDom = function(button) {
  goog.base(this, "initializeDom", button);
  goog.dom.classes.add(button.getElement(), goog.ui.ColorButtonRenderer.CSS_CLASS)
};
goog.provide("goog.ui.ColorButton");
goog.require("goog.ui.Button");
goog.require("goog.ui.ColorButtonRenderer");
goog.require("goog.ui.registry");
goog.ui.ColorButton = function(content, opt_renderer, opt_domHelper) {
  goog.ui.Button.call(this, content, opt_renderer || goog.ui.ColorButtonRenderer.getInstance(), opt_domHelper)
};
goog.inherits(goog.ui.ColorButton, goog.ui.Button);
goog.ui.registry.setDecoratorByClassName(goog.ui.ColorButtonRenderer.CSS_CLASS, function() {
  return new goog.ui.ColorButton(null)
});
goog.provide("clojure.zip");
goog.require("cljs.core");
clojure.zip.zipper = function zipper(branch_QMARK_, children, make_node, root) {
  return cljs.core.with_meta(cljs.core.PersistentVector.fromArray([root, null], true), cljs.core.ObjMap.fromObject(["\ufdd0'zip/make-node", "\ufdd0'zip/children", "\ufdd0'zip/branch?"], {"\ufdd0'zip/make-node":make_node, "\ufdd0'zip/children":children, "\ufdd0'zip/branch?":branch_QMARK_}))
};
clojure.zip.seq_zip = function seq_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.seq_QMARK_, cljs.core.identity, function(node, children) {
    return cljs.core.with_meta.call(null, children, cljs.core.meta.call(null, node))
  }, root)
};
clojure.zip.vector_zip = function vector_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.vector_QMARK_, cljs.core.seq, function(node, children) {
    return cljs.core.with_meta.call(null, cljs.core.vec.call(null, children), cljs.core.meta.call(null, node))
  }, root)
};
clojure.zip.xml_zip = function xml_zip(root) {
  return clojure.zip.zipper.call(null, cljs.core.complement.call(null, cljs.core.string_QMARK_), cljs.core.comp.call(null, cljs.core.seq, "\ufdd0'content"), function(node, children) {
    return cljs.core.assoc.call(null, node, "\ufdd0'content", function() {
      var and__3860__auto____159976 = children;
      if(cljs.core.truth_(and__3860__auto____159976)) {
        return cljs.core.apply.call(null, cljs.core.vector, children)
      }else {
        return and__3860__auto____159976
      }
    }())
  }, root)
};
clojure.zip.node = function node(loc) {
  return loc.call(null, 0)
};
clojure.zip.branch_QMARK_ = function branch_QMARK_(loc) {
  return(new cljs.core.Keyword("\ufdd0'zip/branch?")).call(null, cljs.core.meta.call(null, loc)).call(null, clojure.zip.node.call(null, loc))
};
clojure.zip.children = function children(loc) {
  if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, loc))) {
    return(new cljs.core.Keyword("\ufdd0'zip/children")).call(null, cljs.core.meta.call(null, loc)).call(null, clojure.zip.node.call(null, loc))
  }else {
    throw"called children on a leaf node";
  }
};
clojure.zip.make_node = function make_node(loc, node, children) {
  return(new cljs.core.Keyword("\ufdd0'zip/make-node")).call(null, cljs.core.meta.call(null, loc)).call(null, node, children)
};
clojure.zip.path = function path(loc) {
  return(new cljs.core.Keyword("\ufdd0'pnodes")).call(null, loc.call(null, 1))
};
clojure.zip.lefts = function lefts(loc) {
  return cljs.core.seq.call(null, (new cljs.core.Keyword("\ufdd0'l")).call(null, loc.call(null, 1)))
};
clojure.zip.rights = function rights(loc) {
  return(new cljs.core.Keyword("\ufdd0'r")).call(null, loc.call(null, 1))
};
clojure.zip.down = function down(loc) {
  if(cljs.core.truth_(clojure.zip.branch_QMARK_.call(null, loc))) {
    var vec__159986__159988 = loc;
    var node__159989 = cljs.core.nth.call(null, vec__159986__159988, 0, null);
    var path__159990 = cljs.core.nth.call(null, vec__159986__159988, 1, null);
    var vec__159987__159991 = clojure.zip.children.call(null, loc);
    var c__159992 = cljs.core.nth.call(null, vec__159987__159991, 0, null);
    var cnext__159993 = cljs.core.nthnext.call(null, vec__159987__159991, 1);
    var cs__159994 = vec__159987__159991;
    if(cljs.core.truth_(cs__159994)) {
      return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([c__159992, cljs.core.ObjMap.fromObject(["\ufdd0'l", "\ufdd0'pnodes", "\ufdd0'ppath", "\ufdd0'r"], {"\ufdd0'l":cljs.core.PersistentVector.EMPTY, "\ufdd0'pnodes":cljs.core.truth_(path__159990) ? cljs.core.conj.call(null, (new cljs.core.Keyword("\ufdd0'pnodes")).call(null, path__159990), node__159989) : cljs.core.PersistentVector.fromArray([node__159989], true), "\ufdd0'ppath":path__159990, "\ufdd0'r":cnext__159993})], 
      true), cljs.core.meta.call(null, loc))
    }else {
      return null
    }
  }else {
    return null
  }
};
clojure.zip.up = function up(loc) {
  var vec__160009__160011 = loc;
  var node__160012 = cljs.core.nth.call(null, vec__160009__160011, 0, null);
  var map__160010__160013 = cljs.core.nth.call(null, vec__160009__160011, 1, null);
  var map__160010__160014 = cljs.core.seq_QMARK_.call(null, map__160010__160013) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160010__160013) : map__160010__160013;
  var path__160015 = map__160010__160014;
  var l__160016 = cljs.core._lookup.call(null, map__160010__160014, "\ufdd0'l", null);
  var ppath__160017 = cljs.core._lookup.call(null, map__160010__160014, "\ufdd0'ppath", null);
  var pnodes__160018 = cljs.core._lookup.call(null, map__160010__160014, "\ufdd0'pnodes", null);
  var r__160019 = cljs.core._lookup.call(null, map__160010__160014, "\ufdd0'r", null);
  var changed_QMARK___160020 = cljs.core._lookup.call(null, map__160010__160014, "\ufdd0'changed?", null);
  if(cljs.core.truth_(pnodes__160018)) {
    var pnode__160021 = cljs.core.peek.call(null, pnodes__160018);
    return cljs.core.with_meta.call(null, cljs.core.truth_(changed_QMARK___160020) ? cljs.core.PersistentVector.fromArray([clojure.zip.make_node.call(null, loc, pnode__160021, cljs.core.concat.call(null, l__160016, cljs.core.cons.call(null, node__160012, r__160019))), function() {
      var and__3860__auto____160022 = ppath__160017;
      if(cljs.core.truth_(and__3860__auto____160022)) {
        return cljs.core.assoc.call(null, ppath__160017, "\ufdd0'changed?", true)
      }else {
        return and__3860__auto____160022
      }
    }()], true) : cljs.core.PersistentVector.fromArray([pnode__160021, ppath__160017], true), cljs.core.meta.call(null, loc))
  }else {
    return null
  }
};
clojure.zip.root = function root(loc) {
  while(true) {
    if(cljs.core._EQ_.call(null, "\ufdd0'end", loc.call(null, 1))) {
      return clojure.zip.node.call(null, loc)
    }else {
      var p__160024 = clojure.zip.up.call(null, loc);
      if(cljs.core.truth_(p__160024)) {
        var G__160025 = p__160024;
        loc = G__160025;
        continue
      }else {
        return clojure.zip.node.call(null, loc)
      }
    }
    break
  }
};
clojure.zip.right = function right(loc) {
  var vec__160040__160043 = loc;
  var node__160044 = cljs.core.nth.call(null, vec__160040__160043, 0, null);
  var map__160041__160045 = cljs.core.nth.call(null, vec__160040__160043, 1, null);
  var map__160041__160046 = cljs.core.seq_QMARK_.call(null, map__160041__160045) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160041__160045) : map__160041__160045;
  var path__160047 = map__160041__160046;
  var l__160048 = cljs.core._lookup.call(null, map__160041__160046, "\ufdd0'l", null);
  var vec__160042__160049 = cljs.core._lookup.call(null, map__160041__160046, "\ufdd0'r", null);
  var r__160050 = cljs.core.nth.call(null, vec__160042__160049, 0, null);
  var rnext__160051 = cljs.core.nthnext.call(null, vec__160042__160049, 1);
  var rs__160052 = vec__160042__160049;
  if(cljs.core.truth_(function() {
    var and__3860__auto____160053 = path__160047;
    if(cljs.core.truth_(and__3860__auto____160053)) {
      return rs__160052
    }else {
      return and__3860__auto____160053
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([r__160050, cljs.core.assoc.call(null, path__160047, "\ufdd0'l", cljs.core.conj.call(null, l__160048, node__160044), "\ufdd0'r", rnext__160051)], true), cljs.core.meta.call(null, loc))
  }else {
    return null
  }
};
clojure.zip.rightmost = function rightmost(loc) {
  var vec__160064__160066 = loc;
  var node__160067 = cljs.core.nth.call(null, vec__160064__160066, 0, null);
  var map__160065__160068 = cljs.core.nth.call(null, vec__160064__160066, 1, null);
  var map__160065__160069 = cljs.core.seq_QMARK_.call(null, map__160065__160068) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160065__160068) : map__160065__160068;
  var path__160070 = map__160065__160069;
  var l__160071 = cljs.core._lookup.call(null, map__160065__160069, "\ufdd0'l", null);
  var r__160072 = cljs.core._lookup.call(null, map__160065__160069, "\ufdd0'r", null);
  if(cljs.core.truth_(function() {
    var and__3860__auto____160073 = path__160070;
    if(cljs.core.truth_(and__3860__auto____160073)) {
      return r__160072
    }else {
      return and__3860__auto____160073
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.last.call(null, r__160072), cljs.core.assoc.call(null, path__160070, "\ufdd0'l", cljs.core.apply.call(null, cljs.core.conj, l__160071, node__160067, cljs.core.butlast.call(null, r__160072)), "\ufdd0'r", null)], true), cljs.core.meta.call(null, loc))
  }else {
    return loc
  }
};
clojure.zip.left = function left(loc) {
  var vec__160084__160086 = loc;
  var node__160087 = cljs.core.nth.call(null, vec__160084__160086, 0, null);
  var map__160085__160088 = cljs.core.nth.call(null, vec__160084__160086, 1, null);
  var map__160085__160089 = cljs.core.seq_QMARK_.call(null, map__160085__160088) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160085__160088) : map__160085__160088;
  var path__160090 = map__160085__160089;
  var l__160091 = cljs.core._lookup.call(null, map__160085__160089, "\ufdd0'l", null);
  var r__160092 = cljs.core._lookup.call(null, map__160085__160089, "\ufdd0'r", null);
  if(cljs.core.truth_(function() {
    var and__3860__auto____160093 = path__160090;
    if(cljs.core.truth_(and__3860__auto____160093)) {
      return cljs.core.seq.call(null, l__160091)
    }else {
      return and__3860__auto____160093
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.peek.call(null, l__160091), cljs.core.assoc.call(null, path__160090, "\ufdd0'l", cljs.core.pop.call(null, l__160091), "\ufdd0'r", cljs.core.cons.call(null, node__160087, r__160092))], true), cljs.core.meta.call(null, loc))
  }else {
    return null
  }
};
clojure.zip.leftmost = function leftmost(loc) {
  var vec__160104__160106 = loc;
  var node__160107 = cljs.core.nth.call(null, vec__160104__160106, 0, null);
  var map__160105__160108 = cljs.core.nth.call(null, vec__160104__160106, 1, null);
  var map__160105__160109 = cljs.core.seq_QMARK_.call(null, map__160105__160108) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160105__160108) : map__160105__160108;
  var path__160110 = map__160105__160109;
  var l__160111 = cljs.core._lookup.call(null, map__160105__160109, "\ufdd0'l", null);
  var r__160112 = cljs.core._lookup.call(null, map__160105__160109, "\ufdd0'r", null);
  if(cljs.core.truth_(function() {
    var and__3860__auto____160113 = path__160110;
    if(cljs.core.truth_(and__3860__auto____160113)) {
      return cljs.core.seq.call(null, l__160111)
    }else {
      return and__3860__auto____160113
    }
  }())) {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.first.call(null, l__160111), cljs.core.assoc.call(null, path__160110, "\ufdd0'l", cljs.core.PersistentVector.EMPTY, "\ufdd0'r", cljs.core.concat.call(null, cljs.core.rest.call(null, l__160111), cljs.core.PersistentVector.fromArray([node__160107], true), r__160112))], true), cljs.core.meta.call(null, loc))
  }else {
    return loc
  }
};
clojure.zip.insert_left = function insert_left(loc, item) {
  var vec__160122__160124 = loc;
  var node__160125 = cljs.core.nth.call(null, vec__160122__160124, 0, null);
  var map__160123__160126 = cljs.core.nth.call(null, vec__160122__160124, 1, null);
  var map__160123__160127 = cljs.core.seq_QMARK_.call(null, map__160123__160126) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160123__160126) : map__160123__160126;
  var path__160128 = map__160123__160127;
  var l__160129 = cljs.core._lookup.call(null, map__160123__160127, "\ufdd0'l", null);
  if(path__160128 == null) {
    throw"Insert at top";
  }else {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([node__160125, cljs.core.assoc.call(null, path__160128, "\ufdd0'l", cljs.core.conj.call(null, l__160129, item), "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc))
  }
};
clojure.zip.insert_right = function insert_right(loc, item) {
  var vec__160138__160140 = loc;
  var node__160141 = cljs.core.nth.call(null, vec__160138__160140, 0, null);
  var map__160139__160142 = cljs.core.nth.call(null, vec__160138__160140, 1, null);
  var map__160139__160143 = cljs.core.seq_QMARK_.call(null, map__160139__160142) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160139__160142) : map__160139__160142;
  var path__160144 = map__160139__160143;
  var r__160145 = cljs.core._lookup.call(null, map__160139__160143, "\ufdd0'r", null);
  if(path__160144 == null) {
    throw"Insert at top";
  }else {
    return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([node__160141, cljs.core.assoc.call(null, path__160144, "\ufdd0'r", cljs.core.cons.call(null, item, r__160145), "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc))
  }
};
clojure.zip.replace = function replace(loc, node) {
  var vec__160150__160151 = loc;
  var ___160152 = cljs.core.nth.call(null, vec__160150__160151, 0, null);
  var path__160153 = cljs.core.nth.call(null, vec__160150__160151, 1, null);
  return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([node, cljs.core.assoc.call(null, path__160153, "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc))
};
clojure.zip.edit = function() {
  var edit__delegate = function(loc, f, args) {
    return clojure.zip.replace.call(null, loc, cljs.core.apply.call(null, f, clojure.zip.node.call(null, loc), args))
  };
  var edit = function(loc, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return edit__delegate.call(this, loc, f, args)
  };
  edit.cljs$lang$maxFixedArity = 2;
  edit.cljs$lang$applyTo = function(arglist__160154) {
    var loc = cljs.core.first(arglist__160154);
    var f = cljs.core.first(cljs.core.next(arglist__160154));
    var args = cljs.core.rest(cljs.core.next(arglist__160154));
    return edit__delegate(loc, f, args)
  };
  edit.cljs$lang$arity$variadic = edit__delegate;
  return edit
}();
clojure.zip.insert_child = function insert_child(loc, item) {
  return clojure.zip.replace.call(null, loc, clojure.zip.make_node.call(null, loc, clojure.zip.node.call(null, loc), cljs.core.cons.call(null, item, clojure.zip.children.call(null, loc))))
};
clojure.zip.append_child = function append_child(loc, item) {
  return clojure.zip.replace.call(null, loc, clojure.zip.make_node.call(null, loc, clojure.zip.node.call(null, loc), cljs.core.concat.call(null, clojure.zip.children.call(null, loc), cljs.core.PersistentVector.fromArray([item], true))))
};
clojure.zip.next = function next(loc) {
  if(cljs.core._EQ_.call(null, "\ufdd0'end", loc.call(null, 1))) {
    return loc
  }else {
    var or__3862__auto____160161 = function() {
      var and__3860__auto____160160 = clojure.zip.branch_QMARK_.call(null, loc);
      if(cljs.core.truth_(and__3860__auto____160160)) {
        return clojure.zip.down.call(null, loc)
      }else {
        return and__3860__auto____160160
      }
    }();
    if(cljs.core.truth_(or__3862__auto____160161)) {
      return or__3862__auto____160161
    }else {
      var or__3862__auto____160162 = clojure.zip.right.call(null, loc);
      if(cljs.core.truth_(or__3862__auto____160162)) {
        return or__3862__auto____160162
      }else {
        var p__160163 = loc;
        while(true) {
          if(cljs.core.truth_(clojure.zip.up.call(null, p__160163))) {
            var or__3862__auto____160164 = clojure.zip.right.call(null, clojure.zip.up.call(null, p__160163));
            if(cljs.core.truth_(or__3862__auto____160164)) {
              return or__3862__auto____160164
            }else {
              var G__160165 = clojure.zip.up.call(null, p__160163);
              p__160163 = G__160165;
              continue
            }
          }else {
            return cljs.core.PersistentVector.fromArray([clojure.zip.node.call(null, p__160163), "\ufdd0'end"], true)
          }
          break
        }
      }
    }
  }
};
clojure.zip.prev = function prev(loc) {
  var temp__4009__auto____160172 = clojure.zip.left.call(null, loc);
  if(cljs.core.truth_(temp__4009__auto____160172)) {
    var lloc__160173 = temp__4009__auto____160172;
    var loc__160174 = lloc__160173;
    while(true) {
      var temp__4009__auto____160176 = function() {
        var and__3860__auto____160175 = clojure.zip.branch_QMARK_.call(null, loc__160174);
        if(cljs.core.truth_(and__3860__auto____160175)) {
          return clojure.zip.down.call(null, loc__160174)
        }else {
          return and__3860__auto____160175
        }
      }();
      if(cljs.core.truth_(temp__4009__auto____160176)) {
        var child__160177 = temp__4009__auto____160176;
        var G__160178 = clojure.zip.rightmost.call(null, child__160177);
        loc__160174 = G__160178;
        continue
      }else {
        return loc__160174
      }
      break
    }
  }else {
    return clojure.zip.up.call(null, loc)
  }
};
clojure.zip.end_QMARK_ = function end_QMARK_(loc) {
  return cljs.core._EQ_.call(null, "\ufdd0'end", loc.call(null, 1))
};
clojure.zip.remove = function remove(loc) {
  var vec__160195__160197 = loc;
  var node__160198 = cljs.core.nth.call(null, vec__160195__160197, 0, null);
  var map__160196__160199 = cljs.core.nth.call(null, vec__160195__160197, 1, null);
  var map__160196__160200 = cljs.core.seq_QMARK_.call(null, map__160196__160199) ? cljs.core.apply.call(null, cljs.core.hash_map, map__160196__160199) : map__160196__160199;
  var path__160201 = map__160196__160200;
  var l__160202 = cljs.core._lookup.call(null, map__160196__160200, "\ufdd0'l", null);
  var ppath__160203 = cljs.core._lookup.call(null, map__160196__160200, "\ufdd0'ppath", null);
  var pnodes__160204 = cljs.core._lookup.call(null, map__160196__160200, "\ufdd0'pnodes", null);
  var rs__160205 = cljs.core._lookup.call(null, map__160196__160200, "\ufdd0'r", null);
  if(path__160201 == null) {
    throw"Remove at top";
  }else {
    if(cljs.core.count.call(null, l__160202) > 0) {
      var loc__160206 = cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([cljs.core.peek.call(null, l__160202), cljs.core.assoc.call(null, path__160201, "\ufdd0'l", cljs.core.pop.call(null, l__160202), "\ufdd0'changed?", true)], true), cljs.core.meta.call(null, loc));
      while(true) {
        var temp__4009__auto____160208 = function() {
          var and__3860__auto____160207 = clojure.zip.branch_QMARK_.call(null, loc__160206);
          if(cljs.core.truth_(and__3860__auto____160207)) {
            return clojure.zip.down.call(null, loc__160206)
          }else {
            return and__3860__auto____160207
          }
        }();
        if(cljs.core.truth_(temp__4009__auto____160208)) {
          var child__160209 = temp__4009__auto____160208;
          var G__160211 = clojure.zip.rightmost.call(null, child__160209);
          loc__160206 = G__160211;
          continue
        }else {
          return loc__160206
        }
        break
      }
    }else {
      return cljs.core.with_meta.call(null, cljs.core.PersistentVector.fromArray([clojure.zip.make_node.call(null, loc, cljs.core.peek.call(null, pnodes__160204), rs__160205), function() {
        var and__3860__auto____160210 = ppath__160203;
        if(cljs.core.truth_(and__3860__auto____160210)) {
          return cljs.core.assoc.call(null, ppath__160203, "\ufdd0'changed?", true)
        }else {
          return and__3860__auto____160210
        }
      }()], true), cljs.core.meta.call(null, loc))
    }
  }
};
goog.provide("de.karolski.teeter_totter.selector");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("clojure.zip");
goog.require("de.karolski.teeter_totter.util");
goog.require("clojure.string");
de.karolski.teeter_totter.selector.ASelectable = {};
de.karolski.teeter_totter.selector.id_of_STAR_ = function id_of_STAR_(this$) {
  if(function() {
    var and__3860__auto____155104 = this$;
    if(and__3860__auto____155104) {
      return this$.de$karolski$teeter_totter$selector$ASelectable$id_of_STAR_$arity$1
    }else {
      return and__3860__auto____155104
    }
  }()) {
    return this$.de$karolski$teeter_totter$selector$ASelectable$id_of_STAR_$arity$1(this$)
  }else {
    var x__2400__auto____155105 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____155106 = de.karolski.teeter_totter.selector.id_of_STAR_[goog.typeOf(x__2400__auto____155105)];
      if(or__3862__auto____155106) {
        return or__3862__auto____155106
      }else {
        var or__3862__auto____155107 = de.karolski.teeter_totter.selector.id_of_STAR_["_"];
        if(or__3862__auto____155107) {
          return or__3862__auto____155107
        }else {
          throw cljs.core.missing_protocol.call(null, "ASelectable.id-of*", this$);
        }
      }
    }().call(null, this$)
  }
};
de.karolski.teeter_totter.selector.id_of_BANG__STAR_ = function id_of_BANG__STAR_(this$, id) {
  if(function() {
    var and__3860__auto____155112 = this$;
    if(and__3860__auto____155112) {
      return this$.de$karolski$teeter_totter$selector$ASelectable$id_of_BANG__STAR_$arity$2
    }else {
      return and__3860__auto____155112
    }
  }()) {
    return this$.de$karolski$teeter_totter$selector$ASelectable$id_of_BANG__STAR_$arity$2(this$, id)
  }else {
    var x__2400__auto____155113 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____155114 = de.karolski.teeter_totter.selector.id_of_BANG__STAR_[goog.typeOf(x__2400__auto____155113)];
      if(or__3862__auto____155114) {
        return or__3862__auto____155114
      }else {
        var or__3862__auto____155115 = de.karolski.teeter_totter.selector.id_of_BANG__STAR_["_"];
        if(or__3862__auto____155115) {
          return or__3862__auto____155115
        }else {
          throw cljs.core.missing_protocol.call(null, "ASelectable.id-of!*", this$);
        }
      }
    }().call(null, this$, id)
  }
};
de.karolski.teeter_totter.selector.class_of_STAR_ = function class_of_STAR_(this$) {
  if(function() {
    var and__3860__auto____155120 = this$;
    if(and__3860__auto____155120) {
      return this$.de$karolski$teeter_totter$selector$ASelectable$class_of_STAR_$arity$1
    }else {
      return and__3860__auto____155120
    }
  }()) {
    return this$.de$karolski$teeter_totter$selector$ASelectable$class_of_STAR_$arity$1(this$)
  }else {
    var x__2400__auto____155121 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____155122 = de.karolski.teeter_totter.selector.class_of_STAR_[goog.typeOf(x__2400__auto____155121)];
      if(or__3862__auto____155122) {
        return or__3862__auto____155122
      }else {
        var or__3862__auto____155123 = de.karolski.teeter_totter.selector.class_of_STAR_["_"];
        if(or__3862__auto____155123) {
          return or__3862__auto____155123
        }else {
          throw cljs.core.missing_protocol.call(null, "ASelectable.class-of*", this$);
        }
      }
    }().call(null, this$)
  }
};
de.karolski.teeter_totter.selector.class_of_BANG__STAR_ = function class_of_BANG__STAR_(this$, classes) {
  if(function() {
    var and__3860__auto____155128 = this$;
    if(and__3860__auto____155128) {
      return this$.de$karolski$teeter_totter$selector$ASelectable$class_of_BANG__STAR_$arity$2
    }else {
      return and__3860__auto____155128
    }
  }()) {
    return this$.de$karolski$teeter_totter$selector$ASelectable$class_of_BANG__STAR_$arity$2(this$, classes)
  }else {
    var x__2400__auto____155129 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____155130 = de.karolski.teeter_totter.selector.class_of_BANG__STAR_[goog.typeOf(x__2400__auto____155129)];
      if(or__3862__auto____155130) {
        return or__3862__auto____155130
      }else {
        var or__3862__auto____155131 = de.karolski.teeter_totter.selector.class_of_BANG__STAR_["_"];
        if(or__3862__auto____155131) {
          return or__3862__auto____155131
        }else {
          throw cljs.core.missing_protocol.call(null, "ASelectable.class-of!*", this$);
        }
      }
    }().call(null, this$, classes)
  }
};
de.karolski.teeter_totter.selector.Tag = {};
de.karolski.teeter_totter.selector.tag_name = function tag_name(this$) {
  if(function() {
    var and__3860__auto____155136 = this$;
    if(and__3860__auto____155136) {
      return this$.de$karolski$teeter_totter$selector$Tag$tag_name$arity$1
    }else {
      return and__3860__auto____155136
    }
  }()) {
    return this$.de$karolski$teeter_totter$selector$Tag$tag_name$arity$1(this$)
  }else {
    var x__2400__auto____155137 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____155138 = de.karolski.teeter_totter.selector.tag_name[goog.typeOf(x__2400__auto____155137)];
      if(or__3862__auto____155138) {
        return or__3862__auto____155138
      }else {
        var or__3862__auto____155139 = de.karolski.teeter_totter.selector.tag_name["_"];
        if(or__3862__auto____155139) {
          return or__3862__auto____155139
        }else {
          throw cljs.core.missing_protocol.call(null, "Tag.tag-name", this$);
        }
      }
    }().call(null, this$)
  }
};
de.karolski.teeter_totter.selector.id_of = function id_of(w) {
  return de.karolski.teeter_totter.selector.id_of_STAR_.call(null, w)
};
de.karolski.teeter_totter.selector.id_of_BANG_ = function id_of_BANG_(w, id) {
  var existing_id__155141 = de.karolski.teeter_totter.selector.id_of.call(null, w);
  if(cljs.core.truth_(existing_id__155141)) {
    throw Error([cljs.core.str(":id is already set to "), cljs.core.str(existing_id__155141)].join(""));
  }else {
  }
  return de.karolski.teeter_totter.selector.id_of_BANG__STAR_.call(null, w, id)
};
de.karolski.teeter_totter.selector.class_of = function class_of(w) {
  return de.karolski.teeter_totter.selector.class_of_STAR_.call(null, w)
};
de.karolski.teeter_totter.selector.class_of_BANG_ = function class_of_BANG_(w, classes) {
  return de.karolski.teeter_totter.selector.class_of_BANG__STAR_.call(null, w, classes)
};
de.karolski.teeter_totter.selector.id_selector_QMARK_ = function id_selector_QMARK_(s) {
  return cljs.core.name.call(null, s).startsWith("#")
};
de.karolski.teeter_totter.selector.mapknit = function() {
  var mapknit = null;
  var mapknit__2 = function(f, coll) {
    return mapknit.call(null, f, coll, null)
  };
  var mapknit__3 = function(f, coll, etc) {
    return new cljs.core.LazySeq(null, false, function() {
      if(cljs.core.seq.call(null, coll)) {
        return f.call(null, cljs.core.first.call(null, coll), mapknit.call(null, f, cljs.core.rest.call(null, coll), etc))
      }else {
        return etc
      }
    }, null)
  };
  mapknit = function(f, coll, etc) {
    switch(arguments.length) {
      case 2:
        return mapknit__2.call(this, f, coll);
      case 3:
        return mapknit__3.call(this, f, coll, etc)
    }
    throw"Invalid arity: " + arguments.length;
  };
  mapknit.cljs$lang$arity$2 = mapknit__2;
  mapknit.cljs$lang$arity$3 = mapknit__3;
  return mapknit
}();
de.karolski.teeter_totter.selector.iterate_while = function() {
  var iterate_while = null;
  var iterate_while__2 = function(f, x) {
    return new cljs.core.LazySeq(null, false, function() {
      if(cljs.core.truth_(x)) {
        return cljs.core.cons.call(null, x, iterate_while.call(null, f, f.call(null, x)))
      }else {
        return null
      }
    }, null)
  };
  var iterate_while__3 = function(f, x, pred) {
    return new cljs.core.LazySeq(null, false, function() {
      if(cljs.core.truth_(pred.call(null, x))) {
        return cljs.core.cons.call(null, x, iterate_while.call(null, f, f.call(null, x), pred))
      }else {
        return null
      }
    }, null)
  };
  iterate_while = function(f, x, pred) {
    switch(arguments.length) {
      case 2:
        return iterate_while__2.call(this, f, x);
      case 3:
        return iterate_while__3.call(this, f, x, pred)
    }
    throw"Invalid arity: " + arguments.length;
  };
  iterate_while.cljs$lang$arity$2 = iterate_while__2;
  iterate_while.cljs$lang$arity$3 = iterate_while__3;
  return iterate_while
}();
de.karolski.teeter_totter.selector.node_QMARK_ = function node_QMARK_(x) {
  return true
};
de.karolski.teeter_totter.selector.as_nodes = function as_nodes(node_or_nodes) {
  if(cljs.core.truth_(de.karolski.teeter_totter.selector.node_QMARK_.call(null, node_or_nodes))) {
    return cljs.core.PersistentVector.fromArray([node_or_nodes], true)
  }else {
    return node_or_nodes
  }
};
de.karolski.teeter_totter.selector.flatten_nodes_coll = function flatten_nodes_coll(x) {
  var flat_STAR___155154 = function flat_STAR_(x, stack) {
    while(true) {
      if(cljs.core.truth_(de.karolski.teeter_totter.selector.node_QMARK_.call(null, x))) {
        return cljs.core.cons.call(null, x, cljs.core.seq.call(null, stack) ? flat__155155.call(null, cljs.core.peek.call(null, stack), cljs.core.pop.call(null, stack)) : null)
      }else {
        var temp__4009__auto____155161 = cljs.core.seq.call(null, x);
        if(temp__4009__auto____155161) {
          var vec__155162__155163 = temp__4009__auto____155161;
          var x__155164 = cljs.core.nth.call(null, vec__155162__155163, 0, null);
          var xs__155165 = cljs.core.nthnext.call(null, vec__155162__155163, 1);
          var G__155166 = x__155164;
          var G__155167 = cljs.core.conj.call(null, stack, xs__155165);
          x = G__155166;
          stack = G__155167;
          continue
        }else {
          if(cljs.core.seq.call(null, stack)) {
            var G__155168 = cljs.core.peek.call(null, stack);
            var G__155169 = cljs.core.pop.call(null, stack);
            x = G__155168;
            stack = G__155169;
            continue
          }else {
            return null
          }
        }
      }
      break
    }
  };
  var flat__155155 = function flat(x, stack) {
    return new cljs.core.LazySeq(null, false, function() {
      return flat_STAR___155154.call(null, x, stack)
    }, null)
  };
  return flat__155155.call(null, x, cljs.core.List.EMPTY)
};
de.karolski.teeter_totter.selector.flatmap = function flatmap(f, node_or_nodes) {
  return de.karolski.teeter_totter.selector.flatten_nodes_coll.call(null, cljs.core.map.call(null, f, de.karolski.teeter_totter.selector.as_nodes.call(null, node_or_nodes)))
};
de.karolski.teeter_totter.selector.attr_values = function attr_values(node, attr) {
  var temp__4011__auto____155172 = cljs.core._lookup.call(null, (new cljs.core.Keyword("\ufdd0'attrs")).call(null, node), attr, null);
  if(cljs.core.truth_(temp__4011__auto____155172)) {
    var v__155173 = temp__4011__auto____155172;
    return cljs.core.set.call(null, cljs.core.re_seq.call(null, /\S+/, v__155173))
  }else {
    return null
  }
};
de.karolski.teeter_totter.selector.swing_zipper = function swing_zipper(root) {
  return clojure.zip.zipper.call(null, cljs.core.constantly.call(null, true), de.karolski.teeter_totter.util.children, cljs.core.identity, root)
};
de.karolski.teeter_totter.selector.zip_pred = function zip_pred(f) {
  return function(p1__155174_SHARP_) {
    var and__3860__auto____155177 = clojure.zip.branch_QMARK_.call(null, p1__155174_SHARP_);
    if(cljs.core.truth_(and__3860__auto____155177)) {
      return f.call(null, p1__155174_SHARP_)
    }else {
      return and__3860__auto____155177
    }
  }
};
de.karolski.teeter_totter.selector.pred = function pred(f) {
  return de.karolski.teeter_totter.selector.zip_pred.call(null, function(p1__155175_SHARP_) {
    return f.call(null, clojure.zip.node.call(null, p1__155175_SHARP_))
  })
};
de.karolski.teeter_totter.selector.text_pred = function text_pred(f) {
  return function(p1__155178_SHARP_) {
    var n__155182 = clojure.zip.node.call(null, p1__155178_SHARP_);
    var and__3860__auto____155183 = cljs.core.string_QMARK_.call(null, n__155182);
    if(and__3860__auto____155183) {
      return f.call(null, n__155182)
    }else {
      return and__3860__auto____155183
    }
  }
};
de.karolski.teeter_totter.selector.re_pred = function re_pred(re) {
  return de.karolski.teeter_totter.selector.text_pred.call(null, function(p1__155179_SHARP_) {
    return cljs.core.re_matches.call(null, re, p1__155179_SHARP_)
  })
};
de.karolski.teeter_totter.selector.whitespace = de.karolski.teeter_totter.selector.re_pred.call(null, /\s*/);
de.karolski.teeter_totter.selector.any = de.karolski.teeter_totter.selector.pred.call(null, cljs.core.constantly.call(null, true));
de.karolski.teeter_totter.selector.tag_EQ_ = function tag_EQ_(expected_tag_name) {
  return de.karolski.teeter_totter.selector.pred.call(null, function(v) {
    return cljs.core._EQ_.call(null, function() {
      var G__155188__155189 = v;
      if(G__155188__155189) {
        if(cljs.core.truth_(function() {
          var or__3862__auto____155190 = null;
          if(cljs.core.truth_(or__3862__auto____155190)) {
            return or__3862__auto____155190
          }else {
            return G__155188__155189.de$karolski$teeter_totter$selector$Tag$
          }
        }())) {
          return true
        }else {
          if(!G__155188__155189.cljs$lang$protocol_mask$partition$) {
            return cljs.core.type_satisfies_.call(null, de.karolski.teeter_totter.selector.Tag, G__155188__155189)
          }else {
            return false
          }
        }
      }else {
        return cljs.core.type_satisfies_.call(null, de.karolski.teeter_totter.selector.Tag, G__155188__155189)
      }
    }() ? de.karolski.teeter_totter.selector.tag_name.call(null, v) : de.karolski.teeter_totter.util.get_simple_name.call(null, v), expected_tag_name)
  })
};
de.karolski.teeter_totter.selector.id_EQ_ = function id_EQ_(id) {
  return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155184_SHARP_) {
    return cljs.core._EQ_.call(null, de.karolski.teeter_totter.selector.id_of.call(null, p1__155184_SHARP_), cljs.core.keyword.call(null, id))
  })
};
de.karolski.teeter_totter.selector.exact_type_EQ_ = function exact_type_EQ_(class_name) {
  var cls__155194 = de.karolski.teeter_totter.util.class_for_name.call(null, class_name);
  return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155191_SHARP_) {
    return cljs.core._EQ_.call(null, de.karolski.teeter_totter.util.class_of.call(null, p1__155191_SHARP_), cls__155194)
  })
};
de.karolski.teeter_totter.selector.loose_type_EQ_ = function loose_type_EQ_(class_name) {
  var cls__155197 = de.karolski.teeter_totter.util.class_for_name.call(null, class_name);
  return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155192_SHARP_) {
    return de.karolski.teeter_totter.util.is_instance_QMARK_.call(null, cls__155197, p1__155192_SHARP_)
  })
};
de.karolski.teeter_totter.selector.attr_has = function() {
  var attr_has__delegate = function(attr, values) {
    return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155195_SHARP_) {
      var temp__4011__auto____155201 = de.karolski.teeter_totter.selector.attr_values.call(null, p1__155195_SHARP_, attr);
      if(cljs.core.truth_(temp__4011__auto____155201)) {
        var v__155202 = temp__4011__auto____155201;
        return cljs.core.every_QMARK_.call(null, v__155202, values)
      }else {
        return null
      }
    })
  };
  var attr_has = function(attr, var_args) {
    var values = null;
    if(goog.isDef(var_args)) {
      values = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return attr_has__delegate.call(this, attr, values)
  };
  attr_has.cljs$lang$maxFixedArity = 1;
  attr_has.cljs$lang$applyTo = function(arglist__155203) {
    var attr = cljs.core.first(arglist__155203);
    var values = cljs.core.rest(arglist__155203);
    return attr_has__delegate(attr, values)
  };
  attr_has.cljs$lang$arity$variadic = attr_has__delegate;
  return attr_has
}();
de.karolski.teeter_totter.selector.has_class = function() {
  var has_class__delegate = function(classes) {
    return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155198_SHARP_) {
      var temp__4011__auto____155210 = de.karolski.teeter_totter.selector.class_of.call(null, p1__155198_SHARP_);
      if(cljs.core.truth_(temp__4011__auto____155210)) {
        var v__155211 = temp__4011__auto____155210;
        return cljs.core.every_QMARK_.call(null, v__155211, classes)
      }else {
        return null
      }
    })
  };
  var has_class = function(var_args) {
    var classes = null;
    if(goog.isDef(var_args)) {
      classes = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return has_class__delegate.call(this, classes)
  };
  has_class.cljs$lang$maxFixedArity = 0;
  has_class.cljs$lang$applyTo = function(arglist__155212) {
    var classes = cljs.core.seq(arglist__155212);
    return has_class__delegate(classes)
  };
  has_class.cljs$lang$arity$variadic = has_class__delegate;
  return has_class
}();
de.karolski.teeter_totter.selector.intersection = function intersection(preds) {
  var pred__155243__155246 = cljs.core._EQ_;
  var expr__155244__155247 = cljs.core.count.call(null, preds);
  if(pred__155243__155246.call(null, 1, expr__155244__155247)) {
    return cljs.core.first.call(null, preds)
  }else {
    if(pred__155243__155246.call(null, 2, expr__155244__155247)) {
      var vec__155248__155249 = preds;
      var f__155250 = cljs.core.nth.call(null, vec__155248__155249, 0, null);
      var g__155251 = cljs.core.nth.call(null, vec__155248__155249, 1, null);
      return function(p1__155204_SHARP_) {
        var and__3860__auto____155252 = f__155250.call(null, p1__155204_SHARP_);
        if(cljs.core.truth_(and__3860__auto____155252)) {
          return g__155251.call(null, p1__155204_SHARP_)
        }else {
          return and__3860__auto____155252
        }
      }
    }else {
      if(pred__155243__155246.call(null, 3, expr__155244__155247)) {
        var vec__155253__155254 = preds;
        var f__155255 = cljs.core.nth.call(null, vec__155253__155254, 0, null);
        var g__155256 = cljs.core.nth.call(null, vec__155253__155254, 1, null);
        var h__155257 = cljs.core.nth.call(null, vec__155253__155254, 2, null);
        return function(p1__155205_SHARP_) {
          var and__3860__auto____155258 = f__155255.call(null, p1__155205_SHARP_);
          if(cljs.core.truth_(and__3860__auto____155258)) {
            var and__3860__auto____155259 = g__155256.call(null, p1__155205_SHARP_);
            if(cljs.core.truth_(and__3860__auto____155259)) {
              return h__155257.call(null, p1__155205_SHARP_)
            }else {
              return and__3860__auto____155259
            }
          }else {
            return and__3860__auto____155258
          }
        }
      }else {
        if(pred__155243__155246.call(null, 4, expr__155244__155247)) {
          var vec__155260__155261 = preds;
          var f__155262 = cljs.core.nth.call(null, vec__155260__155261, 0, null);
          var g__155263 = cljs.core.nth.call(null, vec__155260__155261, 1, null);
          var h__155264 = cljs.core.nth.call(null, vec__155260__155261, 2, null);
          var k__155265 = cljs.core.nth.call(null, vec__155260__155261, 3, null);
          return function(p1__155206_SHARP_) {
            var and__3860__auto____155266 = f__155262.call(null, p1__155206_SHARP_);
            if(cljs.core.truth_(and__3860__auto____155266)) {
              var and__3860__auto____155267 = g__155263.call(null, p1__155206_SHARP_);
              if(cljs.core.truth_(and__3860__auto____155267)) {
                var and__3860__auto____155268 = h__155264.call(null, p1__155206_SHARP_);
                if(cljs.core.truth_(and__3860__auto____155268)) {
                  return k__155265.call(null, p1__155206_SHARP_)
                }else {
                  return and__3860__auto____155268
                }
              }else {
                return and__3860__auto____155267
              }
            }else {
              return and__3860__auto____155266
            }
          }
        }else {
          return function(x) {
            return cljs.core.every_QMARK_.call(null, function(p1__155207_SHARP_) {
              return p1__155207_SHARP_.call(null, x)
            }, preds)
          }
        }
      }
    }
  }
};
de.karolski.teeter_totter.selector.union = function union(preds) {
  var pred__155295__155298 = cljs.core._EQ_;
  var expr__155296__155299 = cljs.core.count.call(null, preds);
  if(pred__155295__155298.call(null, 1, expr__155296__155299)) {
    return cljs.core.first.call(null, preds)
  }else {
    if(pred__155295__155298.call(null, 2, expr__155296__155299)) {
      var vec__155300__155301 = preds;
      var f__155302 = cljs.core.nth.call(null, vec__155300__155301, 0, null);
      var g__155303 = cljs.core.nth.call(null, vec__155300__155301, 1, null);
      return function(p1__155213_SHARP_) {
        var or__3862__auto____155304 = f__155302.call(null, p1__155213_SHARP_);
        if(cljs.core.truth_(or__3862__auto____155304)) {
          return or__3862__auto____155304
        }else {
          return g__155303.call(null, p1__155213_SHARP_)
        }
      }
    }else {
      if(pred__155295__155298.call(null, 3, expr__155296__155299)) {
        var vec__155305__155306 = preds;
        var f__155307 = cljs.core.nth.call(null, vec__155305__155306, 0, null);
        var g__155308 = cljs.core.nth.call(null, vec__155305__155306, 1, null);
        var h__155309 = cljs.core.nth.call(null, vec__155305__155306, 2, null);
        return function(p1__155214_SHARP_) {
          var or__3862__auto____155310 = f__155307.call(null, p1__155214_SHARP_);
          if(cljs.core.truth_(or__3862__auto____155310)) {
            return or__3862__auto____155310
          }else {
            var or__3862__auto____155311 = g__155308.call(null, p1__155214_SHARP_);
            if(cljs.core.truth_(or__3862__auto____155311)) {
              return or__3862__auto____155311
            }else {
              return h__155309.call(null, p1__155214_SHARP_)
            }
          }
        }
      }else {
        if(pred__155295__155298.call(null, 4, expr__155296__155299)) {
          var vec__155312__155313 = preds;
          var f__155314 = cljs.core.nth.call(null, vec__155312__155313, 0, null);
          var g__155315 = cljs.core.nth.call(null, vec__155312__155313, 1, null);
          var h__155316 = cljs.core.nth.call(null, vec__155312__155313, 2, null);
          var k__155317 = cljs.core.nth.call(null, vec__155312__155313, 3, null);
          return function(p1__155215_SHARP_) {
            var or__3862__auto____155318 = f__155314.call(null, p1__155215_SHARP_);
            if(cljs.core.truth_(or__3862__auto____155318)) {
              return or__3862__auto____155318
            }else {
              var or__3862__auto____155319 = g__155315.call(null, p1__155215_SHARP_);
              if(cljs.core.truth_(or__3862__auto____155319)) {
                return or__3862__auto____155319
              }else {
                var or__3862__auto____155320 = h__155316.call(null, p1__155215_SHARP_);
                if(cljs.core.truth_(or__3862__auto____155320)) {
                  return or__3862__auto____155320
                }else {
                  return k__155317.call(null, p1__155215_SHARP_)
                }
              }
            }
          }
        }else {
          return function(x) {
            return cljs.core.some.call(null, function(p1__155216_SHARP_) {
              return p1__155216_SHARP_.call(null, x)
            }, preds)
          }
        }
      }
    }
  }
};
de.karolski.teeter_totter.selector.segment_regex = /^<([\w.!]+)>(.*)/;
de.karolski.teeter_totter.selector.split_segments = function split_segments(s) {
  var temp__4009__auto____155327 = cljs.core.re_matches.call(null, de.karolski.teeter_totter.selector.segment_regex, s);
  if(cljs.core.truth_(temp__4009__auto____155327)) {
    var vec__155328__155329 = temp__4009__auto____155327;
    var ___155330 = cljs.core.nth.call(null, vec__155328__155329, 0, null);
    var class_name__155331 = cljs.core.nth.call(null, vec__155328__155329, 1, null);
    var more__155332 = cljs.core.nthnext.call(null, vec__155328__155329, 2);
    if(cljs.core.truth_(class_name__155331.endsWith("!"))) {
      return cljs.core.cons.call(null, [cljs.core.str("+"), cljs.core.str(cljs.core.subs.call(null, class_name__155331, 0, cljs.core.count.call(null, class_name__155331) - 1))].join(""), cljs.core.remove.call(null, cljs.core.empty_QMARK_, more__155332))
    }else {
      return cljs.core.cons.call(null, [cljs.core.str("*"), cljs.core.str(class_name__155331)].join(""), cljs.core.remove.call(null, cljs.core.empty_QMARK_, more__155332))
    }
  }else {
    return cljs.core.seq.call(null, clojure.string.split.call(null, s, /(?=[#.])/))
  }
};
de.karolski.teeter_totter.selector.compile_keyword = cljs.core.memoize.call(null, function(kw) {
  if(cljs.core._EQ_.call(null, "\ufdd0'>", kw)) {
    return"\ufdd0'>"
  }else {
    var vec__155333__155335 = de.karolski.teeter_totter.selector.split_segments.call(null, cljs.core.name.call(null, kw));
    var vec__155334__155336 = cljs.core.nth.call(null, vec__155333__155335, 0, null);
    var first_letter__155337 = cljs.core.nth.call(null, vec__155334__155336, 0, null);
    var tag_name__155338 = vec__155334__155336;
    var segments__155339 = vec__155333__155335;
    var classes__155347 = function() {
      var iter__2499__auto____155346 = function iter__155340(s__155341) {
        return new cljs.core.LazySeq(null, false, function() {
          var s__155341__155344 = s__155341;
          while(true) {
            if(cljs.core.seq.call(null, s__155341__155344)) {
              var s__155345 = cljs.core.first.call(null, s__155341__155344);
              if(cljs.core._EQ_.call(null, ".", cljs.core.first.call(null, s__155345))) {
                return cljs.core.cons.call(null, cljs.core.subs.call(null, s__155345, 1), iter__155340.call(null, cljs.core.rest.call(null, s__155341__155344)))
              }else {
                var G__155357 = cljs.core.rest.call(null, s__155341__155344);
                s__155341__155344 = G__155357;
                continue
              }
            }else {
              return null
            }
            break
          }
        }, null)
      };
      return iter__2499__auto____155346.call(null, segments__155339)
    }();
    var preds__155348 = cljs.core.seq.call(null, classes__155347) ? cljs.core.list.call(null, cljs.core.apply.call(null, de.karolski.teeter_totter.selector.has_class, classes__155347)) : null;
    var preds__155349 = cljs.core.contains_QMARK_.call(null, cljs.core.PersistentHashSet.fromArray([null, "#", "*", "+", "."]), first_letter__155337) ? preds__155348 : cljs.core.conj.call(null, preds__155348, de.karolski.teeter_totter.selector.tag_EQ_.call(null, tag_name__155338));
    var preds__155356 = cljs.core.reduce.call(null, function(preds, p__155350) {
      var vec__155351__155352 = p__155350;
      var x__155353 = cljs.core.nth.call(null, vec__155351__155352, 0, null);
      var segment__155354 = vec__155351__155352;
      if(cljs.core._EQ_.call(null, "#", x__155353)) {
        return cljs.core.conj.call(null, preds, de.karolski.teeter_totter.selector.id_EQ_.call(null, cljs.core.subs.call(null, segment__155354, 1)))
      }else {
        if(cljs.core._EQ_.call(null, "+", x__155353)) {
          return cljs.core.conj.call(null, preds, de.karolski.teeter_totter.selector.exact_type_EQ_.call(null, cljs.core.subs.call(null, segment__155354, 1)))
        }else {
          if(function() {
            var and__3860__auto____155355 = cljs.core._EQ_.call(null, "*", x__155353);
            if(and__3860__auto____155355) {
              return cljs.core.count.call(null, segment__155354) > 1
            }else {
              return and__3860__auto____155355
            }
          }()) {
            return cljs.core.conj.call(null, preds, de.karolski.teeter_totter.selector.loose_type_EQ_.call(null, cljs.core.subs.call(null, segment__155354, 1)))
          }else {
            return preds
          }
        }
      }
    }, preds__155349, segments__155339);
    if(cljs.core.seq.call(null, preds__155356)) {
      return de.karolski.teeter_totter.selector.intersection.call(null, preds__155356)
    }else {
      return de.karolski.teeter_totter.selector.any
    }
  }
});
de.karolski.teeter_totter.selector.compile_step = function compile_step(step) {
  if(cljs.core.string_QMARK_.call(null, step)) {
    return de.karolski.teeter_totter.selector.compile_keyword.call(null, cljs.core.keyword.call(null, step))
  }else {
    if(cljs.core.keyword_QMARK_.call(null, step)) {
      return de.karolski.teeter_totter.selector.compile_keyword.call(null, step)
    }else {
      if(cljs.core.set_QMARK_.call(null, step)) {
        return de.karolski.teeter_totter.selector.union.call(null, cljs.core.map.call(null, compile_step, step))
      }else {
        if(cljs.core.vector_QMARK_.call(null, step)) {
          return de.karolski.teeter_totter.selector.intersection.call(null, cljs.core.map.call(null, compile_step, step))
        }else {
          if("\ufdd0'else") {
            return step
          }else {
            return null
          }
        }
      }
    }
  }
};
de.karolski.teeter_totter.selector.compile_chain = function compile_chain(chain) {
  return cljs.core.map.call(null, de.karolski.teeter_totter.selector.compile_step, chain)
};
de.karolski.teeter_totter.selector.selector_chains = function selector_chains(selector, id) {
  var iter__2499__auto____155376 = function iter__155370(s__155371) {
    return new cljs.core.LazySeq(null, false, function() {
      var s__155371__155374 = s__155371;
      while(true) {
        if(cljs.core.seq.call(null, s__155371__155374)) {
          var x__155375 = cljs.core.first.call(null, s__155371__155374);
          if(!cljs.core.set_QMARK_.call(null, x__155375)) {
            return cljs.core.cons.call(null, de.karolski.teeter_totter.selector.compile_chain.call(null, cljs.core.concat.call(null, x__155375, cljs.core.PersistentVector.fromArray([id], true))), iter__155370.call(null, cljs.core.rest.call(null, s__155371__155374)))
          }else {
            var G__155377 = cljs.core.rest.call(null, s__155371__155374);
            s__155371__155374 = G__155377;
            continue
          }
        }else {
          return null
        }
        break
      }
    }, null)
  };
  return iter__2499__auto____155376.call(null, cljs.core.tree_seq.call(null, cljs.core.set_QMARK_, cljs.core.seq, selector))
};
de.karolski.teeter_totter.selector.predset = function predset(preds) {
  var pred__155409__155412 = cljs.core._EQ_;
  var expr__155410__155413 = cljs.core.count.call(null, preds);
  if(pred__155409__155412.call(null, 1, expr__155410__155413)) {
    var vec__155414__155415 = preds;
    var f__155416 = cljs.core.nth.call(null, vec__155414__155415, 0, null);
    return function(p1__155358_SHARP_) {
      if(cljs.core.truth_(f__155416.call(null, p1__155358_SHARP_))) {
        return 1
      }else {
        return 0
      }
    }
  }else {
    if(pred__155409__155412.call(null, 2, expr__155410__155413)) {
      var vec__155417__155418 = preds;
      var f__155419 = cljs.core.nth.call(null, vec__155417__155418, 0, null);
      var g__155420 = cljs.core.nth.call(null, vec__155417__155418, 1, null);
      return function(p1__155359_SHARP_) {
        return(cljs.core.truth_(f__155419.call(null, p1__155359_SHARP_)) ? 1 : 0) + (cljs.core.truth_(g__155420.call(null, p1__155359_SHARP_)) ? 2 : 0)
      }
    }else {
      if(pred__155409__155412.call(null, 3, expr__155410__155413)) {
        var vec__155421__155422 = preds;
        var f__155423 = cljs.core.nth.call(null, vec__155421__155422, 0, null);
        var g__155424 = cljs.core.nth.call(null, vec__155421__155422, 1, null);
        var h__155425 = cljs.core.nth.call(null, vec__155421__155422, 2, null);
        return function(p1__155360_SHARP_) {
          return(cljs.core.truth_(f__155423.call(null, p1__155360_SHARP_)) ? 1 : 0) + (cljs.core.truth_(g__155424.call(null, p1__155360_SHARP_)) ? 2 : 0) + (cljs.core.truth_(h__155425.call(null, p1__155360_SHARP_)) ? 4 : 0)
        }
      }else {
        if(pred__155409__155412.call(null, 4, expr__155410__155413)) {
          var vec__155426__155427 = preds;
          var f__155428 = cljs.core.nth.call(null, vec__155426__155427, 0, null);
          var g__155429 = cljs.core.nth.call(null, vec__155426__155427, 1, null);
          var h__155430 = cljs.core.nth.call(null, vec__155426__155427, 2, null);
          var k__155431 = cljs.core.nth.call(null, vec__155426__155427, 3, null);
          return function(p1__155361_SHARP_) {
            return(cljs.core.truth_(f__155428.call(null, p1__155361_SHARP_)) ? 1 : 0) + (cljs.core.truth_(g__155429.call(null, p1__155361_SHARP_)) ? 2 : 0) + (cljs.core.truth_(h__155430.call(null, p1__155361_SHARP_)) ? 4 : 0) + (cljs.core.truth_(k__155431.call(null, p1__155361_SHARP_)) ? 8 : 0)
          }
        }else {
          return function(p1__155362_SHARP_) {
            var i__155432 = 1;
            var r__155433 = 0;
            var preds__155434 = cljs.core.seq.call(null, preds);
            while(true) {
              var temp__4009__auto____155435 = preds__155434;
              if(temp__4009__auto____155435) {
                var vec__155436__155437 = temp__4009__auto____155435;
                var pred__155438 = cljs.core.nth.call(null, vec__155436__155437, 0, null);
                var preds__155439 = cljs.core.nthnext.call(null, vec__155436__155437, 1);
                var G__155440 = i__155432 << 1;
                var G__155441 = cljs.core.truth_(pred__155438.call(null, p1__155362_SHARP_)) ? i__155432 + r__155433 : r__155433;
                var G__155442 = preds__155439;
                i__155432 = G__155440;
                r__155433 = G__155441;
                preds__155434 = G__155442;
                continue
              }else {
                return r__155433
              }
              break
            }
          }
        }
      }
    }
  }
};
de.karolski.teeter_totter.selector.states = function states(init, chains_seq) {
  return function(n) {
    var n__155465 = n;
    var s__155466 = cljs.core.set.call(null, init);
    var G__155463__155467 = chains_seq;
    var vec__155464__155468 = G__155463__155467;
    var chains__155469 = cljs.core.nth.call(null, vec__155464__155468, 0, null);
    var etc__155470 = cljs.core.nthnext.call(null, vec__155464__155468, 1);
    var n__155471 = n__155465;
    var s__155472 = s__155466;
    var G__155463__155473 = G__155463__155467;
    while(true) {
      var n__155475 = n__155471;
      var s__155476 = s__155472;
      var vec__155474__155477 = G__155463__155473;
      var chains__155478 = cljs.core.nth.call(null, vec__155474__155477, 0, null);
      var etc__155479 = cljs.core.nthnext.call(null, vec__155474__155477, 1);
      if(cljs.core.odd_QMARK_.call(null, n__155475)) {
        var G__155480 = n__155475 >> 1;
        var G__155481 = cljs.core.into.call(null, s__155476, chains__155478);
        var G__155482 = etc__155479;
        n__155471 = G__155480;
        s__155472 = G__155481;
        G__155463__155473 = G__155482;
        continue
      }else {
        if(n__155475 === 0) {
          return s__155476
        }else {
          if("\ufdd0'else") {
            var G__155483 = n__155475 >> 1;
            var G__155484 = s__155476;
            var G__155485 = etc__155479;
            n__155471 = G__155483;
            s__155472 = G__155484;
            G__155463__155473 = G__155485;
            continue
          }else {
            return null
          }
        }
      }
      break
    }
  }
};
de.karolski.teeter_totter.selector.make_state = function make_state(chains) {
  var derivations__155496 = cljs.core.reduce.call(null, function(derivations, chain) {
    if(cljs.core._EQ_.call(null, "\ufdd0'>", cljs.core.first.call(null, chain))) {
      var pred__155494 = cljs.core.second.call(null, chain);
      return cljs.core.assoc.call(null, derivations, pred__155494, cljs.core.conj.call(null, derivations.call(null, pred__155494), cljs.core.nnext.call(null, chain)))
    }else {
      if(cljs.core.next.call(null, chain)) {
        var pred__155495 = cljs.core.first.call(null, chain);
        return cljs.core.assoc.call(null, cljs.core.assoc.call(null, derivations, null, cljs.core.conj.call(null, derivations.call(null, null), chain)), pred__155495, cljs.core.conj.call(null, derivations.call(null, pred__155495), cljs.core.next.call(null, chain)))
      }else {
        if("\ufdd0'else") {
          return cljs.core.assoc.call(null, derivations, "\ufdd0'accepts", cljs.core.first.call(null, chain))
        }else {
          return null
        }
      }
    }
  }, cljs.core.ObjMap.EMPTY, chains);
  var always__155497 = derivations__155496.call(null, null);
  var accepts__155498 = derivations__155496.call(null, "\ufdd0'accepts");
  var derivations__155499 = cljs.core.dissoc.call(null, derivations__155496, null, "\ufdd0'accepts");
  var ps__155500 = de.karolski.teeter_totter.selector.predset.call(null, cljs.core.keys.call(null, derivations__155499));
  var next_states__155501 = cljs.core.memoize.call(null, function(p1__155443_SHARP_) {
    return make_state.call(null, de.karolski.teeter_totter.selector.states.call(null, always__155497, cljs.core.vals.call(null, derivations__155499)).call(null, p1__155443_SHARP_))
  });
  return cljs.core.PersistentVector.fromArray([accepts__155498, cljs.core.seq.call(null, chains) ? cljs.core.comp.call(null, next_states__155501, ps__155500) : null], true)
};
de.karolski.teeter_totter.selector.cacheable = function cacheable(selector) {
  return cljs.core.vary_meta.call(null, selector, cljs.core.assoc, "\ufdd0'de.karolski.teeter-totter.selector/cacheable", true)
};
de.karolski.teeter_totter.selector.cacheable_QMARK_ = function cacheable_QMARK_(selector) {
  return(new cljs.core.Keyword("\ufdd0'de.karolski.teeter-totter.selector/cacheable")).call(null, cljs.core.meta.call(null, selector))
};
de.karolski.teeter_totter.selector.automaton_STAR_ = function automaton_STAR_(selector) {
  return de.karolski.teeter_totter.selector.make_state.call(null, cljs.core.set.call(null, de.karolski.teeter_totter.selector.selector_chains.call(null, selector, 0)))
};
de.karolski.teeter_totter.selector.lockstep_automaton_STAR_ = function lockstep_automaton_STAR_(selectors) {
  return de.karolski.teeter_totter.selector.make_state.call(null, cljs.core.set.call(null, cljs.core.mapcat.call(null, de.karolski.teeter_totter.selector.selector_chains, selectors, cljs.core.iterate.call(null, cljs.core.inc, 0))))
};
de.karolski.teeter_totter.selector.memoized_automaton_STAR_ = cljs.core.memoize.call(null, de.karolski.teeter_totter.selector.automaton_STAR_);
de.karolski.teeter_totter.selector.memoized_lockstep_automaton_STAR_ = cljs.core.memoize.call(null, de.karolski.teeter_totter.selector.lockstep_automaton_STAR_);
de.karolski.teeter_totter.selector.automaton = function automaton(selector) {
  return(cljs.core.truth_(de.karolski.teeter_totter.selector.cacheable_QMARK_.call(null, selector)) ? de.karolski.teeter_totter.selector.memoized_automaton_STAR_ : de.karolski.teeter_totter.selector.automaton_STAR_).call(null, selector)
};
de.karolski.teeter_totter.selector.lockstep_automaton = function lockstep_automaton(selectors) {
  return(cljs.core.every_QMARK_.call(null, de.karolski.teeter_totter.selector.cacheable_QMARK_, selectors) ? de.karolski.teeter_totter.selector.memoized_lockstep_automaton_STAR_ : de.karolski.teeter_totter.selector.lockstep_automaton_STAR_).call(null, selectors)
};
de.karolski.teeter_totter.selector.accept_key = function accept_key(s) {
  return cljs.core.nth.call(null, s, 0)
};
de.karolski.teeter_totter.selector.step = function step(s, x) {
  var temp__4011__auto____155506 = function() {
    var and__3860__auto____155505 = s;
    if(cljs.core.truth_(and__3860__auto____155505)) {
      return cljs.core.nth.call(null, s, 1)
    }else {
      return and__3860__auto____155505
    }
  }();
  if(cljs.core.truth_(temp__4011__auto____155506)) {
    var f__155507 = temp__4011__auto____155506;
    return f__155507.call(null, x)
  }else {
    return null
  }
};
de.karolski.teeter_totter.selector.fragment_selector_QMARK_ = function fragment_selector_QMARK_(selector) {
  return cljs.core.map_QMARK_.call(null, selector)
};
de.karolski.teeter_totter.selector.node_selector_QMARK_ = function node_selector_QMARK_(selector) {
  return cljs.core.not.call(null, de.karolski.teeter_totter.selector.fragment_selector_QMARK_.call(null, selector))
};
de.karolski.teeter_totter.selector.static_selector_QMARK_ = function static_selector_QMARK_(selector) {
  var or__3862__auto____155510 = cljs.core.keyword_QMARK_.call(null, selector);
  if(or__3862__auto____155510) {
    return or__3862__auto____155510
  }else {
    var and__3860__auto____155511 = cljs.core.coll_QMARK_.call(null, selector);
    if(and__3860__auto____155511) {
      return cljs.core.every_QMARK_.call(null, static_selector_QMARK_, selector)
    }else {
      return and__3860__auto____155511
    }
  }
};
de.karolski.teeter_totter.selector.children_locs = function children_locs(loc) {
  return de.karolski.teeter_totter.selector.iterate_while.call(null, clojure.zip.right, clojure.zip.down.call(null, loc))
};
de.karolski.teeter_totter.selector.zip_select_nodes_STAR_ = function zip_select_nodes_STAR_(locs, state) {
  var select1__155521 = function select1(loc, previous_state) {
    var temp__4011__auto____155525 = de.karolski.teeter_totter.selector.step.call(null, previous_state, loc);
    if(cljs.core.truth_(temp__4011__auto____155525)) {
      var state__155526 = temp__4011__auto____155525;
      var descendants__155527 = cljs.core.mapcat.call(null, function(p1__155512_SHARP_) {
        return select1.call(null, p1__155512_SHARP_, state__155526)
      }, de.karolski.teeter_totter.selector.children_locs.call(null, loc));
      if(cljs.core.truth_(de.karolski.teeter_totter.selector.accept_key.call(null, state__155526))) {
        return cljs.core.cons.call(null, loc, descendants__155527)
      }else {
        return descendants__155527
      }
    }else {
      return null
    }
  };
  return cljs.core.mapcat.call(null, function(p1__155513_SHARP_) {
    return select1__155521.call(null, p1__155513_SHARP_, state)
  }, locs)
};
de.karolski.teeter_totter.selector.select_nodes_STAR_ = function select_nodes_STAR_(nodes, selector) {
  var state__155534 = de.karolski.teeter_totter.selector.automaton.call(null, selector);
  return cljs.core.map.call(null, clojure.zip.node, de.karolski.teeter_totter.selector.zip_select_nodes_STAR_.call(null, cljs.core.map.call(null, de.karolski.teeter_totter.selector.swing_zipper, nodes), state__155534))
};
de.karolski.teeter_totter.selector.zip_select_fragments_STAR_ = function zip_select_fragments_STAR_(locs, state_from, state_to) {
  var select1__155567 = function select1(locs, previous_state_from, previous_state_to) {
    if(cljs.core.truth_(function() {
      var and__3860__auto____155583 = previous_state_from;
      if(cljs.core.truth_(and__3860__auto____155583)) {
        return previous_state_to
      }else {
        return and__3860__auto____155583
      }
    }())) {
      var states_from__155584 = cljs.core.map.call(null, function(p1__155528_SHARP_) {
        return de.karolski.teeter_totter.selector.step.call(null, previous_state_from, p1__155528_SHARP_)
      }, locs);
      var states_to__155585 = cljs.core.map.call(null, function(p1__155529_SHARP_) {
        return de.karolski.teeter_totter.selector.step.call(null, previous_state_to, p1__155529_SHARP_)
      }, locs);
      var descendants__155586 = cljs.core.reduce.call(null, cljs.core.into, cljs.core.PersistentVector.EMPTY, cljs.core.map.call(null, function(p1__155530_SHARP_, p2__155531_SHARP_, p3__155532_SHARP_) {
        return select1.call(null, de.karolski.teeter_totter.selector.children_locs.call(null, p1__155530_SHARP_), p2__155531_SHARP_, p3__155532_SHARP_)
      }, locs, states_from__155584, states_to__155585));
      var fragments__155587 = descendants__155586;
      var fragment__155588 = null;
      var locs__155589 = locs;
      var states_from__155590 = states_from__155584;
      var states_to__155591 = states_to__155585;
      while(true) {
        var temp__4009__auto____155592 = cljs.core.seq.call(null, locs__155589);
        if(temp__4009__auto____155592) {
          var vec__155593__155594 = temp__4009__auto____155592;
          var loc__155595 = cljs.core.nth.call(null, vec__155593__155594, 0, null);
          var etc__155596 = cljs.core.nthnext.call(null, vec__155593__155594, 1);
          if(cljs.core.truth_(fragment__155588)) {
            var fragment__155597 = cljs.core.conj.call(null, fragment__155588, loc__155595);
            if(cljs.core.truth_(de.karolski.teeter_totter.selector.accept_key.call(null, cljs.core.first.call(null, states_to__155591)))) {
              var G__155598 = cljs.core.conj.call(null, fragments__155587, fragment__155597);
              var G__155599 = null;
              var G__155600 = etc__155596;
              var G__155601 = cljs.core.rest.call(null, states_from__155590);
              var G__155602 = cljs.core.rest.call(null, states_to__155591);
              fragments__155587 = G__155598;
              fragment__155588 = G__155599;
              locs__155589 = G__155600;
              states_from__155590 = G__155601;
              states_to__155591 = G__155602;
              continue
            }else {
              var G__155603 = fragments__155587;
              var G__155604 = fragment__155597;
              var G__155605 = etc__155596;
              var G__155606 = cljs.core.rest.call(null, states_from__155590);
              var G__155607 = cljs.core.rest.call(null, states_to__155591);
              fragments__155587 = G__155603;
              fragment__155588 = G__155604;
              locs__155589 = G__155605;
              states_from__155590 = G__155606;
              states_to__155591 = G__155607;
              continue
            }
          }else {
            if(cljs.core.truth_(de.karolski.teeter_totter.selector.accept_key.call(null, cljs.core.first.call(null, states_from__155590)))) {
              var G__155608 = fragments__155587;
              var G__155609 = cljs.core.PersistentVector.EMPTY;
              var G__155610 = locs__155589;
              var G__155611 = states_from__155590;
              var G__155612 = states_to__155591;
              fragments__155587 = G__155608;
              fragment__155588 = G__155609;
              locs__155589 = G__155610;
              states_from__155590 = G__155611;
              states_to__155591 = G__155612;
              continue
            }else {
              var G__155613 = fragments__155587;
              var G__155614 = null;
              var G__155615 = etc__155596;
              var G__155616 = cljs.core.rest.call(null, states_from__155590);
              var G__155617 = cljs.core.rest.call(null, states_to__155591);
              fragments__155587 = G__155613;
              fragment__155588 = G__155614;
              locs__155589 = G__155615;
              states_from__155590 = G__155616;
              states_to__155591 = G__155617;
              continue
            }
          }
        }else {
          return fragments__155587
        }
        break
      }
    }else {
      return null
    }
  };
  return select1__155567.call(null, locs, state_from, state_to)
};
de.karolski.teeter_totter.selector.select_fragments_STAR_ = function select_fragments_STAR_(nodes, selector) {
  var vec__155624__155625 = cljs.core.first.call(null, selector);
  var selector_from__155626 = cljs.core.nth.call(null, vec__155624__155625, 0, null);
  var selector_to__155627 = cljs.core.nth.call(null, vec__155624__155625, 1, null);
  var state_from__155628 = de.karolski.teeter_totter.selector.automaton.call(null, selector_from__155626);
  var state_to__155629 = de.karolski.teeter_totter.selector.automaton.call(null, selector_to__155627);
  return cljs.core.map.call(null, function(p1__155535_SHARP_) {
    return cljs.core.map.call(null, clojure.zip.node, p1__155535_SHARP_)
  }, de.karolski.teeter_totter.selector.zip_select_fragments_STAR_.call(null, cljs.core.map.call(null, de.karolski.teeter_totter.selector.swing_zipper, nodes), state_from__155628, state_to__155629))
};
de.karolski.teeter_totter.selector.select = function select(node_or_nodes, selector) {
  var nodes__155631 = de.karolski.teeter_totter.selector.as_nodes.call(null, node_or_nodes);
  if(cljs.core.truth_(de.karolski.teeter_totter.selector.node_selector_QMARK_.call(null, selector))) {
    return de.karolski.teeter_totter.selector.select_nodes_STAR_.call(null, nodes__155631, selector)
  }else {
    return de.karolski.teeter_totter.selector.select_fragments_STAR_.call(null, nodes__155631, selector)
  }
};
de.karolski.teeter_totter.selector.zip_select = function zip_select(locs, selector) {
  if(cljs.core.truth_(de.karolski.teeter_totter.selector.node_selector_QMARK_.call(null, selector))) {
    return cljs.core.apply.call(null, de.karolski.teeter_totter.selector.zip_select_nodes_STAR_, locs, selector)
  }else {
    return cljs.core.apply.call(null, de.karolski.teeter_totter.selector.zip_select_fragments_STAR_, locs, selector)
  }
};
de.karolski.teeter_totter.selector.attr_QMARK_ = function() {
  var attr_QMARK___delegate = function(kws) {
    return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155632_SHARP_) {
      return cljs.core.every_QMARK_.call(null, cljs.core.set.call(null, cljs.core.keys.call(null, (new cljs.core.Keyword("\ufdd0'attrs")).call(null, p1__155632_SHARP_))), kws)
    })
  };
  var attr_QMARK_ = function(var_args) {
    var kws = null;
    if(goog.isDef(var_args)) {
      kws = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return attr_QMARK___delegate.call(this, kws)
  };
  attr_QMARK_.cljs$lang$maxFixedArity = 0;
  attr_QMARK_.cljs$lang$applyTo = function(arglist__155634) {
    var kws = cljs.core.seq(arglist__155634);
    return attr_QMARK___delegate(kws)
  };
  attr_QMARK_.cljs$lang$arity$variadic = attr_QMARK___delegate;
  return attr_QMARK_
}();
de.karolski.teeter_totter.selector.every_QMARK__PLUS_ = function() {
  var every_QMARK__PLUS___delegate = function(pred, colls) {
    return cljs.core.every_QMARK_.call(null, function(p1__155633_SHARP_) {
      return cljs.core.apply.call(null, pred, p1__155633_SHARP_)
    }, cljs.core.apply.call(null, cljs.core.map, cljs.core.vector, colls))
  };
  var every_QMARK__PLUS_ = function(pred, var_args) {
    var colls = null;
    if(goog.isDef(var_args)) {
      colls = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return every_QMARK__PLUS___delegate.call(this, pred, colls)
  };
  every_QMARK__PLUS_.cljs$lang$maxFixedArity = 1;
  every_QMARK__PLUS_.cljs$lang$applyTo = function(arglist__155636) {
    var pred = cljs.core.first(arglist__155636);
    var colls = cljs.core.rest(arglist__155636);
    return every_QMARK__PLUS___delegate(pred, colls)
  };
  every_QMARK__PLUS_.cljs$lang$arity$variadic = every_QMARK__PLUS___delegate;
  return every_QMARK__PLUS_
}();
de.karolski.teeter_totter.selector.multi_attr_pred = function multi_attr_pred(single_attr_pred) {
  return function() {
    var G__155645__delegate = function(kvs) {
      var ks__155641 = cljs.core.take_nth.call(null, 2, kvs);
      var vs__155642 = cljs.core.take_nth.call(null, 2, cljs.core.rest.call(null, kvs));
      return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155635_SHARP_) {
        var temp__4011__auto____155643 = (new cljs.core.Keyword("\ufdd0'attrs")).call(null, p1__155635_SHARP_);
        if(cljs.core.truth_(temp__4011__auto____155643)) {
          var attrs__155644 = temp__4011__auto____155643;
          return de.karolski.teeter_totter.selector.every_QMARK__PLUS_.call(null, single_attr_pred, cljs.core.map.call(null, attrs__155644, ks__155641), vs__155642)
        }else {
          return null
        }
      })
    };
    var G__155645 = function(var_args) {
      var kvs = null;
      if(goog.isDef(var_args)) {
        kvs = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
      }
      return G__155645__delegate.call(this, kvs)
    };
    G__155645.cljs$lang$maxFixedArity = 0;
    G__155645.cljs$lang$applyTo = function(arglist__155646) {
      var kvs = cljs.core.seq(arglist__155646);
      return G__155645__delegate(kvs)
    };
    G__155645.cljs$lang$arity$variadic = G__155645__delegate;
    return G__155645
  }()
};
de.karolski.teeter_totter.selector.attr_EQ_ = de.karolski.teeter_totter.selector.multi_attr_pred.call(null, cljs.core._EQ_);
de.karolski.teeter_totter.selector.starts_with_QMARK_ = function starts_with_QMARK_(s, prefix) {
  var and__3860__auto____155648 = s;
  if(cljs.core.truth_(and__3860__auto____155648)) {
    return s.startsWith(prefix)
  }else {
    return and__3860__auto____155648
  }
};
de.karolski.teeter_totter.selector.ends_with_QMARK_ = function ends_with_QMARK_(s, suffix) {
  var and__3860__auto____155650 = s;
  if(cljs.core.truth_(and__3860__auto____155650)) {
    return s.endsWith(suffix)
  }else {
    return and__3860__auto____155650
  }
};
de.karolski.teeter_totter.selector.contains_substring_QMARK_ = function contains_substring_QMARK_(s, substring) {
  var and__3860__auto____155652 = s;
  if(cljs.core.truth_(and__3860__auto____155652)) {
    return 0 <= s.indexOf(substring)
  }else {
    return and__3860__auto____155652
  }
};
de.karolski.teeter_totter.selector.attr_starts = de.karolski.teeter_totter.selector.multi_attr_pred.call(null, de.karolski.teeter_totter.selector.starts_with_QMARK_);
de.karolski.teeter_totter.selector.attr_ends = de.karolski.teeter_totter.selector.multi_attr_pred.call(null, de.karolski.teeter_totter.selector.ends_with_QMARK_);
de.karolski.teeter_totter.selector.attr_contains = de.karolski.teeter_totter.selector.multi_attr_pred.call(null, de.karolski.teeter_totter.selector.contains_substring_QMARK_);
de.karolski.teeter_totter.selector.is_first_segment_QMARK_ = function is_first_segment_QMARK_(s, segment) {
  var and__3860__auto____155655 = s;
  if(cljs.core.truth_(and__3860__auto____155655)) {
    var and__3860__auto____155656 = s.startsWith(segment);
    if(cljs.core.truth_(and__3860__auto____155656)) {
      return cljs.core._EQ_.call(null, "-", s.charAt(cljs.core.count.call(null, segment)))
    }else {
      return and__3860__auto____155656
    }
  }else {
    return and__3860__auto____155655
  }
};
de.karolski.teeter_totter.selector.attr_BAR__EQ_ = de.karolski.teeter_totter.selector.multi_attr_pred.call(null, de.karolski.teeter_totter.selector.is_first_segment_QMARK_);
de.karolski.teeter_totter.selector.root = de.karolski.teeter_totter.selector.zip_pred.call(null, function(p1__155657_SHARP_) {
  return clojure.zip.up.call(null, p1__155657_SHARP_) == null
});
de.karolski.teeter_totter.selector.nth_QMARK_ = function nth_QMARK_(f, a, b) {
  if(a === 0) {
    return function(p1__155658_SHARP_) {
      return cljs.core._EQ_.call(null, cljs.core.count.call(null, cljs.core.filter.call(null, cljs.core.constantly.call(null, true), f.call(null, p1__155658_SHARP_))) + 1, b)
    }
  }else {
    return function(p1__155659_SHARP_) {
      var an_PLUS_b__155663 = cljs.core.count.call(null, cljs.core.filter.call(null, cljs.core.constantly.call(null, true), f.call(null, p1__155659_SHARP_))) + 1;
      var an__155664 = an_PLUS_b__155663 - b;
      var and__3860__auto____155665 = cljs.core.rem.call(null, an__155664, a) === 0;
      if(and__3860__auto____155665) {
        return 0 <= cljs.core.quot.call(null, an__155664, a)
      }else {
        return and__3860__auto____155665
      }
    }
  }
};
de.karolski.teeter_totter.selector.nth_child = function() {
  var nth_child = null;
  var nth_child__1 = function(b) {
    return nth_child.call(null, 0, b)
  };
  var nth_child__2 = function(a, b) {
    return de.karolski.teeter_totter.selector.zip_pred.call(null, de.karolski.teeter_totter.selector.nth_QMARK_.call(null, clojure.zip.lefts, a, b))
  };
  nth_child = function(a, b) {
    switch(arguments.length) {
      case 1:
        return nth_child__1.call(this, a);
      case 2:
        return nth_child__2.call(this, a, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_child.cljs$lang$arity$1 = nth_child__1;
  nth_child.cljs$lang$arity$2 = nth_child__2;
  return nth_child
}();
de.karolski.teeter_totter.selector.nth_last_child = function() {
  var nth_last_child = null;
  var nth_last_child__1 = function(b) {
    return nth_last_child.call(null, 0, b)
  };
  var nth_last_child__2 = function(a, b) {
    return de.karolski.teeter_totter.selector.zip_pred.call(null, de.karolski.teeter_totter.selector.nth_QMARK_.call(null, clojure.zip.rights, a, b))
  };
  nth_last_child = function(a, b) {
    switch(arguments.length) {
      case 1:
        return nth_last_child__1.call(this, a);
      case 2:
        return nth_last_child__2.call(this, a, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_child.cljs$lang$arity$1 = nth_last_child__1;
  nth_last_child.cljs$lang$arity$2 = nth_last_child__2;
  return nth_last_child
}();
de.karolski.teeter_totter.selector.filter_of_type = function filter_of_type(f) {
  return function(loc) {
    var tag__155669 = (new cljs.core.Keyword("\ufdd0'tag")).call(null, clojure.zip.node.call(null, loc));
    var pred__155670 = function(p1__155666_SHARP_) {
      return cljs.core._EQ_.call(null, (new cljs.core.Keyword("\ufdd0'tag")).call(null, p1__155666_SHARP_), tag__155669)
    };
    return cljs.core.filter.call(null, pred__155670, f.call(null, loc))
  }
};
de.karolski.teeter_totter.selector.nth_of_type = function() {
  var nth_of_type = null;
  var nth_of_type__1 = function(b) {
    return nth_of_type.call(null, 0, b)
  };
  var nth_of_type__2 = function(a, b) {
    return de.karolski.teeter_totter.selector.zip_pred.call(null, de.karolski.teeter_totter.selector.nth_QMARK_.call(null, de.karolski.teeter_totter.selector.filter_of_type.call(null, clojure.zip.lefts), a, b))
  };
  nth_of_type = function(a, b) {
    switch(arguments.length) {
      case 1:
        return nth_of_type__1.call(this, a);
      case 2:
        return nth_of_type__2.call(this, a, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_of_type.cljs$lang$arity$1 = nth_of_type__1;
  nth_of_type.cljs$lang$arity$2 = nth_of_type__2;
  return nth_of_type
}();
de.karolski.teeter_totter.selector.nth_last_of_type = function() {
  var nth_last_of_type = null;
  var nth_last_of_type__1 = function(b) {
    return nth_last_of_type.call(null, 0, b)
  };
  var nth_last_of_type__2 = function(a, b) {
    return de.karolski.teeter_totter.selector.zip_pred.call(null, de.karolski.teeter_totter.selector.nth_QMARK_.call(null, de.karolski.teeter_totter.selector.filter_of_type.call(null, clojure.zip.rights), a, b))
  };
  nth_last_of_type = function(a, b) {
    switch(arguments.length) {
      case 1:
        return nth_last_of_type__1.call(this, a);
      case 2:
        return nth_last_of_type__2.call(this, a, b)
    }
    throw"Invalid arity: " + arguments.length;
  };
  nth_last_of_type.cljs$lang$arity$1 = nth_last_of_type__1;
  nth_last_of_type.cljs$lang$arity$2 = nth_last_of_type__2;
  return nth_last_of_type
}();
de.karolski.teeter_totter.selector.first_child = de.karolski.teeter_totter.selector.nth_child.call(null, 1);
de.karolski.teeter_totter.selector.last_child = de.karolski.teeter_totter.selector.nth_last_child.call(null, 1);
de.karolski.teeter_totter.selector.first_of_type = de.karolski.teeter_totter.selector.nth_of_type.call(null, 1);
de.karolski.teeter_totter.selector.last_of_type = de.karolski.teeter_totter.selector.nth_last_of_type.call(null, 1);
de.karolski.teeter_totter.selector.only_child = de.karolski.teeter_totter.selector.intersection.call(null, cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.selector.first_child, de.karolski.teeter_totter.selector.last_child], true));
de.karolski.teeter_totter.selector.only_of_type = de.karolski.teeter_totter.selector.intersection.call(null, cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.selector.first_of_type, de.karolski.teeter_totter.selector.last_of_type], true));
de.karolski.teeter_totter.selector.void$ = de.karolski.teeter_totter.selector.pred.call(null, function(p1__155671_SHARP_) {
  return cljs.core.empty_QMARK_.call(null, cljs.core.remove.call(null, cljs.core.empty_QMARK_, (new cljs.core.Keyword("\ufdd0'content")).call(null, p1__155671_SHARP_)))
});
de.karolski.teeter_totter.selector.odd = de.karolski.teeter_totter.selector.nth_child.call(null, 2, 1);
de.karolski.teeter_totter.selector.even = de.karolski.teeter_totter.selector.nth_child.call(null, 2, 0);
de.karolski.teeter_totter.selector.select_QMARK_ = function select_QMARK_(node_or_nodes, selector) {
  return cljs.core.boolean$.call(null, cljs.core.seq.call(null, de.karolski.teeter_totter.selector.select.call(null, de.karolski.teeter_totter.selector.as_nodes.call(null, node_or_nodes), selector)))
};
de.karolski.teeter_totter.selector.has = function has(selector) {
  return de.karolski.teeter_totter.selector.pred.call(null, function(p1__155672_SHARP_) {
    return de.karolski.teeter_totter.selector.select_QMARK_.call(null, (new cljs.core.Keyword("\ufdd0'content")).call(null, p1__155672_SHARP_), selector)
  })
};
de.karolski.teeter_totter.selector.but_node = function but_node(selector_step) {
  return cljs.core.complement.call(null, de.karolski.teeter_totter.selector.compile_step.call(null, selector_step))
};
de.karolski.teeter_totter.selector.but = function but(selector_step) {
  return de.karolski.teeter_totter.selector.intersection.call(null, cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.selector.any, de.karolski.teeter_totter.selector.but_node.call(null, selector_step)], true))
};
de.karolski.teeter_totter.selector.left = function left(selector_step) {
  var selector__155678 = cljs.core.PersistentVector.fromArray(["\ufdd0'>", selector_step], true);
  return function(p1__155673_SHARP_) {
    var temp__4011__auto____155679 = cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.constantly.call(null, true), cljs.core.reverse.call(null, clojure.zip.lefts.call(null, p1__155673_SHARP_))));
    if(cljs.core.truth_(temp__4011__auto____155679)) {
      var sibling__155680 = temp__4011__auto____155679;
      return de.karolski.teeter_totter.selector.select_QMARK_.call(null, sibling__155680, selector__155678)
    }else {
      return null
    }
  }
};
de.karolski.teeter_totter.selector.lefts = function lefts(selector_step) {
  var selector__155683 = cljs.core.PersistentVector.fromArray(["\ufdd0'>", selector_step], true);
  return function(p1__155674_SHARP_) {
    return de.karolski.teeter_totter.selector.select_QMARK_.call(null, cljs.core.filter.call(null, cljs.core.constantly.call(null, true), clojure.zip.lefts.call(null, p1__155674_SHARP_)), selector__155683)
  }
};
de.karolski.teeter_totter.selector.right = function right(selector_step) {
  var selector__155688 = cljs.core.PersistentVector.fromArray(["\ufdd0'>", selector_step], true);
  return function(p1__155681_SHARP_) {
    var temp__4011__auto____155689 = cljs.core.first.call(null, cljs.core.filter.call(null, cljs.core.constantly.call(null, true), clojure.zip.rights.call(null, p1__155681_SHARP_)));
    if(cljs.core.truth_(temp__4011__auto____155689)) {
      var sibling__155690 = temp__4011__auto____155689;
      return de.karolski.teeter_totter.selector.select_QMARK_.call(null, sibling__155690, selector__155688)
    }else {
      return null
    }
  }
};
de.karolski.teeter_totter.selector.rights = function rights(selector_step) {
  var selector__155692 = cljs.core.PersistentVector.fromArray(["\ufdd0'>", selector_step], true);
  return function(p1__155684_SHARP_) {
    return de.karolski.teeter_totter.selector.select_QMARK_.call(null, cljs.core.filter.call(null, cljs.core.constantly.call(null, true), clojure.zip.rights.call(null, p1__155684_SHARP_)), selector__155692)
  }
};
de.karolski.teeter_totter.selector.any_node = cljs.core.constantly.call(null, true);
de.karolski.teeter_totter.selector.this_node = cljs.core.PersistentVector.fromArray(["\ufdd0'>", de.karolski.teeter_totter.selector.any_node], true);
de.karolski.teeter_totter.selector.text_node = function text_node(p1__155693_SHARP_) {
  return cljs.core.string_QMARK_.call(null, clojure.zip.node.call(null, p1__155693_SHARP_))
};
de.karolski.teeter_totter.selector.text = function text(node) {
  if(cljs.core.string_QMARK_.call(null, node)) {
    return node
  }else {
    if("\ufdd0'else") {
      return""
    }else {
      return null
    }
  }
};
de.karolski.teeter_totter.selector.texts = function texts(nodes) {
  return cljs.core.map.call(null, de.karolski.teeter_totter.selector.text, nodes)
};
goog.provide("goog.debug.Console");
goog.require("goog.debug.LogManager");
goog.require("goog.debug.Logger.Level");
goog.require("goog.debug.TextFormatter");
goog.debug.Console = function() {
  this.publishHandler_ = goog.bind(this.addLogRecord, this);
  this.formatter_ = new goog.debug.TextFormatter;
  this.formatter_.showAbsoluteTime = false;
  this.formatter_.showExceptionText = false;
  this.isCapturing_ = false;
  this.logBuffer_ = "";
  this.filteredLoggers_ = {}
};
goog.debug.Console.prototype.getFormatter = function() {
  return this.formatter_
};
goog.debug.Console.prototype.setCapturing = function(capturing) {
  if(capturing == this.isCapturing_) {
    return
  }
  var rootLogger = goog.debug.LogManager.getRoot();
  if(capturing) {
    rootLogger.addHandler(this.publishHandler_)
  }else {
    rootLogger.removeHandler(this.publishHandler_);
    this.logBuffer = ""
  }
  this.isCapturing_ = capturing
};
goog.debug.Console.prototype.addLogRecord = function(logRecord) {
  if(this.filteredLoggers_[logRecord.getLoggerName()]) {
    return
  }
  var record = this.formatter_.formatRecord(logRecord);
  var console = goog.debug.Console.console_;
  if(console && console["firebug"]) {
    switch(logRecord.getLevel()) {
      case goog.debug.Logger.Level.SHOUT:
        console["info"](record);
        break;
      case goog.debug.Logger.Level.SEVERE:
        console["error"](record);
        break;
      case goog.debug.Logger.Level.WARNING:
        console["warn"](record);
        break;
      default:
        console["debug"](record);
        break
    }
  }else {
    if(console) {
      console.log(record)
    }else {
      if(window.opera) {
        window.opera["postError"](record)
      }else {
        this.logBuffer_ += record
      }
    }
  }
};
goog.debug.Console.prototype.addFilter = function(loggerName) {
  this.filteredLoggers_[loggerName] = true
};
goog.debug.Console.prototype.removeFilter = function(loggerName) {
  delete this.filteredLoggers_[loggerName]
};
goog.debug.Console.instance = null;
goog.debug.Console.console_ = window.console;
goog.debug.Console.autoInstall = function() {
  if(!goog.debug.Console.instance) {
    goog.debug.Console.instance = new goog.debug.Console
  }
  if(window.location.href.indexOf("Debug=true") != -1) {
    goog.debug.Console.instance.setCapturing(true)
  }
};
goog.debug.Console.show = function() {
  alert(goog.debug.Console.instance.logBuffer_)
};
goog.provide("goog.net.ChannelRequest");
goog.provide("goog.net.ChannelRequest.Error");
goog.require("goog.Timer");
goog.require("goog.events");
goog.require("goog.events.EventHandler");
goog.require("goog.net.EventType");
goog.require("goog.net.XmlHttp.ReadyState");
goog.require("goog.object");
goog.require("goog.userAgent");
goog.net.ChannelRequest = function(channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId) {
  this.channel_ = channel;
  this.channelDebug_ = channelDebug;
  this.sid_ = opt_sessionId;
  this.rid_ = opt_requestId;
  this.retryId_ = opt_retryId || 1;
  this.timeout_ = goog.net.ChannelRequest.TIMEOUT_MS;
  this.eventHandler_ = new goog.events.EventHandler(this);
  this.pollingTimer_ = new goog.Timer;
  this.pollingTimer_.setInterval(goog.net.ChannelRequest.POLLING_INTERVAL_MS)
};
goog.net.ChannelRequest.prototype.extraHeaders_ = null;
goog.net.ChannelRequest.prototype.successful_ = false;
goog.net.ChannelRequest.prototype.watchDogTimerId_ = null;
goog.net.ChannelRequest.prototype.watchDogTimeoutTime_ = null;
goog.net.ChannelRequest.prototype.requestStartTime_ = null;
goog.net.ChannelRequest.prototype.type_ = null;
goog.net.ChannelRequest.prototype.baseUri_ = null;
goog.net.ChannelRequest.prototype.requestUri_ = null;
goog.net.ChannelRequest.prototype.postData_ = null;
goog.net.ChannelRequest.prototype.xmlHttp_ = null;
goog.net.ChannelRequest.prototype.xmlHttpChunkStart_ = 0;
goog.net.ChannelRequest.prototype.trident_ = null;
goog.net.ChannelRequest.prototype.verb_ = null;
goog.net.ChannelRequest.prototype.lastError_ = null;
goog.net.ChannelRequest.prototype.lastStatusCode_ = -1;
goog.net.ChannelRequest.prototype.sendClose_ = true;
goog.net.ChannelRequest.prototype.cancelled_ = false;
goog.net.ChannelRequest.TIMEOUT_MS = 45 * 1E3;
goog.net.ChannelRequest.POLLING_INTERVAL_MS = 250;
goog.net.ChannelRequest.MIN_WEBKIT_FOR_INTERACTIVE_ = "420+";
goog.net.ChannelRequest.Type_ = {XML_HTTP:1, IMG:2, TRIDENT:3};
goog.net.ChannelRequest.Error = {STATUS:0, NO_DATA:1, TIMEOUT:2, UNKNOWN_SESSION_ID:3, BAD_DATA:4, HANDLER_EXCEPTION:5};
goog.net.ChannelRequest.errorStringFromCode = function(errorCode, statusCode) {
  switch(errorCode) {
    case goog.net.ChannelRequest.Error.STATUS:
      return"Non-200 return code (" + statusCode + ")";
    case goog.net.ChannelRequest.Error.NO_DATA:
      return"XMLHTTP failure (no data)";
    case goog.net.ChannelRequest.Error.TIMEOUT:
      return"HttpConnection timeout";
    default:
      return"Unknown error"
  }
};
goog.net.ChannelRequest.INVALID_CHUNK_ = {};
goog.net.ChannelRequest.INCOMPLETE_CHUNK_ = {};
goog.net.ChannelRequest.prototype.setExtraHeaders = function(extraHeaders) {
  this.extraHeaders_ = extraHeaders
};
goog.net.ChannelRequest.prototype.setTimeout = function(timeout) {
  this.timeout_ = timeout
};
goog.net.ChannelRequest.prototype.xmlHttpPost = function(uri, postData, decodeChunks) {
  this.type_ = goog.net.ChannelRequest.Type_.XML_HTTP;
  this.baseUri_ = uri.clone().makeUnique();
  this.postData_ = postData;
  this.decodeChunks_ = decodeChunks;
  this.sendXmlHttp_(null)
};
goog.net.ChannelRequest.prototype.xmlHttpGet = function(uri, decodeChunks, hostPrefix, opt_noClose) {
  this.type_ = goog.net.ChannelRequest.Type_.XML_HTTP;
  this.baseUri_ = uri.clone().makeUnique();
  this.postData_ = null;
  this.decodeChunks_ = decodeChunks;
  if(opt_noClose) {
    this.sendClose_ = false
  }
  this.sendXmlHttp_(hostPrefix)
};
goog.net.ChannelRequest.prototype.sendXmlHttp_ = function(hostPrefix) {
  this.requestUri_ = this.baseUri_.clone();
  this.requestUri_.setParameterValues("t", this.retryId_);
  this.xmlHttpChunkStart_ = 0;
  var useSecondaryDomains = this.channel_.shouldUseSecondaryDomains();
  this.xmlHttp_ = this.channel_.createXhrIo(useSecondaryDomains ? hostPrefix : null);
  goog.events.listen(this.xmlHttp_, goog.net.EventType.READY_STATE_CHANGE, this.xmlHttpHandler_, false, this);
  var headers = this.extraHeaders_ ? goog.object.clone(this.extraHeaders_) : {};
  if(this.postData_) {
    this.verb_ = "POST";
    headers["Content-Type"] = "application/x-www-form-urlencoded";
    this.xmlHttp_.send(this.requestUri_, this.verb_, this.postData_, headers)
  }else {
    this.verb_ = "GET";
    if(this.sendClose_ && !goog.userAgent.WEBKIT) {
      headers["Connection"] = "close"
    }
    this.xmlHttp_.send(this.requestUri_, this.verb_, null, headers)
  }
  this.requestStartTime_ = goog.now();
  this.channelDebug_.xmlHttpChannelRequest(this.verb_, this.requestUri_, this.rid_, this.retryId_, this.postData_);
  this.ensureWatchDogTimer_()
};
goog.net.ChannelRequest.prototype.xmlHttpHandler_ = function(e) {
  var xmlhttp = e.target;
  goog.net.BrowserChannel.onStartExecution();
  try {
    if(xmlhttp == this.xmlHttp_) {
      this.onXmlHttpReadyStateChanged_()
    }else {
      this.channelDebug_.warning("Called back with an " + "unexpected xmlhttp")
    }
  }catch(ex) {
    this.channelDebug_.debug("Failed call to OnXmlHttpReadyStateChanged_");
    if(this.xmlHttp_ && this.xmlHttp_.getResponseText()) {
      this.channelDebug_.dumpException(ex, "ResponseText: " + this.xmlHttp_.getResponseText())
    }else {
      this.channelDebug_.dumpException(ex, "No response text")
    }
  }finally {
    goog.net.BrowserChannel.onEndExecution()
  }
};
goog.net.ChannelRequest.prototype.onXmlHttpReadyStateChanged_ = function() {
  var readyState = this.xmlHttp_.getReadyState();
  if(goog.userAgent.IE || goog.userAgent.WEBKIT && !goog.userAgent.isVersion(goog.net.ChannelRequest.MIN_WEBKIT_FOR_INTERACTIVE_)) {
    if(readyState < goog.net.XmlHttp.ReadyState.COMPLETE) {
      return
    }
  }else {
    if(readyState < goog.net.XmlHttp.ReadyState.INTERACTIVE || readyState == goog.net.XmlHttp.ReadyState.INTERACTIVE && !goog.userAgent.OPERA && !this.xmlHttp_.getResponseText()) {
      return
    }
  }
  this.cancelWatchDogTimer_();
  var status = this.xmlHttp_.getStatus();
  this.lastStatusCode_ = status;
  var responseText = this.xmlHttp_.getResponseText();
  if(!responseText) {
    this.channelDebug_.debug("No response text for uri " + this.requestUri_ + " status " + status)
  }
  this.successful_ = status == 200;
  this.channelDebug_.xmlHttpChannelResponseMetaData(this.verb_, this.requestUri_, this.rid_, this.retryId_, readyState, status);
  if(!this.successful_) {
    if(status == 400 && responseText.indexOf("Unknown SID") > 0) {
      this.lastError_ = goog.net.ChannelRequest.Error.UNKNOWN_SESSION_ID;
      goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.REQUEST_UNKNOWN_SESSION_ID)
    }else {
      this.lastError_ = goog.net.ChannelRequest.Error.STATUS;
      goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.REQUEST_BAD_STATUS)
    }
    this.channelDebug_.xmlHttpChannelResponseText(this.rid_, responseText);
    this.cleanup_();
    this.dispatchFailure_();
    return
  }
  if(readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {
    this.cleanup_()
  }
  if(this.decodeChunks_) {
    this.decodeNextChunks_(readyState, responseText);
    if(goog.userAgent.OPERA && readyState == goog.net.XmlHttp.ReadyState.INTERACTIVE) {
      this.startPolling_()
    }
  }else {
    this.channelDebug_.xmlHttpChannelResponseText(this.rid_, responseText, null);
    this.safeOnRequestData_(responseText)
  }
  if(!this.successful_) {
    return
  }
  if(!this.cancelled_) {
    if(readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {
      this.channel_.onRequestComplete(this)
    }else {
      this.successful_ = false;
      this.ensureWatchDogTimer_()
    }
  }
};
goog.net.ChannelRequest.prototype.decodeNextChunks_ = function(readyState, responseText) {
  var decodeNextChunksSuccessful = true;
  while(!this.cancelled_ && this.xmlHttpChunkStart_ < responseText.length) {
    var chunkText = this.getNextChunk_(responseText);
    if(chunkText == goog.net.ChannelRequest.INCOMPLETE_CHUNK_) {
      if(readyState == goog.net.XmlHttp.ReadyState.COMPLETE) {
        this.lastError_ = goog.net.ChannelRequest.Error.BAD_DATA;
        goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.REQUEST_INCOMPLETE_DATA);
        decodeNextChunksSuccessful = false
      }
      this.channelDebug_.xmlHttpChannelResponseText(this.rid_, null, "[Incomplete Response]");
      break
    }else {
      if(chunkText == goog.net.ChannelRequest.INVALID_CHUNK_) {
        this.lastError_ = goog.net.ChannelRequest.Error.BAD_DATA;
        goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.REQUEST_BAD_DATA);
        this.channelDebug_.xmlHttpChannelResponseText(this.rid_, responseText, "[Invalid Chunk]");
        decodeNextChunksSuccessful = false;
        break
      }else {
        this.channelDebug_.xmlHttpChannelResponseText(this.rid_, chunkText, null);
        this.safeOnRequestData_(chunkText)
      }
    }
  }
  if(readyState == goog.net.XmlHttp.ReadyState.COMPLETE && responseText.length == 0) {
    this.lastError_ = goog.net.ChannelRequest.Error.NO_DATA;
    goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.REQUEST_NO_DATA);
    decodeNextChunksSuccessful = false
  }
  this.successful_ = this.successful_ && decodeNextChunksSuccessful;
  if(!decodeNextChunksSuccessful) {
    this.channelDebug_.xmlHttpChannelResponseText(this.rid_, responseText, "[Invalid Chunked Response]");
    this.cleanup_();
    this.dispatchFailure_()
  }
};
goog.net.ChannelRequest.prototype.pollResponse_ = function() {
  var readyState = this.xmlHttp_.getReadyState();
  var responseText = this.xmlHttp_.getResponseText();
  if(this.xmlHttpChunkStart_ < responseText.length) {
    this.cancelWatchDogTimer_();
    this.decodeNextChunks_(readyState, responseText);
    if(this.successful_ && readyState != goog.net.XmlHttp.ReadyState.COMPLETE) {
      this.ensureWatchDogTimer_()
    }
  }
};
goog.net.ChannelRequest.prototype.startPolling_ = function() {
  this.eventHandler_.listen(this.pollingTimer_, goog.Timer.TICK, this.pollResponse_);
  this.pollingTimer_.start()
};
goog.net.ChannelRequest.prototype.stopPolling_ = function() {
  this.pollingTimer_.stop();
  this.eventHandler_.removeAll()
};
goog.net.ChannelRequest.prototype.getNextChunk_ = function(responseText) {
  var sizeStartIndex = this.xmlHttpChunkStart_;
  var sizeEndIndex = responseText.indexOf("\n", sizeStartIndex);
  if(sizeEndIndex == -1) {
    return goog.net.ChannelRequest.INCOMPLETE_CHUNK_
  }
  var sizeAsString = responseText.substring(sizeStartIndex, sizeEndIndex);
  var size = Number(sizeAsString);
  if(isNaN(size)) {
    return goog.net.ChannelRequest.INVALID_CHUNK_
  }
  var chunkStartIndex = sizeEndIndex + 1;
  if(chunkStartIndex + size > responseText.length) {
    return goog.net.ChannelRequest.INCOMPLETE_CHUNK_
  }
  var chunkText = responseText.substr(chunkStartIndex, size);
  this.xmlHttpChunkStart_ = chunkStartIndex + size;
  return chunkText
};
goog.net.ChannelRequest.prototype.tridentGet = function(uri, usingSecondaryDomain) {
  this.type_ = goog.net.ChannelRequest.Type_.TRIDENT;
  this.baseUri_ = uri.clone().makeUnique();
  this.tridentGet_(usingSecondaryDomain)
};
goog.net.ChannelRequest.prototype.tridentGet_ = function(usingSecondaryDomain) {
  this.trident_ = new ActiveXObject("htmlfile");
  var hostname = "";
  var body = "<html><body>";
  if(usingSecondaryDomain) {
    hostname = window.location.hostname;
    body += '<script>document.domain="' + hostname + '"</scr' + "ipt>"
  }
  body += "</body></html>";
  this.trident_.open();
  this.trident_.write(body);
  this.trident_.close();
  this.trident_.parentWindow["m"] = goog.bind(this.onTridentRpcMessage_, this);
  this.trident_.parentWindow["d"] = goog.bind(this.onTridentDone_, this, true);
  this.trident_.parentWindow["rpcClose"] = goog.bind(this.onTridentDone_, this, false);
  var div = this.trident_.createElement("div");
  this.trident_.parentWindow.document.body.appendChild(div);
  this.requestUri_ = this.baseUri_.clone();
  this.requestUri_.setParameterValue("DOMAIN", hostname);
  this.requestUri_.setParameterValue("t", this.retryId_);
  div.innerHTML = '<iframe src="' + this.requestUri_ + '"></iframe>';
  this.requestStartTime_ = goog.now();
  this.channelDebug_.tridentChannelRequest("GET", this.requestUri_, this.rid_, this.retryId_);
  this.ensureWatchDogTimer_()
};
goog.net.ChannelRequest.prototype.onTridentRpcMessage_ = function(msg) {
  goog.net.BrowserChannel.setTimeout(goog.bind(this.onTridentRpcMessageAsync_, this, msg), 0)
};
goog.net.ChannelRequest.prototype.onTridentRpcMessageAsync_ = function(msg) {
  if(this.cancelled_) {
    return
  }
  this.channelDebug_.tridentChannelResponseText(this.rid_, msg);
  this.cancelWatchDogTimer_();
  this.safeOnRequestData_(msg);
  this.ensureWatchDogTimer_()
};
goog.net.ChannelRequest.prototype.onTridentDone_ = function(successful) {
  goog.net.BrowserChannel.setTimeout(goog.bind(this.onTridentDoneAsync_, this, successful), 0)
};
goog.net.ChannelRequest.prototype.onTridentDoneAsync_ = function(successful) {
  if(this.cancelled_) {
    return
  }
  this.channelDebug_.tridentChannelResponseDone(this.rid_, successful);
  this.cancelWatchDogTimer_();
  this.cleanup_();
  this.successful_ = successful;
  this.channel_.onRequestComplete(this)
};
goog.net.ChannelRequest.prototype.sendUsingImgTag = function(uri) {
  this.type_ = goog.net.ChannelRequest.Type_.IMG;
  this.baseUri_ = uri.clone().makeUnique();
  this.imgTagGet_()
};
goog.net.ChannelRequest.prototype.imgTagGet_ = function() {
  var eltImg = new Image;
  eltImg.src = this.baseUri_;
  this.requestStartTime_ = goog.now();
  this.ensureWatchDogTimer_()
};
goog.net.ChannelRequest.prototype.cancel = function() {
  this.cancelled_ = true;
  this.cancelWatchDogTimer_();
  this.cleanup_()
};
goog.net.ChannelRequest.prototype.ensureWatchDogTimer_ = function() {
  this.watchDogTimeoutTime_ = goog.now() + this.timeout_;
  this.startWatchDogTimer_(this.timeout_)
};
goog.net.ChannelRequest.prototype.startWatchDogTimer_ = function(time) {
  if(this.watchDogTimerId_ != null) {
    throw Error("WatchDog timer not null");
  }
  this.watchDogTimerId_ = goog.net.BrowserChannel.setTimeout(goog.bind(this.onWatchDogTimeout_, this), time)
};
goog.net.ChannelRequest.prototype.cancelWatchDogTimer_ = function() {
  if(this.watchDogTimerId_) {
    goog.global.clearTimeout(this.watchDogTimerId_);
    this.watchDogTimerId_ = null
  }
};
goog.net.ChannelRequest.prototype.onWatchDogTimeout_ = function() {
  this.watchDogTimerId_ = null;
  var now = goog.now();
  if(now - this.watchDogTimeoutTime_ >= 0) {
    this.handleTimeout_()
  }else {
    this.channelDebug_.warning("WatchDog timer called too early");
    this.startWatchDogTimer_(this.watchDogTimeoutTime_ - now)
  }
};
goog.net.ChannelRequest.prototype.handleTimeout_ = function() {
  if(this.successful_) {
    this.channelDebug_.severe("Received watchdog timeout even though request loaded successfully")
  }
  this.channelDebug_.timeoutResponse(this.requestUri_);
  this.cleanup_();
  this.lastError_ = goog.net.ChannelRequest.Error.TIMEOUT;
  goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.REQUEST_TIMEOUT);
  this.dispatchFailure_()
};
goog.net.ChannelRequest.prototype.dispatchFailure_ = function() {
  if(this.channel_.isClosed() || this.cancelled_) {
    return
  }
  this.channel_.onRequestComplete(this)
};
goog.net.ChannelRequest.prototype.cleanup_ = function() {
  this.stopPolling_();
  if(this.xmlHttp_) {
    var xmlhttp = this.xmlHttp_;
    this.xmlHttp_ = null;
    goog.events.unlisten(xmlhttp, goog.net.EventType.READY_STATE_CHANGE, this.xmlHttpHandler_, false, this);
    xmlhttp.abort()
  }
  if(this.trident_) {
    this.trident_ = null
  }
};
goog.net.ChannelRequest.prototype.getSuccess = function() {
  return this.successful_
};
goog.net.ChannelRequest.prototype.getLastError = function() {
  return this.lastError_
};
goog.net.ChannelRequest.prototype.getLastStatusCode = function() {
  return this.lastStatusCode_
};
goog.net.ChannelRequest.prototype.getSessionId = function() {
  return this.sid_
};
goog.net.ChannelRequest.prototype.getRequestId = function() {
  return this.rid_
};
goog.net.ChannelRequest.prototype.getPostData = function() {
  return this.postData_
};
goog.net.ChannelRequest.prototype.getRequestStartTime = function() {
  return this.requestStartTime_
};
goog.net.ChannelRequest.prototype.safeOnRequestData_ = function(data) {
  try {
    this.channel_.onRequestData(this, data)
  }catch(e) {
    this.channelDebug_.dumpException(e, "Error in httprequest callback")
  }
};
goog.provide("goog.net.ChannelDebug");
goog.require("goog.debug.Logger");
goog.require("goog.json");
goog.net.ChannelDebug = function() {
  this.logger_ = goog.debug.Logger.getLogger("goog.net.BrowserChannel")
};
goog.net.ChannelDebug.prototype.getLogger = function() {
  return this.logger_
};
goog.net.ChannelDebug.prototype.xmlHttpChannelRequest = function(verb, uri, id, attempt, postData) {
  this.info("XMLHTTP REQ (" + id + ") [attempt " + attempt + "]: " + verb + "\n" + uri + "\n" + this.maybeRedactPostData_(postData))
};
goog.net.ChannelDebug.prototype.xmlHttpChannelResponseMetaData = function(verb, uri, id, attempt, readyState, statusCode) {
  this.info("XMLHTTP RESP (" + id + ") [ attempt " + attempt + "]: " + verb + "\n" + uri + "\n" + readyState + " " + statusCode)
};
goog.net.ChannelDebug.prototype.xmlHttpChannelResponseText = function(id, responseText, opt_desc) {
  this.info("XMLHTTP TEXT (" + id + "): " + this.redactResponse_(responseText) + (opt_desc ? " " + opt_desc : ""))
};
goog.net.ChannelDebug.prototype.tridentChannelRequest = function(verb, uri, id, attempt) {
  this.info("TRIDENT REQ (" + id + ") [ attempt " + attempt + "]: " + verb + "\n" + uri)
};
goog.net.ChannelDebug.prototype.tridentChannelResponseText = function(id, responseText) {
  this.info("TRIDENT TEXT (" + id + "): " + this.redactResponse_(responseText))
};
goog.net.ChannelDebug.prototype.tridentChannelResponseDone = function(id, successful) {
  this.info("TRIDENT TEXT (" + id + "): " + successful ? "success" : "failure")
};
goog.net.ChannelDebug.prototype.timeoutResponse = function(uri) {
  this.info("TIMEOUT: " + uri)
};
goog.net.ChannelDebug.prototype.debug = function(text) {
  this.info(text)
};
goog.net.ChannelDebug.prototype.dumpException = function(e, opt_msg) {
  this.severe((opt_msg || "Exception") + e)
};
goog.net.ChannelDebug.prototype.info = function(text) {
  this.logger_.info(text)
};
goog.net.ChannelDebug.prototype.warning = function(text) {
  this.logger_.warning(text)
};
goog.net.ChannelDebug.prototype.severe = function(text) {
  this.logger_.severe(text)
};
goog.net.ChannelDebug.prototype.redactResponse_ = function(responseText) {
  if(!responseText || responseText == goog.net.BrowserChannel.MAGIC_RESPONSE_COOKIE) {
    return responseText
  }
  try {
    var responseArray = goog.json.unsafeParse(responseText);
    for(var i = 0;i < responseArray.length;i++) {
      if(goog.isArray(responseArray[i])) {
        this.maybeRedactArray_(responseArray[i])
      }
    }
    return goog.json.serialize(responseArray)
  }catch(e) {
    this.debug("Exception parsing expected JS array - probably was not JS");
    return responseText
  }
};
goog.net.ChannelDebug.prototype.maybeRedactArray_ = function(array) {
  if(array.length < 2) {
    return
  }
  var dataPart = array[1];
  if(!goog.isArray(dataPart)) {
    return
  }
  if(dataPart.length < 1) {
    return
  }
  var type = dataPart[0];
  if(type != "noop" && type != "stop") {
    for(var i = 1;i < dataPart.length;i++) {
      dataPart[i] = ""
    }
  }
};
goog.net.ChannelDebug.prototype.maybeRedactPostData_ = function(data) {
  if(!data) {
    return null
  }
  var out = "";
  var params = data.split("&");
  for(var i = 0;i < params.length;i++) {
    var param = params[i];
    var keyValue = param.split("=");
    if(keyValue.length > 1) {
      var key = keyValue[0];
      var value = keyValue[1];
      var keyParts = key.split("_");
      if(keyParts.length >= 2 && keyParts[1] == "type") {
        out += key + "=" + value + "&"
      }else {
        out += key + "=" + "redacted" + "&"
      }
    }
  }
  return out
};
goog.provide("goog.net.tmpnetwork");
goog.require("goog.Uri");
goog.require("goog.net.ChannelDebug");
goog.net.tmpnetwork.GOOGLECOM_TIMEOUT = 1E4;
goog.net.tmpnetwork.testGoogleCom = function(callback, opt_imageUri) {
  var uri = opt_imageUri;
  if(!uri) {
    uri = new goog.Uri("//www.google.com/images/cleardot.gif");
    uri.makeUnique()
  }
  goog.net.tmpnetwork.testLoadImage(uri.toString(), goog.net.tmpnetwork.GOOGLECOM_TIMEOUT, callback)
};
goog.net.tmpnetwork.testLoadImageWithRetries = function(url, timeout, callback, retries, opt_pauseBetweenRetriesMS) {
  var channelDebug = new goog.net.ChannelDebug;
  channelDebug.debug("TestLoadImageWithRetries: " + opt_pauseBetweenRetriesMS);
  if(retries == 0) {
    callback(false);
    return
  }
  var pauseBetweenRetries = opt_pauseBetweenRetriesMS || 0;
  retries--;
  goog.net.tmpnetwork.testLoadImage(url, timeout, function(succeeded) {
    if(succeeded) {
      callback(true)
    }else {
      goog.global.setTimeout(function() {
        goog.net.tmpnetwork.testLoadImageWithRetries(url, timeout, callback, retries, pauseBetweenRetries)
      }, pauseBetweenRetries)
    }
  })
};
goog.net.tmpnetwork.testLoadImage = function(url, timeout, callback) {
  var channelDebug = new goog.net.ChannelDebug;
  channelDebug.debug("TestLoadImage: loading " + url);
  var img = new Image;
  img.onload = function() {
    try {
      channelDebug.debug("TestLoadImage: loaded");
      goog.net.tmpnetwork.clearImageCallbacks_(img);
      callback(true)
    }catch(e) {
      channelDebug.dumpException(e)
    }
  };
  img.onerror = function() {
    try {
      channelDebug.debug("TestLoadImage: error");
      goog.net.tmpnetwork.clearImageCallbacks_(img);
      callback(false)
    }catch(e) {
      channelDebug.dumpException(e)
    }
  };
  img.onabort = function() {
    try {
      channelDebug.debug("TestLoadImage: abort");
      goog.net.tmpnetwork.clearImageCallbacks_(img);
      callback(false)
    }catch(e) {
      channelDebug.dumpException(e)
    }
  };
  img.ontimeout = function() {
    try {
      channelDebug.debug("TestLoadImage: timeout");
      goog.net.tmpnetwork.clearImageCallbacks_(img);
      callback(false)
    }catch(e) {
      channelDebug.dumpException(e)
    }
  };
  goog.global.setTimeout(function() {
    if(img.ontimeout) {
      img.ontimeout()
    }
  }, timeout);
  img.src = url
};
goog.net.tmpnetwork.clearImageCallbacks_ = function(img) {
  img.onload = null;
  img.onerror = null;
  img.onabort = null;
  img.ontimeout = null
};
goog.provide("goog.net.BrowserTestChannel");
goog.require("goog.json");
goog.require("goog.net.ChannelRequest.Error");
goog.require("goog.net.tmpnetwork");
goog.require("goog.userAgent");
goog.net.BrowserTestChannel = function(channel, channelDebug) {
  this.channel_ = channel;
  this.channelDebug_ = channelDebug
};
goog.net.BrowserTestChannel.prototype.extraHeaders_ = null;
goog.net.BrowserTestChannel.prototype.request_ = null;
goog.net.BrowserTestChannel.prototype.receivedIntermediateResult_ = false;
goog.net.BrowserTestChannel.prototype.startTime_ = null;
goog.net.BrowserTestChannel.prototype.firstTime_ = null;
goog.net.BrowserTestChannel.prototype.lastTime_ = null;
goog.net.BrowserTestChannel.prototype.path_ = null;
goog.net.BrowserTestChannel.prototype.state_ = null;
goog.net.BrowserTestChannel.prototype.lastStatusCode_ = -1;
goog.net.BrowserTestChannel.prototype.hostPrefix_ = null;
goog.net.BrowserTestChannel.prototype.blockedPrefix_ = null;
goog.net.BrowserTestChannel.State_ = {INIT:0, CHECKING_BLOCKED:1, CONNECTION_TESTING:2};
goog.net.BrowserTestChannel.BLOCKED_TIMEOUT_ = 5E3;
goog.net.BrowserTestChannel.BLOCKED_RETRIES_ = 3;
goog.net.BrowserTestChannel.BLOCKED_PAUSE_BETWEEN_RETRIES_ = 2E3;
goog.net.BrowserTestChannel.MIN_TIME_EXPECTED_BETWEEN_DATA_ = 500;
goog.net.BrowserTestChannel.prototype.setExtraHeaders = function(extraHeaders) {
  this.extraHeaders_ = extraHeaders
};
goog.net.BrowserTestChannel.prototype.connect = function(path) {
  this.path_ = path;
  var sendDataUri = this.channel_.getForwardChannelUri(this.path_);
  goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_ONE_START);
  sendDataUri.setParameterValues("MODE", "init");
  this.request_ = goog.net.BrowserChannel.createChannelRequest(this, this.channelDebug_);
  this.request_.setExtraHeaders(this.extraHeaders_);
  this.request_.xmlHttpGet(sendDataUri, false, null, true);
  this.state_ = goog.net.BrowserTestChannel.State_.INIT;
  this.startTime_ = goog.now()
};
goog.net.BrowserTestChannel.prototype.checkBlocked_ = function() {
  var uri = this.channel_.createDataUri(this.blockedPrefix_, "/mail/images/cleardot.gif");
  uri.makeUnique();
  goog.net.tmpnetwork.testLoadImageWithRetries(uri.toString(), goog.net.BrowserTestChannel.BLOCKED_TIMEOUT_, goog.bind(this.checkBlockedCallback_, this), goog.net.BrowserTestChannel.BLOCKED_RETRIES_, goog.net.BrowserTestChannel.BLOCKED_PAUSE_BETWEEN_RETRIES_)
};
goog.net.BrowserTestChannel.prototype.checkBlockedCallback_ = function(succeeded) {
  if(succeeded) {
    this.state_ = goog.net.BrowserTestChannel.State_.CONNECTION_TESTING;
    this.connectStage2_()
  }else {
    goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.CHANNEL_BLOCKED);
    this.channel_.testConnectionBlocked(this)
  }
};
goog.net.BrowserTestChannel.prototype.connectStage2_ = function() {
  this.channelDebug_.debug("TestConnection: starting stage 2");
  this.request_ = goog.net.BrowserChannel.createChannelRequest(this, this.channelDebug_);
  this.request_.setExtraHeaders(this.extraHeaders_);
  var recvDataUri = this.channel_.getBackChannelUri(this.hostPrefix_, this.path_);
  goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_TWO_START);
  if(goog.userAgent.IE) {
    recvDataUri.setParameterValues("TYPE", "html");
    this.request_.tridentGet(recvDataUri, Boolean(this.hostPrefix_))
  }else {
    recvDataUri.setParameterValues("TYPE", "xmlhttp");
    this.request_.xmlHttpGet(recvDataUri, false, this.hostPrefix_, false)
  }
};
goog.net.BrowserTestChannel.prototype.createXhrIo = function(hostPrefix) {
  return this.channel_.createXhrIo(hostPrefix)
};
goog.net.BrowserTestChannel.prototype.abort = function() {
  if(this.request_) {
    this.request_.cancel();
    this.request_ = null
  }
  this.lastStatusCode_ = -1
};
goog.net.BrowserTestChannel.prototype.isClosed = function() {
  return false
};
goog.net.BrowserTestChannel.prototype.onRequestData = function(req, responseText) {
  this.lastStatusCode_ = req.getLastStatusCode();
  if(this.state_ == goog.net.BrowserTestChannel.State_.INIT) {
    this.channelDebug_.debug("TestConnection: Got data for stage 1");
    if(!responseText) {
      this.channelDebug_.debug("TestConnection: Null responseText");
      this.channel_.testConnectionFailure(this, goog.net.ChannelRequest.Error.BAD_DATA);
      return
    }
    try {
      var respArray = goog.json.unsafeParse(responseText)
    }catch(e) {
      this.channelDebug_.dumpException(e);
      this.channel_.testConnectionFailure(this, goog.net.ChannelRequest.Error.BAD_DATA);
      return
    }
    this.hostPrefix_ = this.channel_.correctHostPrefix(respArray[0]);
    this.blockedPrefix_ = respArray[1]
  }else {
    if(this.state_ == goog.net.BrowserTestChannel.State_.CONNECTION_TESTING) {
      if(this.receivedIntermediateResult_) {
        goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_TWO_DATA_TWO);
        this.lastTime_ = goog.now()
      }else {
        if(responseText == "11111") {
          goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_TWO_DATA_ONE);
          this.receivedIntermediateResult_ = true;
          this.firstTime_ = goog.now();
          if(this.checkForEarlyNonBuffered_()) {
            this.lastStatusCode_ = 200;
            this.request_.cancel();
            this.channelDebug_.debug("Test connection succeeded; using streaming connection");
            goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.NOPROXY);
            this.channel_.testConnectionFinished(this, true)
          }
        }else {
          goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_TWO_DATA_BOTH);
          this.firstTime_ = this.lastTime_ = goog.now();
          this.receivedIntermediateResult_ = false
        }
      }
    }
  }
};
goog.net.BrowserTestChannel.prototype.onRequestComplete = function(req) {
  this.lastStatusCode_ = this.request_.getLastStatusCode();
  if(!this.request_.getSuccess()) {
    this.channelDebug_.debug("TestConnection: request failed, in state " + this.state_);
    if(this.state_ == goog.net.BrowserTestChannel.State_.INIT) {
      goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_ONE_FAILED)
    }else {
      if(this.state_ == goog.net.BrowserTestChannel.State_.CONNECTION_TESTING) {
        goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.TEST_STAGE_TWO_FAILED)
      }
    }
    this.channel_.testConnectionFailure(this, this.request_.getLastError());
    return
  }
  if(this.state_ == goog.net.BrowserTestChannel.State_.INIT) {
    this.channelDebug_.debug("TestConnection: request complete for initial check");
    if(this.blockedPrefix_) {
      this.state_ = goog.net.BrowserTestChannel.State_.CHECKING_BLOCKED;
      this.checkBlocked_()
    }else {
      this.state_ = goog.net.BrowserTestChannel.State_.CONNECTION_TESTING;
      this.connectStage2_()
    }
  }else {
    if(this.state_ == goog.net.BrowserTestChannel.State_.CONNECTION_TESTING) {
      this.channelDebug_.debug("TestConnection: request complete for stage 2");
      var goodConn = false;
      if(goog.userAgent.IE) {
        var ms = this.lastTime_ - this.firstTime_;
        if(ms < 200) {
          goodConn = false
        }else {
          goodConn = true
        }
      }else {
        goodConn = this.receivedIntermediateResult_
      }
      if(goodConn) {
        this.channelDebug_.debug("Test connection succeeded; using streaming connection");
        goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.NOPROXY);
        this.channel_.testConnectionFinished(this, true)
      }else {
        this.channelDebug_.debug("Test connection failed; not using streaming");
        goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.PROXY);
        this.channel_.testConnectionFinished(this, false)
      }
    }
  }
};
goog.net.BrowserTestChannel.prototype.getLastStatusCode = function() {
  return this.lastStatusCode_
};
goog.net.BrowserTestChannel.prototype.shouldUseSecondaryDomains = function() {
  return this.channel_.shouldUseSecondaryDomains()
};
goog.net.BrowserTestChannel.prototype.isActive = function(browserChannel) {
  return this.channel_.isActive()
};
goog.net.BrowserTestChannel.prototype.checkForEarlyNonBuffered_ = function() {
  var ms = this.firstTime_ - this.startTime_;
  return!goog.userAgent.IE || ms < goog.net.BrowserTestChannel.MIN_TIME_EXPECTED_BETWEEN_DATA_
};
goog.provide("goog.structs.CircularBuffer");
goog.structs.CircularBuffer = function(opt_maxSize) {
  this.maxSize_ = opt_maxSize || 100;
  this.buff_ = []
};
goog.structs.CircularBuffer.prototype.nextPtr_ = 0;
goog.structs.CircularBuffer.prototype.add = function(item) {
  this.buff_[this.nextPtr_] = item;
  this.nextPtr_ = (this.nextPtr_ + 1) % this.maxSize_
};
goog.structs.CircularBuffer.prototype.get = function(index) {
  index = this.normalizeIndex_(index);
  return this.buff_[index]
};
goog.structs.CircularBuffer.prototype.set = function(index, item) {
  index = this.normalizeIndex_(index);
  this.buff_[index] = item
};
goog.structs.CircularBuffer.prototype.getCount = function() {
  return this.buff_.length
};
goog.structs.CircularBuffer.prototype.isEmpty = function() {
  return this.buff_.length == 0
};
goog.structs.CircularBuffer.prototype.clear = function() {
  this.buff_.length = 0;
  this.nextPtr_ = 0
};
goog.structs.CircularBuffer.prototype.getValues = function() {
  return this.getNewestValues(this.getCount())
};
goog.structs.CircularBuffer.prototype.getNewestValues = function(maxCount) {
  var l = this.getCount();
  var start = this.getCount() - maxCount;
  var rv = [];
  for(var i = start;i < l;i++) {
    rv[i] = this.get(i)
  }
  return rv
};
goog.structs.CircularBuffer.prototype.getKeys = function() {
  var rv = [];
  var l = this.getCount();
  for(var i = 0;i < l;i++) {
    rv[i] = i
  }
  return rv
};
goog.structs.CircularBuffer.prototype.containsKey = function(key) {
  return key < this.getCount()
};
goog.structs.CircularBuffer.prototype.containsValue = function(value) {
  var l = this.getCount();
  for(var i = 0;i < l;i++) {
    if(this.get(i) == value) {
      return true
    }
  }
  return false
};
goog.structs.CircularBuffer.prototype.getLast = function() {
  if(this.getCount() == 0) {
    return null
  }
  return this.get(this.getCount() - 1)
};
goog.structs.CircularBuffer.prototype.normalizeIndex_ = function(index) {
  if(index >= this.buff_.length) {
    throw Error("Out of bounds exception");
  }
  if(this.buff_.length < this.maxSize_) {
    return index
  }
  return(this.nextPtr_ + Number(index)) % this.maxSize_
};
goog.provide("goog.net.BrowserChannel");
goog.provide("goog.net.BrowserChannel.Error");
goog.provide("goog.net.BrowserChannel.Event");
goog.provide("goog.net.BrowserChannel.Handler");
goog.provide("goog.net.BrowserChannel.LogSaver");
goog.provide("goog.net.BrowserChannel.QueuedMap");
goog.provide("goog.net.BrowserChannel.Stat");
goog.provide("goog.net.BrowserChannel.StatEvent");
goog.provide("goog.net.BrowserChannel.State");
goog.provide("goog.net.BrowserChannel.TimingEvent");
goog.require("goog.Uri");
goog.require("goog.array");
goog.require("goog.debug.Logger");
goog.require("goog.debug.TextFormatter");
goog.require("goog.events.Event");
goog.require("goog.events.EventTarget");
goog.require("goog.json");
goog.require("goog.net.BrowserTestChannel");
goog.require("goog.net.ChannelDebug");
goog.require("goog.net.ChannelRequest");
goog.require("goog.net.ChannelRequest.Error");
goog.require("goog.net.XhrIo");
goog.require("goog.net.tmpnetwork");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.CircularBuffer");
goog.require("goog.userAgent");
goog.net.BrowserChannel = function(clientVersion) {
  this.clientVersion_ = clientVersion;
  this.state_ = goog.net.BrowserChannel.State.INIT;
  this.outgoingMaps_ = [];
  this.pendingMaps_ = [];
  this.channelDebug_ = new goog.net.ChannelDebug
};
goog.net.BrowserChannel.QueuedMap = function(mapId, map) {
  this.mapId = mapId;
  this.map = map
};
goog.net.BrowserChannel.prototype.extraHeaders_ = null;
goog.net.BrowserChannel.prototype.extraParams_ = null;
goog.net.BrowserChannel.prototype.forwardChannelRequest_ = null;
goog.net.BrowserChannel.prototype.backChannelRequest_ = null;
goog.net.BrowserChannel.prototype.path_ = null;
goog.net.BrowserChannel.prototype.forwardChannelUri_ = null;
goog.net.BrowserChannel.prototype.backChannelUri_ = null;
goog.net.BrowserChannel.prototype.hostPrefix_ = null;
goog.net.BrowserChannel.prototype.allowHostPrefix_ = true;
goog.net.BrowserChannel.prototype.nextRid_ = 0;
goog.net.BrowserChannel.prototype.nextMapId_ = 0;
goog.net.BrowserChannel.prototype.failFast_ = false;
goog.net.BrowserChannel.prototype.handler_ = null;
goog.net.BrowserChannel.prototype.forwardChannelTimerId_ = null;
goog.net.BrowserChannel.prototype.backChannelTimerId_ = null;
goog.net.BrowserChannel.prototype.deadBackChannelTimerId_ = null;
goog.net.BrowserChannel.prototype.connectionTest_ = null;
goog.net.BrowserChannel.prototype.useChunked_ = null;
goog.net.BrowserChannel.prototype.allowChunkedMode_ = true;
goog.net.BrowserChannel.prototype.lastArrayId_ = -1;
goog.net.BrowserChannel.prototype.lastPostResponseArrayId_ = -1;
goog.net.BrowserChannel.prototype.lastStatusCode_ = -1;
goog.net.BrowserChannel.prototype.forwardChannelRetryCount_ = 0;
goog.net.BrowserChannel.prototype.backChannelRetryCount_ = 0;
goog.net.BrowserChannel.prototype.backChannelAttemptId_;
goog.net.BrowserChannel.LATEST_CHANNEL_VERSION = 8;
goog.net.BrowserChannel.prototype.channelVersion_ = goog.net.BrowserChannel.LATEST_CHANNEL_VERSION;
goog.net.BrowserChannel.State = {CLOSED:0, INIT:1, OPENING:2, OPENED:3};
goog.net.BrowserChannel.FORWARD_CHANNEL_MAX_RETRIES = 2;
goog.net.BrowserChannel.FORWARD_CHANNEL_RETRY_TIMEOUT = 20 * 1E3;
goog.net.BrowserChannel.BACK_CHANNEL_MAX_RETRIES = 3;
goog.net.BrowserChannel.RETRY_DELAY_MS = 5 * 1E3;
goog.net.BrowserChannel.RETRY_DELAY_SEED = 10 * 1E3;
goog.net.BrowserChannel.RTT_ESTIMATE = 3 * 1E3;
goog.net.BrowserChannel.INACTIVE_CHANNEL_RETRY_FACTOR = 2;
goog.net.BrowserChannel.Error = {OK:0, REQUEST_FAILED:2, LOGGED_OUT:4, NO_DATA:5, UNKNOWN_SESSION_ID:6, STOP:7, NETWORK:8, BLOCKED:9, BAD_DATA:10, BAD_RESPONSE:11};
goog.net.BrowserChannel.ChannelType_ = {FORWARD_CHANNEL:1, BACK_CHANNEL:2};
goog.net.BrowserChannel.MAX_MAPS_PER_REQUEST_ = 1E3;
goog.net.BrowserChannel.statEventTarget_ = new goog.events.EventTarget;
goog.net.BrowserChannel.Event = {};
goog.net.BrowserChannel.Event.STAT_EVENT = "statevent";
goog.net.BrowserChannel.StatEvent = function(eventTarget, stat) {
  goog.events.Event.call(this, goog.net.BrowserChannel.Event.STAT_EVENT, eventTarget);
  this.stat = stat
};
goog.inherits(goog.net.BrowserChannel.StatEvent, goog.events.Event);
goog.net.BrowserChannel.Event.TIMING_EVENT = "timingevent";
goog.net.BrowserChannel.TimingEvent = function(target, size, rtt, retries) {
  goog.events.Event.call(this, goog.net.BrowserChannel.Event.TIMING_EVENT, target);
  this.size = size;
  this.rtt = rtt;
  this.retries = retries
};
goog.inherits(goog.net.BrowserChannel.TimingEvent, goog.events.Event);
goog.net.BrowserChannel.Stat = {CONNECT_ATTEMPT:0, ERROR_NETWORK:1, ERROR_OTHER:2, TEST_STAGE_ONE_START:3, CHANNEL_BLOCKED:4, TEST_STAGE_TWO_START:5, TEST_STAGE_TWO_DATA_ONE:6, TEST_STAGE_TWO_DATA_TWO:7, TEST_STAGE_TWO_DATA_BOTH:8, TEST_STAGE_ONE_FAILED:9, TEST_STAGE_TWO_FAILED:10, PROXY:11, NOPROXY:12, REQUEST_UNKNOWN_SESSION_ID:13, REQUEST_BAD_STATUS:14, REQUEST_INCOMPLETE_DATA:15, REQUEST_BAD_DATA:16, REQUEST_NO_DATA:17, REQUEST_TIMEOUT:18, BACKCHANNEL_MISSING:19, BACKCHANNEL_DEAD:20};
goog.net.BrowserChannel.MAGIC_RESPONSE_COOKIE = "y2f%";
goog.net.BrowserChannel.OUTSTANDING_DATA_BACKCHANNEL_RETRY_CUTOFF = 37500;
goog.net.BrowserChannel.prototype.getChannelDebug = function() {
  return this.channelDebug_
};
goog.net.BrowserChannel.prototype.setChannelDebug = function(channelDebug) {
  this.channelDebug_ = channelDebug
};
goog.net.BrowserChannel.setStartThreadExecutionHook = function(startHook) {
  goog.net.BrowserChannel.startExecutionHook_ = startHook
};
goog.net.BrowserChannel.setEndThreadExecutionHook = function(endHook) {
  goog.net.BrowserChannel.endExecutionHook_ = endHook
};
goog.net.BrowserChannel.startExecutionHook_ = function() {
};
goog.net.BrowserChannel.endExecutionHook_ = function() {
};
goog.net.BrowserChannel.createChannelRequest = function(channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId) {
  return new goog.net.ChannelRequest(channel, channelDebug, opt_sessionId, opt_requestId, opt_retryId)
};
goog.net.BrowserChannel.prototype.connect = function(testPath, channelPath, extraParams, opt_oldSessionId, opt_oldArrayId) {
  this.channelDebug_.debug("connect()");
  goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.CONNECT_ATTEMPT);
  this.path_ = channelPath;
  this.extraParams_ = extraParams || {};
  if(opt_oldSessionId && goog.isDef(opt_oldArrayId)) {
    this.extraParams_["OSID"] = opt_oldSessionId;
    this.extraParams_["OAID"] = opt_oldArrayId
  }
  this.connectTest_(testPath)
};
goog.net.BrowserChannel.prototype.disconnect = function() {
  this.channelDebug_.debug("disconnect()");
  this.cancelRequests_();
  if(this.state_ == goog.net.BrowserChannel.State.OPENED) {
    var rid = this.nextRid_++;
    var uri = this.forwardChannelUri_.clone();
    uri.setParameterValue("SID", this.sid_);
    uri.setParameterValue("RID", rid);
    uri.setParameterValue("TYPE", "terminate");
    this.addAdditionalParams_(uri);
    var request = goog.net.BrowserChannel.createChannelRequest(this, this.channelDebug_, this.sid_, rid);
    request.sendUsingImgTag(uri);
    this.onClose_()
  }
};
goog.net.BrowserChannel.prototype.getSessionId = function() {
  return this.sid_
};
goog.net.BrowserChannel.prototype.connectTest_ = function(testPath) {
  this.channelDebug_.debug("connectTest_()");
  if(!this.okToMakeRequest_()) {
    return
  }
  this.connectionTest_ = new goog.net.BrowserTestChannel(this, this.channelDebug_);
  this.connectionTest_.setExtraHeaders(this.extraHeaders_);
  this.connectionTest_.connect(testPath)
};
goog.net.BrowserChannel.prototype.connectChannel_ = function() {
  this.channelDebug_.debug("connectChannel_()");
  this.ensureInState_(goog.net.BrowserChannel.State.INIT, goog.net.BrowserChannel.State.CLOSED);
  this.forwardChannelUri_ = this.getForwardChannelUri(this.path_);
  this.ensureForwardChannel_()
};
goog.net.BrowserChannel.prototype.cancelRequests_ = function() {
  if(this.connectionTest_) {
    this.connectionTest_.abort();
    this.connectionTest_ = null
  }
  if(this.backChannelRequest_) {
    this.backChannelRequest_.cancel();
    this.backChannelRequest_ = null
  }
  if(this.backChannelTimerId_) {
    goog.global.clearTimeout(this.backChannelTimerId_);
    this.backChannelTimerId_ = null
  }
  this.clearDeadBackchannelTimer_();
  if(this.forwardChannelRequest_) {
    this.forwardChannelRequest_.cancel();
    this.forwardChannelRequest_ = null
  }
  if(this.forwardChannelTimerId_) {
    goog.global.clearTimeout(this.forwardChannelTimerId_);
    this.forwardChannelTimerId_ = null
  }
};
goog.net.BrowserChannel.prototype.getExtraHeaders = function() {
  return this.extraHeaders_
};
goog.net.BrowserChannel.prototype.setExtraHeaders = function(extraHeaders) {
  this.extraHeaders_ = extraHeaders
};
goog.net.BrowserChannel.prototype.getHandler = function() {
  return this.handler_
};
goog.net.BrowserChannel.prototype.setHandler = function(handler) {
  this.handler_ = handler
};
goog.net.BrowserChannel.prototype.getAllowHostPrefix = function() {
  return this.allowHostPrefix_
};
goog.net.BrowserChannel.prototype.setAllowHostPrefix = function(allowHostPrefix) {
  this.allowHostPrefix_ = allowHostPrefix
};
goog.net.BrowserChannel.prototype.isBuffered = function() {
  return!this.useChunked_
};
goog.net.BrowserChannel.prototype.getAllowChunkedMode = function() {
  return this.allowChunkedMode_
};
goog.net.BrowserChannel.prototype.setAllowChunkedMode = function(allowChunkedMode) {
  this.allowChunkedMode_ = allowChunkedMode
};
goog.net.BrowserChannel.prototype.sendMap = function(map) {
  if(this.state_ == goog.net.BrowserChannel.State.CLOSED) {
    throw Error("Invalid operation: sending map when state is closed");
  }
  if(this.outgoingMaps_.length == goog.net.BrowserChannel.MAX_MAPS_PER_REQUEST_) {
    this.channelDebug_.severe("Already have " + goog.net.BrowserChannel.MAX_MAPS_PER_REQUEST_ + " queued maps upon queueing " + goog.json.serialize(map))
  }
  this.outgoingMaps_.push(new goog.net.BrowserChannel.QueuedMap(this.nextMapId_++, map));
  if(this.state_ == goog.net.BrowserChannel.State.OPENING || this.state_ == goog.net.BrowserChannel.State.OPENED) {
    this.ensureForwardChannel_()
  }
};
goog.net.BrowserChannel.prototype.setFailFast = function(failFast) {
  this.failFast_ = failFast;
  this.channelDebug_.info("setFailFast: " + failFast);
  if((this.forwardChannelRequest_ || this.forwardChannelTimerId_) && this.forwardChannelRetryCount_ > this.getForwardChannelMaxRetries()) {
    this.channelDebug_.info("Retry count " + this.forwardChannelRetryCount_ + " > new maxRetries " + this.getForwardChannelMaxRetries() + ". Fail immediately!");
    if(this.forwardChannelRequest_) {
      this.forwardChannelRequest_.cancel();
      this.onRequestComplete(this.forwardChannelRequest_)
    }else {
      goog.global.clearTimeout(this.forwardChannelTimerId_);
      this.forwardChannelTimerId_ = null;
      this.signalError_(goog.net.BrowserChannel.Error.REQUEST_FAILED)
    }
  }
};
goog.net.BrowserChannel.prototype.getForwardChannelMaxRetries = function() {
  return this.failFast_ ? 0 : goog.net.BrowserChannel.FORWARD_CHANNEL_MAX_RETRIES
};
goog.net.BrowserChannel.prototype.getBackChannelMaxRetries = function() {
  return goog.net.BrowserChannel.BACK_CHANNEL_MAX_RETRIES
};
goog.net.BrowserChannel.prototype.isClosed = function() {
  return this.state_ == goog.net.BrowserChannel.State.CLOSED
};
goog.net.BrowserChannel.prototype.getState = function() {
  return this.state_
};
goog.net.BrowserChannel.prototype.getLastStatusCode = function() {
  return this.lastStatusCode_
};
goog.net.BrowserChannel.prototype.getLastArrayId = function() {
  return this.lastArrayId_
};
goog.net.BrowserChannel.prototype.hasOutstandingRequests = function() {
  return this.outstandingRequests_() != 0
};
goog.net.BrowserChannel.prototype.outstandingRequests_ = function() {
  var count = 0;
  if(this.backChannelRequest_) {
    count++
  }
  if(this.forwardChannelRequest_) {
    count++
  }
  return count
};
goog.net.BrowserChannel.prototype.ensureForwardChannel_ = function() {
  if(this.forwardChannelRequest_) {
    return
  }
  if(this.forwardChannelTimerId_) {
    return
  }
  this.forwardChannelTimerId_ = goog.net.BrowserChannel.setTimeout(goog.bind(this.onStartForwardChannelTimer_, this), 0);
  this.forwardChannelRetryCount_ = 0
};
goog.net.BrowserChannel.prototype.maybeRetryForwardChannel_ = function(request) {
  if(this.forwardChannelRequest_ || this.forwardChannelTimerId_) {
    this.channelDebug_.severe("Request already in progress");
    return false
  }
  if(this.state_ == goog.net.BrowserChannel.State.INIT || this.forwardChannelRetryCount_ >= this.getForwardChannelMaxRetries()) {
    return false
  }
  this.channelDebug_.debug("Going to retry POST");
  this.forwardChannelTimerId_ = goog.net.BrowserChannel.setTimeout(goog.bind(this.onStartForwardChannelTimer_, this, request), this.getRetryTime_(this.forwardChannelRetryCount_));
  this.forwardChannelRetryCount_++;
  return true
};
goog.net.BrowserChannel.prototype.onStartForwardChannelTimer_ = function(opt_retryRequest) {
  this.forwardChannelTimerId_ = null;
  this.startForwardChannel_(opt_retryRequest)
};
goog.net.BrowserChannel.prototype.startForwardChannel_ = function(opt_retryRequest) {
  this.channelDebug_.debug("startForwardChannel_");
  if(!this.okToMakeRequest_()) {
    return
  }else {
    if(this.state_ == goog.net.BrowserChannel.State.INIT) {
      if(opt_retryRequest) {
        this.channelDebug_.severe("Not supposed to retry the open");
        return
      }
      this.open_();
      this.state_ = goog.net.BrowserChannel.State.OPENING
    }else {
      if(this.state_ == goog.net.BrowserChannel.State.OPENED) {
        if(opt_retryRequest) {
          this.makeForwardChannelRequest_(opt_retryRequest);
          return
        }
        if(this.outgoingMaps_.length == 0) {
          this.channelDebug_.debug("startForwardChannel_ returned: " + "nothing to send");
          return
        }
        if(this.forwardChannelRequest_) {
          this.channelDebug_.severe("startForwardChannel_ returned: " + "connection already in progress");
          return
        }
        this.makeForwardChannelRequest_();
        this.channelDebug_.debug("startForwardChannel_ finished, sent request")
      }
    }
  }
};
goog.net.BrowserChannel.prototype.open_ = function() {
  this.channelDebug_.debug("open_()");
  this.nextRid_ = Math.floor(Math.random() * 1E5);
  var rid = this.nextRid_++;
  var request = goog.net.BrowserChannel.createChannelRequest(this, this.channelDebug_, "", rid);
  request.setExtraHeaders(this.extraHeaders_);
  var requestText = this.dequeueOutgoingMaps_();
  var uri = this.forwardChannelUri_.clone();
  uri.setParameterValue("RID", rid);
  if(this.clientVersion_) {
    uri.setParameterValue("CVER", this.clientVersion_)
  }
  this.addAdditionalParams_(uri);
  request.xmlHttpPost(uri, requestText, true);
  this.forwardChannelRequest_ = request
};
goog.net.BrowserChannel.prototype.makeForwardChannelRequest_ = function(opt_retryRequest) {
  var rid;
  var requestText;
  if(opt_retryRequest) {
    if(this.channelVersion_ > 6) {
      this.requeuePendingMaps_();
      rid = this.nextRid_ - 1;
      requestText = this.dequeueOutgoingMaps_()
    }else {
      rid = opt_retryRequest.getRequestId();
      requestText = opt_retryRequest.getPostData()
    }
  }else {
    rid = this.nextRid_++;
    requestText = this.dequeueOutgoingMaps_()
  }
  var uri = this.forwardChannelUri_.clone();
  uri.setParameterValue("SID", this.sid_);
  uri.setParameterValue("RID", rid);
  uri.setParameterValue("AID", this.lastArrayId_);
  this.addAdditionalParams_(uri);
  var request = goog.net.BrowserChannel.createChannelRequest(this, this.channelDebug_, this.sid_, rid, this.forwardChannelRetryCount_ + 1);
  request.setExtraHeaders(this.extraHeaders_);
  request.setTimeout(Math.round(goog.net.BrowserChannel.FORWARD_CHANNEL_RETRY_TIMEOUT * 0.5) + Math.round(goog.net.BrowserChannel.FORWARD_CHANNEL_RETRY_TIMEOUT * 0.5 * Math.random()));
  this.forwardChannelRequest_ = request;
  request.xmlHttpPost(uri, requestText, true)
};
goog.net.BrowserChannel.prototype.addAdditionalParams_ = function(uri) {
  if(this.handler_) {
    var params = this.handler_.getAdditionalParams(this);
    if(params) {
      goog.structs.forEach(params, function(value, key, coll) {
        uri.setParameterValue(key, value)
      })
    }
  }
};
goog.net.BrowserChannel.prototype.dequeueOutgoingMaps_ = function() {
  var count = Math.min(this.outgoingMaps_.length, goog.net.BrowserChannel.MAX_MAPS_PER_REQUEST_);
  var sb = ["count=" + count];
  var offset;
  if(this.channelVersion_ > 6 && count > 0) {
    offset = this.outgoingMaps_[0].mapId;
    sb.push("ofs=" + offset)
  }else {
    offset = 0
  }
  for(var i = 0;i < count;i++) {
    var mapId = this.outgoingMaps_[i].mapId;
    var map = this.outgoingMaps_[i].map;
    if(this.channelVersion_ <= 6) {
      mapId = i
    }else {
      mapId -= offset
    }
    try {
      goog.structs.forEach(map, function(value, key, coll) {
        sb.push("req" + mapId + "_" + key + "=" + encodeURIComponent(value))
      })
    }catch(ex) {
      sb.push("req" + mapId + "_" + "type" + "=" + encodeURIComponent("_badmap"));
      if(this.handler_) {
        this.handler_.badMapError(this, map)
      }
    }
  }
  this.pendingMaps_ = this.pendingMaps_.concat(this.outgoingMaps_.splice(0, count));
  return sb.join("&")
};
goog.net.BrowserChannel.prototype.requeuePendingMaps_ = function() {
  this.outgoingMaps_ = this.pendingMaps_.concat(this.outgoingMaps_);
  this.pendingMaps_.length = 0
};
goog.net.BrowserChannel.prototype.ensureBackChannel_ = function() {
  if(this.backChannelRequest_) {
    return
  }
  if(this.backChannelTimerId_) {
    return
  }
  this.backChannelAttemptId_ = 1;
  this.backChannelTimerId_ = goog.net.BrowserChannel.setTimeout(goog.bind(this.onStartBackChannelTimer_, this), 0);
  this.backChannelRetryCount_ = 0
};
goog.net.BrowserChannel.prototype.maybeRetryBackChannel_ = function() {
  if(this.backChannelRequest_ || this.backChannelTimerId_) {
    this.channelDebug_.severe("Request already in progress");
    return false
  }
  if(this.backChannelRetryCount_ >= this.getBackChannelMaxRetries()) {
    return false
  }
  this.channelDebug_.debug("Going to retry GET");
  this.backChannelAttemptId_++;
  this.backChannelTimerId_ = goog.net.BrowserChannel.setTimeout(goog.bind(this.onStartBackChannelTimer_, this), this.getRetryTime_(this.backChannelRetryCount_));
  this.backChannelRetryCount_++;
  return true
};
goog.net.BrowserChannel.prototype.onStartBackChannelTimer_ = function() {
  this.backChannelTimerId_ = null;
  this.startBackChannel_()
};
goog.net.BrowserChannel.prototype.startBackChannel_ = function() {
  if(!this.okToMakeRequest_()) {
    return
  }
  this.channelDebug_.debug("Creating new HttpRequest");
  this.backChannelRequest_ = goog.net.BrowserChannel.createChannelRequest(this, this.channelDebug_, this.sid_, "rpc", this.backChannelAttemptId_);
  this.backChannelRequest_.setExtraHeaders(this.extraHeaders_);
  var uri = this.backChannelUri_.clone();
  uri.setParameterValue("RID", "rpc");
  uri.setParameterValue("SID", this.sid_);
  uri.setParameterValue("CI", this.useChunked_ ? "0" : "1");
  uri.setParameterValue("AID", this.lastArrayId_);
  this.addAdditionalParams_(uri);
  if(goog.userAgent.IE) {
    uri.setParameterValue("TYPE", "html");
    this.backChannelRequest_.tridentGet(uri, Boolean(this.hostPrefix_))
  }else {
    uri.setParameterValue("TYPE", "xmlhttp");
    this.backChannelRequest_.xmlHttpGet(uri, true, this.hostPrefix_, false)
  }
  this.channelDebug_.debug("New Request created")
};
goog.net.BrowserChannel.prototype.okToMakeRequest_ = function() {
  if(this.handler_) {
    var result = this.handler_.okToMakeRequest(this);
    if(result != goog.net.BrowserChannel.Error.OK) {
      this.channelDebug_.debug("Handler returned error code from " + "okToMakeRequest");
      this.signalError_(result);
      return false
    }
  }
  return true
};
goog.net.BrowserChannel.prototype.testConnectionFinished = function(testChannel, useChunked) {
  this.channelDebug_.debug("Test Connection Finished");
  this.useChunked_ = this.allowChunkedMode_ && useChunked;
  this.lastStatusCode_ = testChannel.getLastStatusCode();
  this.connectChannel_()
};
goog.net.BrowserChannel.prototype.testConnectionFailure = function(testChannel, errorCode) {
  this.channelDebug_.debug("Test Connection Failed");
  this.lastStatusCode_ = testChannel.getLastStatusCode();
  this.signalError_(goog.net.BrowserChannel.Error.REQUEST_FAILED)
};
goog.net.BrowserChannel.prototype.testConnectionBlocked = function(testChannel) {
  this.channelDebug_.debug("Test Connection Blocked");
  this.lastStatusCode_ = this.connectionTest_.getLastStatusCode();
  this.signalError_(goog.net.BrowserChannel.Error.BLOCKED)
};
goog.net.BrowserChannel.prototype.onRequestData = function(request, responseText) {
  if(this.state_ == goog.net.BrowserChannel.State.CLOSED || this.backChannelRequest_ != request && this.forwardChannelRequest_ != request) {
    return
  }
  this.lastStatusCode_ = request.getLastStatusCode();
  if(this.forwardChannelRequest_ == request && this.state_ == goog.net.BrowserChannel.State.OPENED) {
    if(this.channelVersion_ > 7) {
      var response;
      try {
        response = goog.json.unsafeParse(responseText)
      }catch(ex) {
        response = null
      }
      if(goog.isArray(response) && response.length == 3) {
        this.handlePostResponse_(response)
      }else {
        this.channelDebug_.debug("Bad POST response data returned");
        this.signalError_(goog.net.BrowserChannel.Error.BAD_RESPONSE)
      }
    }else {
      if(responseText != goog.net.BrowserChannel.MAGIC_RESPONSE_COOKIE) {
        this.channelDebug_.debug("Bad data returned - missing/invald " + "magic cookie");
        this.signalError_(goog.net.BrowserChannel.Error.BAD_RESPONSE)
      }
    }
  }else {
    if(this.backChannelRequest_ == request) {
      this.clearDeadBackchannelTimer_()
    }
    if(!goog.string.isEmpty(responseText)) {
      this.onInput_(goog.json.unsafeParse(responseText))
    }
  }
};
goog.net.BrowserChannel.prototype.handlePostResponse_ = function(responseValues) {
  if(responseValues[0] == 0) {
    this.handleBackchannelMissing_();
    return
  }
  this.lastPostResponseArrayId_ = responseValues[1];
  var outstandingArrays = this.lastPostResponseArrayId_ - this.lastArrayId_;
  if(0 < outstandingArrays) {
    var numOutstandingBackchannelBytes = responseValues[2];
    this.channelDebug_.debug(numOutstandingBackchannelBytes + " bytes (in " + outstandingArrays + " arrays) are outstanding on the BackChannel");
    if(!this.shouldRetryBackChannel_(numOutstandingBackchannelBytes)) {
      return
    }
    if(!this.deadBackChannelTimerId_) {
      this.deadBackChannelTimerId_ = goog.net.BrowserChannel.setTimeout(goog.bind(this.onBackChannelDead_, this), 2 * goog.net.BrowserChannel.RTT_ESTIMATE)
    }
  }
};
goog.net.BrowserChannel.prototype.handleBackchannelMissing_ = function() {
  this.channelDebug_.debug("Server claims our backchannel is missing.");
  if(this.backChannelTimerId_) {
    this.channelDebug_.debug("But we are currently starting the request.");
    return
  }else {
    if(!this.backChannelRequest_) {
      this.channelDebug_.warning("We do not have a BackChannel established")
    }else {
      if(this.backChannelRequest_.getRequestStartTime() + goog.net.BrowserChannel.RTT_ESTIMATE < this.forwardChannelRequest_.getRequestStartTime()) {
        this.clearDeadBackchannelTimer_();
        this.backChannelRequest_.cancel();
        this.backChannelRequest_ = null
      }else {
        return
      }
    }
  }
  this.maybeRetryBackChannel_();
  goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.BACKCHANNEL_MISSING)
};
goog.net.BrowserChannel.prototype.shouldRetryBackChannel_ = function(outstandingBytes) {
  return outstandingBytes < goog.net.BrowserChannel.OUTSTANDING_DATA_BACKCHANNEL_RETRY_CUTOFF && !this.isBuffered() && this.backChannelRetryCount_ == 0
};
goog.net.BrowserChannel.prototype.correctHostPrefix = function(serverHostPrefix) {
  if(this.allowHostPrefix_) {
    if(this.handler_) {
      return this.handler_.correctHostPrefix(serverHostPrefix)
    }
    return serverHostPrefix
  }
  return null
};
goog.net.BrowserChannel.prototype.onBackChannelDead_ = function() {
  if(goog.isDefAndNotNull(this.deadBackChannelTimerId_)) {
    this.deadBackChannelTimerId_ = null;
    this.backChannelRequest_.cancel();
    this.backChannelRequest_ = null;
    this.maybeRetryBackChannel_();
    goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.BACKCHANNEL_DEAD)
  }
};
goog.net.BrowserChannel.prototype.clearDeadBackchannelTimer_ = function() {
  if(goog.isDefAndNotNull(this.deadBackChannelTimerId_)) {
    goog.global.clearTimeout(this.deadBackChannelTimerId_);
    this.deadBackChannelTimerId_ = null
  }
};
goog.net.BrowserChannel.isFatalError_ = function(error, statusCode) {
  return error == goog.net.ChannelRequest.Error.UNKNOWN_SESSION_ID || error == goog.net.ChannelRequest.Error.STATUS && statusCode > 0
};
goog.net.BrowserChannel.prototype.onRequestComplete = function(request) {
  this.channelDebug_.debug("Request complete");
  var type;
  if(this.backChannelRequest_ == request) {
    this.clearDeadBackchannelTimer_();
    this.backChannelRequest_ = null;
    type = goog.net.BrowserChannel.ChannelType_.BACK_CHANNEL
  }else {
    if(this.forwardChannelRequest_ == request) {
      this.forwardChannelRequest_ = null;
      type = goog.net.BrowserChannel.ChannelType_.FORWARD_CHANNEL
    }else {
      return
    }
  }
  this.lastStatusCode_ = request.getLastStatusCode();
  if(this.state_ == goog.net.BrowserChannel.State.CLOSED) {
    return
  }
  if(request.getSuccess()) {
    if(type == goog.net.BrowserChannel.ChannelType_.FORWARD_CHANNEL) {
      var size = request.getPostData() ? request.getPostData().length : 0;
      goog.net.BrowserChannel.notifyTimingEvent(size, goog.now() - request.getRequestStartTime(), this.forwardChannelRetryCount_);
      this.ensureForwardChannel_();
      this.pendingMaps_.length = 0
    }else {
      this.ensureBackChannel_()
    }
    return
  }
  var lastError = request.getLastError();
  if(!goog.net.BrowserChannel.isFatalError_(lastError, this.lastStatusCode_)) {
    this.channelDebug_.debug("Maybe retrying, last error: " + goog.net.ChannelRequest.errorStringFromCode(lastError, this.lastStatusCode_));
    if(type == goog.net.BrowserChannel.ChannelType_.FORWARD_CHANNEL) {
      if(this.maybeRetryForwardChannel_(request)) {
        return
      }
    }
    if(type == goog.net.BrowserChannel.ChannelType_.BACK_CHANNEL) {
      if(this.maybeRetryBackChannel_()) {
        return
      }
    }
    this.channelDebug_.debug("Exceeded max number of retries")
  }else {
    this.channelDebug_.debug("Not retrying due to error type")
  }
  this.channelDebug_.debug("Error: HTTP request failed");
  switch(lastError) {
    case goog.net.ChannelRequest.Error.NO_DATA:
      this.signalError_(goog.net.BrowserChannel.Error.NO_DATA);
      break;
    case goog.net.ChannelRequest.Error.BAD_DATA:
      this.signalError_(goog.net.BrowserChannel.Error.BAD_DATA);
      break;
    case goog.net.ChannelRequest.Error.UNKNOWN_SESSION_ID:
      this.signalError_(goog.net.BrowserChannel.Error.UNKNOWN_SESSION_ID);
      break;
    default:
      this.signalError_(goog.net.BrowserChannel.Error.REQUEST_FAILED);
      break
  }
};
goog.net.BrowserChannel.prototype.getRetryTime_ = function(retryCount) {
  var retryTime = goog.net.BrowserChannel.RETRY_DELAY_MS + Math.floor(Math.random() * goog.net.BrowserChannel.RETRY_DELAY_SEED);
  if(!this.isActive()) {
    this.channelDebug_.debug("Inactive channel");
    retryTime = retryTime * goog.net.BrowserChannel.INACTIVE_CHANNEL_RETRY_FACTOR
  }
  retryTime = retryTime * retryCount;
  return retryTime
};
goog.net.BrowserChannel.prototype.onInput_ = function(respArray) {
  var batch = this.handler_ && this.handler_.channelHandleMultipleArrays ? [] : null;
  for(var i = 0;i < respArray.length;i++) {
    var nextArray = respArray[i];
    this.lastArrayId_ = nextArray[0];
    nextArray = nextArray[1];
    if(this.state_ == goog.net.BrowserChannel.State.OPENING) {
      if(nextArray[0] == "c") {
        this.sid_ = nextArray[1];
        this.hostPrefix_ = this.correctHostPrefix(nextArray[2]);
        var negotiatedVersion = nextArray[3];
        if(goog.isDefAndNotNull(negotiatedVersion)) {
          this.channelVersion_ = negotiatedVersion
        }else {
          this.channelVersion_ = 6
        }
        this.state_ = goog.net.BrowserChannel.State.OPENED;
        if(this.handler_) {
          this.handler_.channelOpened(this)
        }
        this.backChannelUri_ = this.getBackChannelUri(this.hostPrefix_, this.path_);
        this.ensureBackChannel_()
      }else {
        if(nextArray[0] == "stop") {
          this.signalError_(goog.net.BrowserChannel.Error.STOP)
        }
      }
    }else {
      if(this.state_ == goog.net.BrowserChannel.State.OPENED) {
        if(nextArray[0] == "stop") {
          if(batch && batch.length) {
            this.handler_.channelHandleMultipleArrays(this, batch);
            batch.length = 0
          }
          this.signalError_(goog.net.BrowserChannel.Error.STOP)
        }else {
          if(nextArray[0] == "noop") {
          }else {
            if(batch) {
              batch.push(nextArray)
            }else {
              if(this.handler_) {
                this.handler_.channelHandleArray(this, nextArray)
              }
            }
          }
        }
        this.backChannelRetryCount_ = 0
      }
    }
  }
  if(batch && batch.length) {
    this.handler_.channelHandleMultipleArrays(this, batch)
  }
};
goog.net.BrowserChannel.prototype.ensureInState_ = function(var_args) {
  if(!goog.array.contains(arguments, this.state_)) {
    throw Error("Unexpected channel state: " + this.state_);
  }
};
goog.net.BrowserChannel.prototype.signalError_ = function(error) {
  this.channelDebug_.info("Error code " + error);
  if(error == goog.net.BrowserChannel.Error.REQUEST_FAILED || error == goog.net.BrowserChannel.Error.BLOCKED) {
    var imageUri = null;
    if(this.handler_) {
      imageUri = this.handler_.getNetworkTestImageUri(this)
    }
    goog.net.tmpnetwork.testGoogleCom(goog.bind(this.testGoogleComCallback_, this), imageUri)
  }else {
    goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.ERROR_OTHER)
  }
  this.onError_(error)
};
goog.net.BrowserChannel.prototype.testGoogleComCallback_ = function(networkUp) {
  if(networkUp) {
    this.channelDebug_.info("Successfully pinged google.com");
    goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.ERROR_OTHER)
  }else {
    this.channelDebug_.info("Failed to ping google.com");
    goog.net.BrowserChannel.notifyStatEvent(goog.net.BrowserChannel.Stat.ERROR_NETWORK);
    this.onError_(goog.net.BrowserChannel.Error.NETWORK)
  }
};
goog.net.BrowserChannel.prototype.onError_ = function(error) {
  this.channelDebug_.debug("HttpChannel: error - " + error);
  this.state_ = goog.net.BrowserChannel.State.CLOSED;
  if(this.handler_) {
    this.handler_.channelError(this, error)
  }
  this.onClose_();
  this.cancelRequests_()
};
goog.net.BrowserChannel.prototype.onClose_ = function() {
  this.state_ = goog.net.BrowserChannel.State.CLOSED;
  this.lastStatusCode_ = -1;
  if(this.handler_) {
    if(this.pendingMaps_.length == 0 && this.outgoingMaps_.length == 0) {
      this.handler_.channelClosed(this)
    }else {
      this.channelDebug_.debug("Number of undelivered maps" + ", pending: " + this.pendingMaps_.length + ", outgoing: " + this.outgoingMaps_.length);
      var copyOfPendingMaps = goog.array.clone(this.pendingMaps_);
      var copyOfUndeliveredMaps = goog.array.clone(this.outgoingMaps_);
      this.pendingMaps_.length = 0;
      this.outgoingMaps_.length = 0;
      this.handler_.channelClosed(this, copyOfPendingMaps, copyOfUndeliveredMaps)
    }
  }
};
goog.net.BrowserChannel.prototype.getForwardChannelUri = function(path) {
  var uri = this.createDataUri(null, path);
  this.channelDebug_.debug("GetForwardChannelUri: " + uri);
  return uri
};
goog.net.BrowserChannel.prototype.getBackChannelUri = function(hostPrefix, path) {
  var uri = this.createDataUri(this.shouldUseSecondaryDomains() ? hostPrefix : null, path);
  this.channelDebug_.debug("GetBackChannelUri: " + uri);
  return uri
};
goog.net.BrowserChannel.prototype.createDataUri = function(hostPrefix, path, opt_overridePort) {
  var uri = goog.Uri.parse(path);
  var uriAbsolute = uri.getDomain() != "";
  if(uriAbsolute) {
    if(hostPrefix) {
      uri.setDomain(hostPrefix + "." + uri.getDomain())
    }
    uri.setPort(opt_overridePort || uri.getPort())
  }else {
    var locationPage = window.location;
    var hostName;
    if(hostPrefix) {
      hostName = hostPrefix + "." + locationPage.hostname
    }else {
      hostName = locationPage.hostname
    }
    var port = opt_overridePort || locationPage.port;
    uri = goog.Uri.create(locationPage.protocol, null, hostName, port, path)
  }
  if(this.extraParams_) {
    goog.structs.forEach(this.extraParams_, function(value, key, coll) {
      uri.setParameterValue(key, value)
    })
  }
  uri.setParameterValue("VER", this.channelVersion_);
  this.addAdditionalParams_(uri);
  return uri
};
goog.net.BrowserChannel.prototype.createXhrIo = function(hostPrefix) {
  if(hostPrefix) {
    throw new Error("Can't create secondary domain capable XhrIo object.");
  }else {
    return new goog.net.XhrIo
  }
};
goog.net.BrowserChannel.prototype.isActive = function() {
  return!!this.handler_ && this.handler_.isActive(this)
};
goog.net.BrowserChannel.setTimeout = function(fn, ms) {
  if(!goog.isFunction(fn)) {
    throw Error("Fn must not be null and must be a function");
  }
  return goog.global.setTimeout(function() {
    goog.net.BrowserChannel.onStartExecution();
    try {
      fn()
    }finally {
      goog.net.BrowserChannel.onEndExecution()
    }
  }, ms)
};
goog.net.BrowserChannel.onStartExecution = function() {
  goog.net.BrowserChannel.startExecutionHook_()
};
goog.net.BrowserChannel.onEndExecution = function() {
  goog.net.BrowserChannel.endExecutionHook_()
};
goog.net.BrowserChannel.getStatEventTarget = function() {
  return goog.net.BrowserChannel.statEventTarget_
};
goog.net.BrowserChannel.notifyStatEvent = function(stat) {
  var target = goog.net.BrowserChannel.statEventTarget_;
  target.dispatchEvent(new goog.net.BrowserChannel.StatEvent(target, stat))
};
goog.net.BrowserChannel.notifyTimingEvent = function(size, rtt, retries) {
  var target = goog.net.BrowserChannel.statEventTarget_;
  target.dispatchEvent(new goog.net.BrowserChannel.TimingEvent(target, size, rtt, retries))
};
goog.net.BrowserChannel.prototype.shouldUseSecondaryDomains = function() {
  return goog.userAgent.IE
};
goog.net.BrowserChannel.LogSaver = {};
goog.net.BrowserChannel.LogSaver.buffer_ = new goog.structs.CircularBuffer(1E3);
goog.net.BrowserChannel.LogSaver.enabled_ = false;
goog.net.BrowserChannel.LogSaver.formatter_ = new goog.debug.TextFormatter;
goog.net.BrowserChannel.LogSaver.isEnabled = function() {
  return goog.net.BrowserChannel.LogSaver.enabled_
};
goog.net.BrowserChannel.LogSaver.setEnabled = function(enable) {
  if(enable == goog.net.BrowserChannel.LogSaver.enabled_) {
    return
  }
  var fn = goog.net.BrowserChannel.LogSaver.addLogRecord;
  var logger = goog.debug.Logger.getLogger("goog.net");
  if(enable) {
    logger.addHandler(fn)
  }else {
    logger.removeHandler(fn)
  }
};
goog.net.BrowserChannel.LogSaver.addLogRecord = function(logRecord) {
  goog.net.BrowserChannel.LogSaver.buffer_.add(goog.net.BrowserChannel.LogSaver.formatter_.formatRecord(logRecord))
};
goog.net.BrowserChannel.LogSaver.getBuffer = function() {
  return goog.net.BrowserChannel.LogSaver.buffer_.getValues().join("")
};
goog.net.BrowserChannel.LogSaver.clearBuffer = function() {
  goog.net.BrowserChannel.LogSaver.buffer_.clear()
};
goog.net.BrowserChannel.Handler = function() {
};
goog.net.BrowserChannel.Handler.prototype.channelHandleMultipleArrays = null;
goog.net.BrowserChannel.Handler.prototype.okToMakeRequest = function(browserChannel) {
  return goog.net.BrowserChannel.Error.OK
};
goog.net.BrowserChannel.Handler.prototype.channelOpened = function(browserChannel) {
};
goog.net.BrowserChannel.Handler.prototype.channelHandleArray = function(browserChannel, array) {
};
goog.net.BrowserChannel.Handler.prototype.channelError = function(browserChannel, error) {
};
goog.net.BrowserChannel.Handler.prototype.channelClosed = function(browserChannel, opt_pendingMaps, opt_undeliveredMaps) {
};
goog.net.BrowserChannel.Handler.prototype.getAdditionalParams = function(browserChannel) {
  return{}
};
goog.net.BrowserChannel.Handler.prototype.getNetworkTestImageUri = function(browserChannel) {
  return null
};
goog.net.BrowserChannel.Handler.prototype.isActive = function(browserChannel) {
  return true
};
goog.net.BrowserChannel.Handler.prototype.badMapError = function(browserChannel, map) {
  return
};
goog.net.BrowserChannel.Handler.prototype.correctHostPrefix = function(serverHostPrefix) {
  return serverHostPrefix
};
goog.provide("de.karolski.teeter_totter.core");
goog.require("cljs.core");
goog.require("goog.json");
goog.require("goog.debug.Console");
goog.require("goog.debug.Logger");
goog.require("goog.net.BrowserChannel");
goog.require("goog.object");
goog.require("goog.dom");
goog.require("de.karolski.teeter_totter.selector");
de.karolski.teeter_totter.core.jsArr = function jsArr(seq) {
  return cljs.core.vec.call(null, cljs.core.map.call(null, function(p1__155694_SHARP_) {
    if(cljs.core.sequential_QMARK_.call(null, p1__155694_SHARP_)) {
      return jsArr.call(null, p1__155694_SHARP_)
    }else {
      return p1__155694_SHARP_
    }
  }, seq)).array()
};
goog.exportSymbol("de.karolski.teeter_totter.core.jsArr", de.karolski.teeter_totter.core.jsArr);
de.karolski.teeter_totter.core.jsObj = function jsObj(obj) {
  return cljs.core.apply.call(null, cljs.core.js_obj, cljs.core.apply.call(null, cljs.core.concat, obj))
};
goog.exportSymbol("de.karolski.teeter_totter.core.jsObj", de.karolski.teeter_totter.core.jsObj);
var log__155695 = goog.debug.Logger.getLogger("DEBUG");
de.karolski.teeter_totter.core.debug = function() {
  var debug__delegate = function(args) {
    return log__155695.info(cljs.core.reduce.call(null, cljs.core.str, "", args))
  };
  var debug = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return debug__delegate.call(this, args)
  };
  debug.cljs$lang$maxFixedArity = 0;
  debug.cljs$lang$applyTo = function(arglist__155696) {
    var args = cljs.core.seq(arglist__155696);
    return debug__delegate(args)
  };
  debug.cljs$lang$arity$variadic = debug__delegate;
  return debug
}();
goog.exportSymbol("de.karolski.teeter_totter.core.debug", de.karolski.teeter_totter.core.debug);
de.karolski.teeter_totter.core.setup_environment = function() {
  var setup_environment__delegate = function(p__155697) {
    var map__155703__155704 = p__155697;
    var map__155703__155705 = cljs.core.seq_QMARK_.call(null, map__155703__155704) ? cljs.core.apply.call(null, cljs.core.hash_map, map__155703__155704) : map__155703__155704;
    var debug_QMARK___155706 = cljs.core._lookup.call(null, map__155703__155705, "\ufdd0'debug?", null);
    var console__155707 = new goog.debug.Console;
    if(cljs.core.truth_(debug_QMARK___155706)) {
      return console__155707.setCapturing(true)
    }else {
      return null
    }
  };
  var setup_environment = function(var_args) {
    var p__155697 = null;
    if(goog.isDef(var_args)) {
      p__155697 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return setup_environment__delegate.call(this, p__155697)
  };
  setup_environment.cljs$lang$maxFixedArity = 0;
  setup_environment.cljs$lang$applyTo = function(arglist__155708) {
    var p__155697 = cljs.core.seq(arglist__155708);
    return setup_environment__delegate(p__155697)
  };
  setup_environment.cljs$lang$arity$variadic = setup_environment__delegate;
  return setup_environment
}();
goog.exportSymbol("de.karolski.teeter_totter.core.setup_environment", de.karolski.teeter_totter.core.setup_environment);
de.karolski.teeter_totter.core.setup_connection = function setup_connection() {
  var log__155720 = goog.debug.Logger.getLogger("Local");
  var bc__155721 = new goog.net.BrowserChannel(8);
  var handler__155722 = new goog.net.BrowserChannel.Handler;
  log__155720.info("Setting up connection");
  handler__155722.channelOpened = function(bc) {
    return log__155720.info("Channel Opened")
  };
  handler__155722.channelClosed = function(bc, pending_maps, undelivered_maps) {
    return log__155720.info("Channel Closed")
  };
  handler__155722.channelError = function(bc, error) {
    return log__155720.info("Channel Error:" + error)
  };
  handler__155722.channelHandleArray = function(bc, array) {
    var log__155723 = goog.debug.Logger.getLogger("Local");
    log__155723.info("Channel Handle Array:" + array);
    var vec__155724__155727 = function() {
      try {
        return cljs.core.PersistentVector.fromArray([eval(array), null], true)
      }catch(e155725) {
        if(cljs.core.instance_QMARK_.call(null, Error, e155725)) {
          var e__155726 = e155725;
          log__155723.info("EVAL ERROR: " + e__155726);
          return cljs.core.PersistentVector.fromArray([null, e__155726], true)
        }else {
          if("\ufdd0'else") {
            throw e155725;
          }else {
            return null
          }
        }
      }
    }();
    var result__155728 = cljs.core.nth.call(null, vec__155724__155727, 0, null);
    var error__155729 = cljs.core.nth.call(null, vec__155724__155727, 1, null);
    var data__155730 = cljs.core.truth_(error__155729) ? cljs.core.ObjMap.fromObject(["error"], {"error":error__155729}) : cljs.core.ObjMap.fromObject(["result"], {"result":goog.json.serialize(result__155728)});
    return bc.sendMap(de.karolski.teeter_totter.core.jsObj.call(null, data__155730))
  };
  log__155720.info("Connecting to server through BrowserChannel");
  bc__155721.setHandler(handler__155722);
  return bc__155721.connect("channel/test", "channel/channel", de.karolski.teeter_totter.core.jsObj.call(null, cljs.core.ObjMap.EMPTY))
};
goog.exportSymbol("de.karolski.teeter_totter.core.setup_connection", de.karolski.teeter_totter.core.setup_connection);
de.karolski.teeter_totter.core.AWidgetFactory = {};
de.karolski.teeter_totter.core._dialog = function _dialog(_, argmap) {
  if(function() {
    var and__3860__auto____155735 = _;
    if(and__3860__auto____155735) {
      return _.de$karolski$teeter_totter$core$AWidgetFactory$_dialog$arity$2
    }else {
      return and__3860__auto____155735
    }
  }()) {
    return _.de$karolski$teeter_totter$core$AWidgetFactory$_dialog$arity$2(_, argmap)
  }else {
    var x__2400__auto____155736 = _ == null ? null : _;
    return function() {
      var or__3862__auto____155737 = de.karolski.teeter_totter.core._dialog[goog.typeOf(x__2400__auto____155736)];
      if(or__3862__auto____155737) {
        return or__3862__auto____155737
      }else {
        var or__3862__auto____155738 = de.karolski.teeter_totter.core._dialog["_"];
        if(or__3862__auto____155738) {
          return or__3862__auto____155738
        }else {
          throw cljs.core.missing_protocol.call(null, "AWidgetFactory.-dialog", _);
        }
      }
    }().call(null, _, argmap)
  }
};
de.karolski.teeter_totter.core._button = function _button(_, argmap) {
  if(function() {
    var and__3860__auto____155743 = _;
    if(and__3860__auto____155743) {
      return _.de$karolski$teeter_totter$core$AWidgetFactory$_button$arity$2
    }else {
      return and__3860__auto____155743
    }
  }()) {
    return _.de$karolski$teeter_totter$core$AWidgetFactory$_button$arity$2(_, argmap)
  }else {
    var x__2400__auto____155744 = _ == null ? null : _;
    return function() {
      var or__3862__auto____155745 = de.karolski.teeter_totter.core._button[goog.typeOf(x__2400__auto____155744)];
      if(or__3862__auto____155745) {
        return or__3862__auto____155745
      }else {
        var or__3862__auto____155746 = de.karolski.teeter_totter.core._button["_"];
        if(or__3862__auto____155746) {
          return or__3862__auto____155746
        }else {
          throw cljs.core.missing_protocol.call(null, "AWidgetFactory.-button", _);
        }
      }
    }().call(null, _, argmap)
  }
};
de.karolski.teeter_totter.core._label = function _label(_, argmap) {
  if(function() {
    var and__3860__auto____155751 = _;
    if(and__3860__auto____155751) {
      return _.de$karolski$teeter_totter$core$AWidgetFactory$_label$arity$2
    }else {
      return and__3860__auto____155751
    }
  }()) {
    return _.de$karolski$teeter_totter$core$AWidgetFactory$_label$arity$2(_, argmap)
  }else {
    var x__2400__auto____155752 = _ == null ? null : _;
    return function() {
      var or__3862__auto____155753 = de.karolski.teeter_totter.core._label[goog.typeOf(x__2400__auto____155752)];
      if(or__3862__auto____155753) {
        return or__3862__auto____155753
      }else {
        var or__3862__auto____155754 = de.karolski.teeter_totter.core._label["_"];
        if(or__3862__auto____155754) {
          return or__3862__auto____155754
        }else {
          throw cljs.core.missing_protocol.call(null, "AWidgetFactory.-label", _);
        }
      }
    }().call(null, _, argmap)
  }
};
de.karolski.teeter_totter.core._text = function _text(_, argmap) {
  if(function() {
    var and__3860__auto____155759 = _;
    if(and__3860__auto____155759) {
      return _.de$karolski$teeter_totter$core$AWidgetFactory$_text$arity$2
    }else {
      return and__3860__auto____155759
    }
  }()) {
    return _.de$karolski$teeter_totter$core$AWidgetFactory$_text$arity$2(_, argmap)
  }else {
    var x__2400__auto____155760 = _ == null ? null : _;
    return function() {
      var or__3862__auto____155761 = de.karolski.teeter_totter.core._text[goog.typeOf(x__2400__auto____155760)];
      if(or__3862__auto____155761) {
        return or__3862__auto____155761
      }else {
        var or__3862__auto____155762 = de.karolski.teeter_totter.core._text["_"];
        if(or__3862__auto____155762) {
          return or__3862__auto____155762
        }else {
          throw cljs.core.missing_protocol.call(null, "AWidgetFactory.-text", _);
        }
      }
    }().call(null, _, argmap)
  }
};
de.karolski.teeter_totter.core.APanelFactory = {};
de.karolski.teeter_totter.core._panel = function _panel(_, argmap) {
  if(function() {
    var and__3860__auto____155767 = _;
    if(and__3860__auto____155767) {
      return _.de$karolski$teeter_totter$core$APanelFactory$_panel$arity$2
    }else {
      return and__3860__auto____155767
    }
  }()) {
    return _.de$karolski$teeter_totter$core$APanelFactory$_panel$arity$2(_, argmap)
  }else {
    var x__2400__auto____155768 = _ == null ? null : _;
    return function() {
      var or__3862__auto____155769 = de.karolski.teeter_totter.core._panel[goog.typeOf(x__2400__auto____155768)];
      if(or__3862__auto____155769) {
        return or__3862__auto____155769
      }else {
        var or__3862__auto____155770 = de.karolski.teeter_totter.core._panel["_"];
        if(or__3862__auto____155770) {
          return or__3862__auto____155770
        }else {
          throw cljs.core.missing_protocol.call(null, "APanelFactory.-panel", _);
        }
      }
    }().call(null, _, argmap)
  }
};
de.karolski.teeter_totter.core.PropertyChangeManager = {};
de.karolski.teeter_totter.core._add_listener = function _add_listener(framework, widget, option_kw, handler) {
  if(function() {
    var and__3860__auto____155775 = framework;
    if(and__3860__auto____155775) {
      return framework.de$karolski$teeter_totter$core$PropertyChangeManager$_add_listener$arity$4
    }else {
      return and__3860__auto____155775
    }
  }()) {
    return framework.de$karolski$teeter_totter$core$PropertyChangeManager$_add_listener$arity$4(framework, widget, option_kw, handler)
  }else {
    var x__2400__auto____155776 = framework == null ? null : framework;
    return function() {
      var or__3862__auto____155777 = de.karolski.teeter_totter.core._add_listener[goog.typeOf(x__2400__auto____155776)];
      if(or__3862__auto____155777) {
        return or__3862__auto____155777
      }else {
        var or__3862__auto____155778 = de.karolski.teeter_totter.core._add_listener["_"];
        if(or__3862__auto____155778) {
          return or__3862__auto____155778
        }else {
          throw cljs.core.missing_protocol.call(null, "PropertyChangeManager.-add-listener", framework);
        }
      }
    }().call(null, framework, widget, option_kw, handler)
  }
};
de.karolski.teeter_totter.core._remove_listener = function _remove_listener(framework, widget, option_kw, handler) {
  if(function() {
    var and__3860__auto____155783 = framework;
    if(and__3860__auto____155783) {
      return framework.de$karolski$teeter_totter$core$PropertyChangeManager$_remove_listener$arity$4
    }else {
      return and__3860__auto____155783
    }
  }()) {
    return framework.de$karolski$teeter_totter$core$PropertyChangeManager$_remove_listener$arity$4(framework, widget, option_kw, handler)
  }else {
    var x__2400__auto____155784 = framework == null ? null : framework;
    return function() {
      var or__3862__auto____155785 = de.karolski.teeter_totter.core._remove_listener[goog.typeOf(x__2400__auto____155784)];
      if(or__3862__auto____155785) {
        return or__3862__auto____155785
      }else {
        var or__3862__auto____155786 = de.karolski.teeter_totter.core._remove_listener["_"];
        if(or__3862__auto____155786) {
          return or__3862__auto____155786
        }else {
          throw cljs.core.missing_protocol.call(null, "PropertyChangeManager.-remove-listener", framework);
        }
      }
    }().call(null, framework, widget, option_kw, handler)
  }
};
de.karolski.teeter_totter.core.AConfigurable = {};
de.karolski.teeter_totter.core._config = function _config(c, key) {
  if(function() {
    var and__3860__auto____155791 = c;
    if(and__3860__auto____155791) {
      return c.de$karolski$teeter_totter$core$AConfigurable$_config$arity$2
    }else {
      return and__3860__auto____155791
    }
  }()) {
    return c.de$karolski$teeter_totter$core$AConfigurable$_config$arity$2(c, key)
  }else {
    var x__2400__auto____155792 = c == null ? null : c;
    return function() {
      var or__3862__auto____155793 = de.karolski.teeter_totter.core._config[goog.typeOf(x__2400__auto____155792)];
      if(or__3862__auto____155793) {
        return or__3862__auto____155793
      }else {
        var or__3862__auto____155794 = de.karolski.teeter_totter.core._config["_"];
        if(or__3862__auto____155794) {
          return or__3862__auto____155794
        }else {
          throw cljs.core.missing_protocol.call(null, "AConfigurable.-config", c);
        }
      }
    }().call(null, c, key)
  }
};
de.karolski.teeter_totter.core._config_BANG_ = function _config_BANG_(c, kay, val) {
  if(function() {
    var and__3860__auto____155799 = c;
    if(and__3860__auto____155799) {
      return c.de$karolski$teeter_totter$core$AConfigurable$_config_BANG_$arity$3
    }else {
      return and__3860__auto____155799
    }
  }()) {
    return c.de$karolski$teeter_totter$core$AConfigurable$_config_BANG_$arity$3(c, kay, val)
  }else {
    var x__2400__auto____155800 = c == null ? null : c;
    return function() {
      var or__3862__auto____155801 = de.karolski.teeter_totter.core._config_BANG_[goog.typeOf(x__2400__auto____155800)];
      if(or__3862__auto____155801) {
        return or__3862__auto____155801
      }else {
        var or__3862__auto____155802 = de.karolski.teeter_totter.core._config_BANG_["_"];
        if(or__3862__auto____155802) {
          return or__3862__auto____155802
        }else {
          throw cljs.core.missing_protocol.call(null, "AConfigurable.-config!", c);
        }
      }
    }().call(null, c, kay, val)
  }
};
de.karolski.teeter_totter.core.AConfigurableMap = {};
de.karolski.teeter_totter.core._config_map = function _config_map(c) {
  if(function() {
    var and__3860__auto____155807 = c;
    if(and__3860__auto____155807) {
      return c.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1
    }else {
      return and__3860__auto____155807
    }
  }()) {
    return c.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1(c)
  }else {
    var x__2400__auto____155808 = c == null ? null : c;
    return function() {
      var or__3862__auto____155809 = de.karolski.teeter_totter.core._config_map[goog.typeOf(x__2400__auto____155808)];
      if(or__3862__auto____155809) {
        return or__3862__auto____155809
      }else {
        var or__3862__auto____155810 = de.karolski.teeter_totter.core._config_map["_"];
        if(or__3862__auto____155810) {
          return or__3862__auto____155810
        }else {
          throw cljs.core.missing_protocol.call(null, "AConfigurableMap.-config-map", c);
        }
      }
    }().call(null, c)
  }
};
de.karolski.teeter_totter.core.config = function config(c, key) {
  return de.karolski.teeter_totter.core._config.call(null, c, key)
};
goog.exportSymbol("de.karolski.teeter_totter.core.config", de.karolski.teeter_totter.core.config);
de.karolski.teeter_totter.core.config_BANG_ = function config_BANG_(c, key, val) {
  return de.karolski.teeter_totter.core._config_BANG_.call(null, c, key, val)
};
goog.exportSymbol("de.karolski.teeter_totter.core.config_BANG_", de.karolski.teeter_totter.core.config_BANG_);
de.karolski.teeter_totter.core.config_map = function config_map(c) {
  return de.karolski.teeter_totter.core._config_map.call(null, c)
};
goog.exportSymbol("de.karolski.teeter_totter.core.config_map", de.karolski.teeter_totter.core.config_map);
de.karolski.teeter_totter.core.config_BANG__when = function config_BANG__when(val, c, key) {
  if(cljs.core.truth_(val)) {
    return de.karolski.teeter_totter.core.config_BANG_.call(null, c, key, val)
  }else {
    return null
  }
};
goog.exportSymbol("de.karolski.teeter_totter.core.config_BANG__when", de.karolski.teeter_totter.core.config_BANG__when);
de.karolski.teeter_totter.core.generic_configure_BANG_ = function generic_configure_BANG_(c, argmap) {
  var G__155830__155831 = cljs.core.seq.call(null, argmap);
  if(G__155830__155831) {
    var G__155833__155835 = cljs.core.first.call(null, G__155830__155831);
    var vec__155834__155836 = G__155833__155835;
    var k__155837 = cljs.core.nth.call(null, vec__155834__155836, 0, null);
    var v__155838 = cljs.core.nth.call(null, vec__155834__155836, 1, null);
    var G__155830__155839 = G__155830__155831;
    var G__155833__155840 = G__155833__155835;
    var G__155830__155841 = G__155830__155839;
    while(true) {
      var vec__155842__155843 = G__155833__155840;
      var k__155844 = cljs.core.nth.call(null, vec__155842__155843, 0, null);
      var v__155845 = cljs.core.nth.call(null, vec__155842__155843, 1, null);
      var G__155830__155846 = G__155830__155841;
      if(cljs.core.truth_(k__155844.call(null, de.karolski.teeter_totter.core.config_map.call(null, c)))) {
        de.karolski.teeter_totter.core.debug.call(null, "Setting ", k__155844, " to ", v__155845, " on ", c);
        de.karolski.teeter_totter.core.config_BANG_.call(null, c, k__155844, v__155845)
      }else {
      }
      var temp__4011__auto____155847 = cljs.core.next.call(null, G__155830__155846);
      if(temp__4011__auto____155847) {
        var G__155830__155848 = temp__4011__auto____155847;
        var G__155849 = cljs.core.first.call(null, G__155830__155848);
        var G__155850 = G__155830__155848;
        G__155833__155840 = G__155849;
        G__155830__155841 = G__155850;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
goog.exportSymbol("de.karolski.teeter_totter.core.generic_configure_BANG_", de.karolski.teeter_totter.core.generic_configure_BANG_);
de.karolski.teeter_totter.core._PLUS_ui_framework_PLUS_ = cljs.core.atom.call(null, null);
de.karolski.teeter_totter.core.set_framework_BANG_ = function set_framework_BANG_(f) {
  return cljs.core.reset_BANG_.call(null, de.karolski.teeter_totter.core._PLUS_ui_framework_PLUS_, f)
};
de.karolski.teeter_totter.core.framework = function framework() {
  return cljs.core.deref.call(null, de.karolski.teeter_totter.core._PLUS_ui_framework_PLUS_)
};
de.karolski.teeter_totter.core.AEventBinder = {};
goog.exportSymbol("de.karolski.teeter_totter.core.AEventBinder", de.karolski.teeter_totter.core.AEventBinder);
de.karolski.teeter_totter.core._bind_event = function() {
  var _bind_event = null;
  var _bind_event__3 = function(_, evnt, cb) {
    if(function() {
      var and__3860__auto____155863 = _;
      if(and__3860__auto____155863) {
        return _.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$3
      }else {
        return and__3860__auto____155863
      }
    }()) {
      return _.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$3(_, evnt, cb)
    }else {
      var x__2400__auto____155864 = _ == null ? null : _;
      return function() {
        var or__3862__auto____155865 = de.karolski.teeter_totter.core._bind_event[goog.typeOf(x__2400__auto____155864)];
        if(or__3862__auto____155865) {
          return or__3862__auto____155865
        }else {
          var or__3862__auto____155866 = de.karolski.teeter_totter.core._bind_event["_"];
          if(or__3862__auto____155866) {
            return or__3862__auto____155866
          }else {
            throw cljs.core.missing_protocol.call(null, "AEventBinder.-bind-event", _);
          }
        }
      }().call(null, _, evnt, cb)
    }
  };
  var _bind_event__4 = function(_, obj, evnt, cb) {
    if(function() {
      var and__3860__auto____155859 = _;
      if(and__3860__auto____155859) {
        return _.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$4
      }else {
        return and__3860__auto____155859
      }
    }()) {
      return _.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$4(_, obj, evnt, cb)
    }else {
      var x__2400__auto____155860 = _ == null ? null : _;
      return function() {
        var or__3862__auto____155861 = de.karolski.teeter_totter.core._bind_event[goog.typeOf(x__2400__auto____155860)];
        if(or__3862__auto____155861) {
          return or__3862__auto____155861
        }else {
          var or__3862__auto____155862 = de.karolski.teeter_totter.core._bind_event["_"];
          if(or__3862__auto____155862) {
            return or__3862__auto____155862
          }else {
            throw cljs.core.missing_protocol.call(null, "AEventBinder.-bind-event", _);
          }
        }
      }().call(null, _, obj, evnt, cb)
    }
  };
  _bind_event = function(_, obj, evnt, cb) {
    switch(arguments.length) {
      case 3:
        return _bind_event__3.call(this, _, obj, evnt);
      case 4:
        return _bind_event__4.call(this, _, obj, evnt, cb)
    }
    throw"Invalid arity: " + arguments.length;
  };
  _bind_event.cljs$lang$arity$3 = _bind_event__3;
  _bind_event.cljs$lang$arity$4 = _bind_event__4;
  return _bind_event
}();
de.karolski.teeter_totter.core.listen = function() {
  var listen = null;
  var listen__1 = function(c) {
    return c
  };
  var listen__2 = function() {
    var G__155905__delegate = function(c, more) {
      var G__155886__155887 = cljs.core.seq.call(null, cljs.core.partition.call(null, 2, more));
      if(G__155886__155887) {
        var G__155889__155891 = cljs.core.first.call(null, G__155886__155887);
        var vec__155890__155892 = G__155889__155891;
        var event_kw__155893 = cljs.core.nth.call(null, vec__155890__155892, 0, null);
        var handler__155894 = cljs.core.nth.call(null, vec__155890__155892, 1, null);
        var G__155886__155895 = G__155886__155887;
        var G__155889__155896 = G__155889__155891;
        var G__155886__155897 = G__155886__155895;
        while(true) {
          var vec__155898__155899 = G__155889__155896;
          var event_kw__155900 = cljs.core.nth.call(null, vec__155898__155899, 0, null);
          var handler__155901 = cljs.core.nth.call(null, vec__155898__155899, 1, null);
          var G__155886__155902 = G__155886__155897;
          listen.call(null, c, event_kw__155900, handler__155901);
          var temp__4011__auto____155903 = cljs.core.next.call(null, G__155886__155902);
          if(temp__4011__auto____155903) {
            var G__155886__155904 = temp__4011__auto____155903;
            var G__155906 = cljs.core.first.call(null, G__155886__155904);
            var G__155907 = G__155886__155904;
            G__155889__155896 = G__155906;
            G__155886__155897 = G__155907;
            continue
          }else {
            return null
          }
          break
        }
      }else {
        return null
      }
    };
    var G__155905 = function(c, var_args) {
      var more = null;
      if(goog.isDef(var_args)) {
        more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
      }
      return G__155905__delegate.call(this, c, more)
    };
    G__155905.cljs$lang$maxFixedArity = 1;
    G__155905.cljs$lang$applyTo = function(arglist__155908) {
      var c = cljs.core.first(arglist__155908);
      var more = cljs.core.rest(arglist__155908);
      return G__155905__delegate(c, more)
    };
    G__155905.cljs$lang$arity$variadic = G__155905__delegate;
    return G__155905
  }();
  var listen__3 = function(c, event_kw, handler) {
    return de.karolski.teeter_totter.core._bind_event.call(null, de.karolski.teeter_totter.core.framework.call(null), c, event_kw, handler)
  };
  listen = function(c, event_kw, var_args) {
    var handler = var_args;
    switch(arguments.length) {
      case 1:
        return listen__1.call(this, c);
      default:
        return listen__2.cljs$lang$arity$variadic(c, event_kw, cljs.core.array_seq(arguments, 3));
      case 3:
        return listen__3.call(this, c, event_kw, handler)
    }
    throw"Invalid arity: " + arguments.length;
  };
  listen.cljs$lang$maxFixedArity = 3;
  listen.cljs$lang$applyTo = listen__2.cljs$lang$applyTo;
  listen.cljs$lang$arity$1 = listen__1;
  listen.cljs$lang$arity$variadic = listen__2.cljs$lang$arity$variadic;
  listen.cljs$lang$arity$3 = listen__3;
  return listen
}();
goog.exportSymbol("de.karolski.teeter_totter.core.listen", de.karolski.teeter_totter.core.listen);
de.karolski.teeter_totter.core.dialog = function() {
  var dialog__delegate = function(p__155909) {
    var map__155919__155920 = p__155909;
    var map__155919__155921 = cljs.core.seq_QMARK_.call(null, map__155919__155920) ? cljs.core.apply.call(null, cljs.core.hash_map, map__155919__155920) : map__155919__155920;
    var argmap__155922 = map__155919__155921;
    var on_select__155923 = cljs.core._lookup.call(null, map__155919__155921, "\ufdd0'on-select", null);
    var button_set__155924 = cljs.core._lookup.call(null, map__155919__155921, "\ufdd0'button-set", null);
    var title__155925 = cljs.core._lookup.call(null, map__155919__155921, "\ufdd0'title", null);
    var content__155926 = cljs.core._lookup.call(null, map__155919__155921, "\ufdd0'content", null);
    var dlg__155927 = de.karolski.teeter_totter.core._dialog.call(null, de.karolski.teeter_totter.core.framework.call(null), cljs.core.ObjMap.EMPTY);
    de.karolski.teeter_totter.core.generic_configure_BANG_.call(null, dlg__155927, argmap__155922);
    if(cljs.core.truth_(on_select__155923)) {
      de.karolski.teeter_totter.core.listen.call(null, dlg__155927, "\ufdd0'select", on_select__155923)
    }else {
    }
    return dlg__155927
  };
  var dialog = function(var_args) {
    var p__155909 = null;
    if(goog.isDef(var_args)) {
      p__155909 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return dialog__delegate.call(this, p__155909)
  };
  dialog.cljs$lang$maxFixedArity = 0;
  dialog.cljs$lang$applyTo = function(arglist__155928) {
    var p__155909 = cljs.core.seq(arglist__155928);
    return dialog__delegate(p__155909)
  };
  dialog.cljs$lang$arity$variadic = dialog__delegate;
  return dialog
}();
goog.exportSymbol("de.karolski.teeter_totter.core.dialog", de.karolski.teeter_totter.core.dialog);
de.karolski.teeter_totter.core.button = function() {
  var button__delegate = function(p__155929) {
    var map__155938__155939 = p__155929;
    var map__155938__155940 = cljs.core.seq_QMARK_.call(null, map__155938__155939) ? cljs.core.apply.call(null, cljs.core.hash_map, map__155938__155939) : map__155938__155939;
    var argmap__155941 = map__155938__155940;
    var color__155942 = cljs.core._lookup.call(null, map__155938__155940, "\ufdd0'color", null);
    var tooltip__155943 = cljs.core._lookup.call(null, map__155938__155940, "\ufdd0'tooltip", null);
    var text__155944 = cljs.core._lookup.call(null, map__155938__155940, "\ufdd0'text", "");
    var btn__155945 = de.karolski.teeter_totter.core._button.call(null, de.karolski.teeter_totter.core.framework.call(null), cljs.core.ObjMap.EMPTY);
    de.karolski.teeter_totter.core.generic_configure_BANG_.call(null, btn__155945, argmap__155941);
    return btn__155945
  };
  var button = function(var_args) {
    var p__155929 = null;
    if(goog.isDef(var_args)) {
      p__155929 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return button__delegate.call(this, p__155929)
  };
  button.cljs$lang$maxFixedArity = 0;
  button.cljs$lang$applyTo = function(arglist__155946) {
    var p__155929 = cljs.core.seq(arglist__155946);
    return button__delegate(p__155929)
  };
  button.cljs$lang$arity$variadic = button__delegate;
  return button
}();
goog.exportSymbol("de.karolski.teeter_totter.core.button", de.karolski.teeter_totter.core.button);
de.karolski.teeter_totter.core.text = function() {
  var text__delegate = function(p__155947) {
    var map__155954__155955 = p__155947;
    var map__155954__155956 = cljs.core.seq_QMARK_.call(null, map__155954__155955) ? cljs.core.apply.call(null, cljs.core.hash_map, map__155954__155955) : map__155954__155955;
    var argmap__155957 = map__155954__155956;
    var text__155958 = cljs.core._lookup.call(null, map__155954__155956, "\ufdd0'text", "");
    var lbl__155959 = de.karolski.teeter_totter.core._text.call(null, de.karolski.teeter_totter.core.framework.call(null), cljs.core.ObjMap.EMPTY);
    de.karolski.teeter_totter.core.generic_configure_BANG_.call(null, lbl__155959, argmap__155957);
    return lbl__155959
  };
  var text = function(var_args) {
    var p__155947 = null;
    if(goog.isDef(var_args)) {
      p__155947 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return text__delegate.call(this, p__155947)
  };
  text.cljs$lang$maxFixedArity = 0;
  text.cljs$lang$applyTo = function(arglist__155960) {
    var p__155947 = cljs.core.seq(arglist__155960);
    return text__delegate(p__155947)
  };
  text.cljs$lang$arity$variadic = text__delegate;
  return text
}();
goog.exportSymbol("de.karolski.teeter_totter.core.text", de.karolski.teeter_totter.core.text);
de.karolski.teeter_totter.core.label = function() {
  var label__delegate = function(p__155961) {
    var map__155968__155969 = p__155961;
    var map__155968__155970 = cljs.core.seq_QMARK_.call(null, map__155968__155969) ? cljs.core.apply.call(null, cljs.core.hash_map, map__155968__155969) : map__155968__155969;
    var argmap__155971 = map__155968__155970;
    var text__155972 = cljs.core._lookup.call(null, map__155968__155970, "\ufdd0'text", null);
    var lbl__155973 = de.karolski.teeter_totter.core._label.call(null, de.karolski.teeter_totter.core.framework.call(null), cljs.core.ObjMap.EMPTY);
    de.karolski.teeter_totter.core.generic_configure_BANG_.call(null, lbl__155973, argmap__155971);
    return lbl__155973
  };
  var label = function(var_args) {
    var p__155961 = null;
    if(goog.isDef(var_args)) {
      p__155961 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return label__delegate.call(this, p__155961)
  };
  label.cljs$lang$maxFixedArity = 0;
  label.cljs$lang$applyTo = function(arglist__155974) {
    var p__155961 = cljs.core.seq(arglist__155974);
    return label__delegate(p__155961)
  };
  label.cljs$lang$arity$variadic = label__delegate;
  return label
}();
goog.exportSymbol("de.karolski.teeter_totter.core.label", de.karolski.teeter_totter.core.label);
de.karolski.teeter_totter.core.panel = function() {
  var panel__delegate = function(p__155975) {
    var map__155983__155984 = p__155975;
    var map__155983__155985 = cljs.core.seq_QMARK_.call(null, map__155983__155984) ? cljs.core.apply.call(null, cljs.core.hash_map, map__155983__155984) : map__155983__155984;
    var argmap__155986 = map__155983__155985;
    var items__155987 = cljs.core._lookup.call(null, map__155983__155985, "\ufdd0'items", null);
    var orientation__155988 = cljs.core._lookup.call(null, map__155983__155985, "\ufdd0'orientation", "\ufdd0'horizontal");
    var c__155989 = de.karolski.teeter_totter.core._panel.call(null, de.karolski.teeter_totter.core.framework.call(null), cljs.core.ObjMap.EMPTY);
    de.karolski.teeter_totter.core.generic_configure_BANG_.call(null, c__155989, argmap__155986);
    return c__155989
  };
  var panel = function(var_args) {
    var p__155975 = null;
    if(goog.isDef(var_args)) {
      p__155975 = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return panel__delegate.call(this, p__155975)
  };
  panel.cljs$lang$maxFixedArity = 0;
  panel.cljs$lang$applyTo = function(arglist__155990) {
    var p__155975 = cljs.core.seq(arglist__155990);
    return panel__delegate(p__155975)
  };
  panel.cljs$lang$arity$variadic = panel__delegate;
  return panel
}();
goog.exportSymbol("de.karolski.teeter_totter.core.panel", de.karolski.teeter_totter.core.panel);
de.karolski.teeter_totter.core.horizontal_panel = function() {
  var horizontal_panel__delegate = function(args) {
    return cljs.core.apply.call(null, de.karolski.teeter_totter.core.panel, "\ufdd0'orientation", "\ufdd0'horizontal", args)
  };
  var horizontal_panel = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return horizontal_panel__delegate.call(this, args)
  };
  horizontal_panel.cljs$lang$maxFixedArity = 0;
  horizontal_panel.cljs$lang$applyTo = function(arglist__155991) {
    var args = cljs.core.seq(arglist__155991);
    return horizontal_panel__delegate(args)
  };
  horizontal_panel.cljs$lang$arity$variadic = horizontal_panel__delegate;
  return horizontal_panel
}();
goog.exportSymbol("de.karolski.teeter_totter.core.horizontal_panel", de.karolski.teeter_totter.core.horizontal_panel);
de.karolski.teeter_totter.core.vertical_panel = function() {
  var vertical_panel__delegate = function(args) {
    return cljs.core.apply.call(null, de.karolski.teeter_totter.core.panel, "\ufdd0'orientation", "\ufdd0'vertical", args)
  };
  var vertical_panel = function(var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return vertical_panel__delegate.call(this, args)
  };
  vertical_panel.cljs$lang$maxFixedArity = 0;
  vertical_panel.cljs$lang$applyTo = function(arglist__155992) {
    var args = cljs.core.seq(arglist__155992);
    return vertical_panel__delegate(args)
  };
  vertical_panel.cljs$lang$arity$variadic = vertical_panel__delegate;
  return vertical_panel
}();
goog.exportSymbol("de.karolski.teeter_totter.core.vertical_panel", de.karolski.teeter_totter.core.vertical_panel);
de.karolski.teeter_totter.core.select = function select(root, selector) {
  var root__155997 = root;
  var result__155998 = de.karolski.teeter_totter.selector.select.call(null, root__155997, selector);
  var id_QMARK___156000 = function() {
    var and__3860__auto____155999 = cljs.core.second.call(null, selector) == null;
    if(and__3860__auto____155999) {
      return de.karolski.teeter_totter.selector.id_selector_QMARK_.call(null, cljs.core.first.call(null, selector))
    }else {
      return and__3860__auto____155999
    }
  }();
  if(cljs.core.truth_(id_QMARK___156000)) {
    return cljs.core.first.call(null, result__155998)
  }else {
    return result__155998
  }
};
goog.provide("de.karolski.teeter_totter.frameworks.google");
goog.require("cljs.core");
goog.require("de.karolski.teeter_totter.core");
goog.require("goog.events");
goog.require("goog.ui.LabelInput");
goog.require("goog.ui.ColorButton");
goog.require("goog.ui.Button");
goog.require("goog.ui.Dialog");
goog.require("goog.debug.Logger");
goog.require("de.karolski.teeter_totter.core");
goog.require("de.karolski.teeter_totter.core");
de.karolski.teeter_totter.frameworks.google.Framework = function() {
};
de.karolski.teeter_totter.frameworks.google.Framework.cljs$lang$type = true;
de.karolski.teeter_totter.frameworks.google.Framework.cljs$lang$ctorPrSeq = function(this__2347__auto__) {
  return cljs.core.list.call(null, "de.karolski.teeter-totter.frameworks.google/Framework")
};
de.karolski.teeter_totter.frameworks.google.Framework;
de.karolski.teeter_totter.frameworks.google.orientation_kw__GT_google_orientation = function orientation_kw__GT_google_orientation(orientation_kw) {
  return orientation_kw.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'horizontal", "\ufdd0'vertical"], {"\ufdd0'horizontal":goog.ui.Container.Orientation.HORIZONTAL, "\ufdd0'vertical":goog.ui.Container.Orientation.VERTICAL}))
};
de.karolski.teeter_totter.frameworks.google.event_kw__GT_google_event = function event_kw__GT_google_event(event_kw) {
  return cljs.core.ObjMap.fromObject(["\ufdd0'hide", "\ufdd0'close", "\ufdd0'action", "\ufdd0'before-show", "\ufdd0'leave", "\ufdd0'highlight", "\ufdd0'uncheck", "\ufdd0'check", "\ufdd0'blur", "\ufdd0'change", "\ufdd0'enter", "\ufdd0'focus", "\ufdd0'enable", "\ufdd0'disable", "\ufdd0'unselect", "\ufdd0'unhighlight", "\ufdd0'open", "\ufdd0'deactivate", "\ufdd0'select", "\ufdd0'show", "\ufdd0'activate"], {"\ufdd0'hide":goog.ui.Component.EventType.HIDE, "\ufdd0'close":goog.ui.Component.EventType.CLOSE, 
  "\ufdd0'action":goog.ui.Component.EventType.ACTION, "\ufdd0'before-show":goog.ui.Component.EventType.BEFORE_SHOW, "\ufdd0'leave":goog.ui.Component.EventType.LEAVE, "\ufdd0'highlight":goog.ui.Component.EventType.HIGHLIGHT, "\ufdd0'uncheck":goog.ui.Component.EventType.UNCHECK, "\ufdd0'check":goog.ui.Component.EventType.CHECK, "\ufdd0'blur":goog.ui.Component.EventType.BLUR, "\ufdd0'change":goog.ui.Component.EventType.CHANGE, "\ufdd0'enter":goog.ui.Component.EventType.ENTER, "\ufdd0'focus":goog.ui.Component.EventType.FOCUS, 
  "\ufdd0'enable":goog.ui.Component.EventType.ENABLE, "\ufdd0'disable":goog.ui.Component.EventType.DISABLE, "\ufdd0'unselect":goog.ui.Component.EventType.UNSELECT, "\ufdd0'unhighlight":goog.ui.Component.EventType.UNHIGHLIGHT, "\ufdd0'open":goog.ui.Component.EventType.OPEN, "\ufdd0'deactivate":goog.ui.Component.EventType.DEACTIVATE, "\ufdd0'select":goog.ui.Component.EventType.SELECT, "\ufdd0'show":goog.ui.Component.EventType.SHOW, "\ufdd0'activate":goog.ui.Component.EventType.ACTIVATE}).call(null, 
  event_kw)
};
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$APanelFactory$ = true;
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$APanelFactory$_panel$arity$2 = function(_, argmap) {
  return new goog.ui.Component
};
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AEventBinder$ = true;
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$4 = function(_, obj, event_kw, cb) {
  return goog.events.listen(obj, function() {
    var or__3862__auto____154036 = de.karolski.teeter_totter.frameworks.google.event_kw__GT_google_event.call(null, event_kw);
    if(cljs.core.truth_(or__3862__auto____154036)) {
      return or__3862__auto____154036
    }else {
      return event_kw
    }
  }(), cb)
};
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$ = true;
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_dialog$arity$2 = function(_, argmap) {
  return new goog.ui.Dialog
};
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_button$arity$2 = function(_, argmap) {
  return new goog.ui.Button
};
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_label$arity$2 = function(_, argmap) {
  return new goog.ui.Control
};
de.karolski.teeter_totter.frameworks.google.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_text$arity$2 = function(_, argmap) {
  return new goog.ui.LabelInput
};
de.karolski.teeter_totter.frameworks.google.set_orientation_on_BANG_ = function set_orientation_on_BANG_(obj, orientation) {
  var items__154059 = de.karolski.teeter_totter.core.config.call(null, obj, "\ufdd0'items");
  if(cljs.core.truth_(function() {
    var and__3860__auto____154060 = items__154059;
    if(cljs.core.truth_(and__3860__auto____154060)) {
      return cljs.core._EQ_.call(null, orientation, "\ufdd0'horizontal")
    }else {
      return and__3860__auto____154060
    }
  }())) {
    var G__154061__154062 = cljs.core.seq.call(null, items__154059);
    if(G__154061__154062) {
      var item__154063 = cljs.core.first.call(null, G__154061__154062);
      var G__154061__154064 = G__154061__154062;
      while(true) {
        goog.style.setInlineBlock(item__154063.getElement());
        var temp__4011__auto____154065 = cljs.core.next.call(null, G__154061__154064);
        if(temp__4011__auto____154065) {
          var G__154061__154066 = temp__4011__auto____154065;
          var G__154073 = cljs.core.first.call(null, G__154061__154066);
          var G__154074 = G__154061__154066;
          item__154063 = G__154073;
          G__154061__154064 = G__154074;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    var G__154067__154068 = cljs.core.seq.call(null, items__154059);
    if(G__154067__154068) {
      var item__154069 = cljs.core.first.call(null, G__154067__154068);
      var G__154067__154070 = G__154067__154068;
      while(true) {
        goog.style.setStyle(item__154069.getElement(), "display", "block");
        var temp__4011__auto____154071 = cljs.core.next.call(null, G__154067__154070);
        if(temp__4011__auto____154071) {
          var G__154067__154072 = temp__4011__auto____154071;
          var G__154075 = cljs.core.first.call(null, G__154067__154072);
          var G__154076 = G__154067__154072;
          item__154069 = G__154075;
          G__154067__154070 = G__154076;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }
};
de.karolski.teeter_totter.frameworks.google._PLUS_component_opt_map_PLUS_ = cljs.core.ObjMap.fromObject(["\ufdd0'listen", "\ufdd0'visible?", "\ufdd0'items", "\ufdd0'orientation"], {"\ufdd0'listen":cljs.core.PersistentVector.fromArray([function _PLUS_component_opt_map_PLUS_(e) {
  throw new Error("Not implemented");
}, function _PLUS_component_opt_map_PLUS_(p1__154037_SHARP_, p2__154038_SHARP_) {
  return cljs.core.apply.call(null, de.karolski.teeter_totter.core.listen, p1__154037_SHARP_, p2__154038_SHARP_)
}], true), "\ufdd0'visible?":cljs.core.PersistentVector.fromArray([function _PLUS_component_opt_map_PLUS_(p1__154039_SHARP_) {
  return p1__154039_SHARP_.getVisible()
}, function _PLUS_component_opt_map_PLUS_(p1__154040_SHARP_, p2__154041_SHARP_) {
  return p1__154040_SHARP_.setVisible(p2__154041_SHARP_)
}], true), "\ufdd0'items":cljs.core.PersistentVector.fromArray([function _PLUS_component_opt_map_PLUS_(c) {
  return cljs.core.map.call(null, function(p1__154042_SHARP_) {
    return c.getChild(p1__154042_SHARP_)
  }, c.getChildIds())
}, function _PLUS_component_opt_map_PLUS_(p1__154044_SHARP_, p2__154043_SHARP_) {
  var G__154086__154087 = cljs.core.seq.call(null, p2__154043_SHARP_);
  if(G__154086__154087) {
    var item__154088 = cljs.core.first.call(null, G__154086__154087);
    var G__154086__154089 = G__154086__154087;
    while(true) {
      p1__154044_SHARP_.addChild(item__154088, true);
      var temp__4011__auto____154090 = cljs.core.next.call(null, G__154086__154089);
      if(temp__4011__auto____154090) {
        var G__154086__154091 = temp__4011__auto____154090;
        var G__154092 = cljs.core.first.call(null, G__154086__154091);
        var G__154093 = G__154086__154091;
        item__154088 = G__154092;
        G__154086__154089 = G__154093;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
}], true), "\ufdd0'orientation":cljs.core.PersistentVector.fromArray([function _PLUS_component_opt_map_PLUS_(obj) {
  throw new Error("Not implemented");
}, function _PLUS_component_opt_map_PLUS_(obj, val) {
  return de.karolski.teeter_totter.frameworks.google.set_orientation_on_BANG_.call(null, obj, val)
}], true)});
de.karolski.teeter_totter.frameworks.google._PLUS_control_opt_map_PLUS_ = cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.google._PLUS_component_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'text"], {"\ufdd0'text":cljs.core.PersistentVector.fromArray([function(p1__154077_SHARP_) {
  return p1__154077_SHARP_.getCaption()
}, function(p1__154078_SHARP_, p2__154079_SHARP_) {
  return p1__154078_SHARP_.setCaption(p2__154079_SHARP_)
}], true)}));
de.karolski.teeter_totter.frameworks.google._PLUS_button_opt_map_PLUS_ = cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.google._PLUS_component_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'tooltip", "\ufdd0'color", "\ufdd0'button-set"], {"\ufdd0'text":cljs.core.PersistentVector.fromArray([function(p1__154094_SHARP_) {
  return p1__154094_SHARP_.getContent()
}, function(p1__154095_SHARP_, p2__154096_SHARP_) {
  return p1__154095_SHARP_.setContent(p2__154096_SHARP_)
}], true), "\ufdd0'tooltip":cljs.core.PersistentVector.fromArray([function(p1__154097_SHARP_) {
  return p1__154097_SHARP_.getTooltip()
}, function(p1__154098_SHARP_, p2__154099_SHARP_) {
  return p1__154098_SHARP_.setTooltip(p2__154099_SHARP_)
}], true), "\ufdd0'color":cljs.core.PersistentVector.fromArray([function(p1__154100_SHARP_) {
  return p1__154100_SHARP_.getValue()
}, function(p1__154101_SHARP_, p2__154102_SHARP_) {
  return p1__154101_SHARP_.setValue(p2__154102_SHARP_)
}], true), "\ufdd0'button-set":cljs.core.PersistentVector.fromArray([function(p1__154103_SHARP_) {
  return p1__154103_SHARP_.getButtonSet()
}, function(p1__154104_SHARP_, p2__154105_SHARP_) {
  return p1__154104_SHARP_.setButtonSet(p2__154105_SHARP_)
}], true)}));
de.karolski.teeter_totter.frameworks.google._PLUS_dialog_opt_map_PLUS_ = cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.google._PLUS_component_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'title"], {"\ufdd0'title":cljs.core.PersistentVector.fromArray([function(p1__154106_SHARP_) {
  return p1__154106_SHARP_.getTitle()
}, function(p1__154107_SHARP_, p2__154108_SHARP_) {
  return p1__154107_SHARP_.setTitle(p2__154108_SHARP_)
}], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'modal?"], {"\ufdd0'modal?":cljs.core.PersistentVector.fromArray([function(p1__154109_SHARP_) {
  return p1__154109_SHARP_.getModal()
}, function(p1__154110_SHARP_, p2__154111_SHARP_) {
  return p1__154110_SHARP_.setModal(p2__154111_SHARP_)
}], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'content"], {"\ufdd0'content":cljs.core.PersistentVector.fromArray([function(p1__154112_SHARP_) {
  return p1__154112_SHARP_.getChildAt(0)
}, function(p1__154113_SHARP_, p2__154114_SHARP_) {
  return p1__154113_SHARP_.addChildAt(p2__154114_SHARP_, 0, true)
}], true)}));
goog.ui.Component.prototype.de$karolski$teeter_totter$core$AConfigurable$ = true;
goog.ui.Component.prototype.de$karolski$teeter_totter$core$AConfigurable$_config$arity$2 = function(c, key) {
  return cljs.core.get_in.call(null, de.karolski.teeter_totter.core.config_map.call(null, c), cljs.core.PersistentVector.fromArray([key, 0], true)).call(null, c)
};
goog.ui.Component.prototype.de$karolski$teeter_totter$core$AConfigurable$_config_BANG_$arity$3 = function(c, key, val) {
  return cljs.core.get_in.call(null, de.karolski.teeter_totter.core.config_map.call(null, c), cljs.core.PersistentVector.fromArray([key, 1], true)).call(null, c, val)
};
goog.ui.Button.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
goog.ui.Button.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.google._PLUS_button_opt_map_PLUS_
};
goog.ui.Dialog.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
goog.ui.Dialog.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.google._PLUS_dialog_opt_map_PLUS_
};
goog.ui.Control.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
goog.ui.Control.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.google._PLUS_control_opt_map_PLUS_
};
goog.ui.Component.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
goog.ui.Component.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.google._PLUS_component_opt_map_PLUS_
};
goog.provide("de.karolski.teeter_totter.bind");
goog.require("cljs.core");
goog.require("de.karolski.teeter_totter.core");
goog.require("de.karolski.teeter_totter.core");
de.karolski.teeter_totter.bind.remove_handler = function remove_handler(handler, handler_vec) {
  return cljs.core.vec.call(null, cljs.core.remove.call(null, function(p1__154660_SHARP_) {
    return cljs.core._EQ_.call(null, p1__154660_SHARP_, handler)
  }, handler_vec))
};
de.karolski.teeter_totter.bind.Bindable = {};
de.karolski.teeter_totter.bind.subscribe = function subscribe(this$, handler) {
  if(function() {
    var and__3860__auto____154665 = this$;
    if(and__3860__auto____154665) {
      return this$.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2
    }else {
      return and__3860__auto____154665
    }
  }()) {
    return this$.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2(this$, handler)
  }else {
    var x__2400__auto____154666 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____154667 = de.karolski.teeter_totter.bind.subscribe[goog.typeOf(x__2400__auto____154666)];
      if(or__3862__auto____154667) {
        return or__3862__auto____154667
      }else {
        var or__3862__auto____154668 = de.karolski.teeter_totter.bind.subscribe["_"];
        if(or__3862__auto____154668) {
          return or__3862__auto____154668
        }else {
          throw cljs.core.missing_protocol.call(null, "Bindable.subscribe", this$);
        }
      }
    }().call(null, this$, handler)
  }
};
de.karolski.teeter_totter.bind.notify = function notify(this$, v) {
  if(function() {
    var and__3860__auto____154673 = this$;
    if(and__3860__auto____154673) {
      return this$.de$karolski$teeter_totter$bind$Bindable$notify$arity$2
    }else {
      return and__3860__auto____154673
    }
  }()) {
    return this$.de$karolski$teeter_totter$bind$Bindable$notify$arity$2(this$, v)
  }else {
    var x__2400__auto____154674 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____154675 = de.karolski.teeter_totter.bind.notify[goog.typeOf(x__2400__auto____154674)];
      if(or__3862__auto____154675) {
        return or__3862__auto____154675
      }else {
        var or__3862__auto____154676 = de.karolski.teeter_totter.bind.notify["_"];
        if(or__3862__auto____154676) {
          return or__3862__auto____154676
        }else {
          throw cljs.core.missing_protocol.call(null, "Bindable.notify", this$);
        }
      }
    }().call(null, this$, v)
  }
};
de.karolski.teeter_totter.bind.ToBindable = {};
de.karolski.teeter_totter.bind.to_bindable_STAR_ = function to_bindable_STAR_(this$) {
  if(function() {
    var and__3860__auto____154681 = this$;
    if(and__3860__auto____154681) {
      return this$.de$karolski$teeter_totter$bind$ToBindable$to_bindable_STAR_$arity$1
    }else {
      return and__3860__auto____154681
    }
  }()) {
    return this$.de$karolski$teeter_totter$bind$ToBindable$to_bindable_STAR_$arity$1(this$)
  }else {
    var x__2400__auto____154682 = this$ == null ? null : this$;
    return function() {
      var or__3862__auto____154683 = de.karolski.teeter_totter.bind.to_bindable_STAR_[goog.typeOf(x__2400__auto____154682)];
      if(or__3862__auto____154683) {
        return or__3862__auto____154683
      }else {
        var or__3862__auto____154684 = de.karolski.teeter_totter.bind.to_bindable_STAR_["_"];
        if(or__3862__auto____154684) {
          return or__3862__auto____154684
        }else {
          throw cljs.core.missing_protocol.call(null, "ToBindable.to-bindable*", this$);
        }
      }
    }().call(null, this$)
  }
};
de.karolski.teeter_totter.bind.to_bindable = function to_bindable(target) {
  if(function() {
    var G__154688__154689 = target;
    if(G__154688__154689) {
      if(cljs.core.truth_(function() {
        var or__3862__auto____154690 = null;
        if(cljs.core.truth_(or__3862__auto____154690)) {
          return or__3862__auto____154690
        }else {
          return G__154688__154689.de$karolski$teeter_totter$bind$Bindable$
        }
      }())) {
        return true
      }else {
        if(!G__154688__154689.cljs$lang$protocol_mask$partition$) {
          return cljs.core.type_satisfies_.call(null, de.karolski.teeter_totter.bind.Bindable, G__154688__154689)
        }else {
          return false
        }
      }
    }else {
      return cljs.core.type_satisfies_.call(null, de.karolski.teeter_totter.bind.Bindable, G__154688__154689)
    }
  }()) {
    return target
  }else {
    return de.karolski.teeter_totter.bind.to_bindable_STAR_.call(null, target)
  }
};
de.karolski.teeter_totter.bind.composite = function composite(start, end) {
  if(void 0 === de.karolski.teeter_totter.bind.t154699) {
    de.karolski.teeter_totter.bind.t154699 = function(end, start, composite, meta154700) {
      this.end = end;
      this.start = start;
      this.composite = composite;
      this.meta154700 = meta154700;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    de.karolski.teeter_totter.bind.t154699.cljs$lang$type = true;
    de.karolski.teeter_totter.bind.t154699.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
      return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154699")
    };
    de.karolski.teeter_totter.bind.t154699.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
    de.karolski.teeter_totter.bind.t154699.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
      var this__154702 = this;
      return de.karolski.teeter_totter.bind.subscribe.call(null, this__154702.end, handler)
    };
    de.karolski.teeter_totter.bind.t154699.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
      var this__154703 = this;
      return de.karolski.teeter_totter.bind.notify.call(null, this__154703.start, v)
    };
    de.karolski.teeter_totter.bind.t154699.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154701) {
      var this__154704 = this;
      return this__154704.meta154700
    };
    de.karolski.teeter_totter.bind.t154699.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154701, meta154700) {
      var this__154705 = this;
      return new de.karolski.teeter_totter.bind.t154699(this__154705.end, this__154705.start, this__154705.composite, meta154700)
    };
    de.karolski.teeter_totter.bind.t154699
  }else {
  }
  return new de.karolski.teeter_totter.bind.t154699(end, start, composite, null)
};
de.karolski.teeter_totter.bind.bind = function() {
  var bind__delegate = function(first_source, target, more) {
    var source__154726 = de.karolski.teeter_totter.bind.to_bindable.call(null, first_source);
    var target__154727 = de.karolski.teeter_totter.bind.to_bindable.call(null, target);
    var more__154728 = cljs.core.seq.call(null, more);
    var unsubs__154729 = cljs.core.PersistentVector.EMPTY;
    while(true) {
      var unsub__154730 = de.karolski.teeter_totter.bind.subscribe.call(null, source__154726, function(source__154726, target__154727, more__154728, unsubs__154729) {
        return function(p1__154691_SHARP_) {
          return de.karolski.teeter_totter.bind.notify.call(null, target__154727, p1__154691_SHARP_)
        }
      }(source__154726, target__154727, more__154728, unsubs__154729));
      var unsubs__154731 = cljs.core.conj.call(null, unsubs__154729, unsub__154730);
      if(more__154728) {
        var G__154746 = target__154727;
        var G__154747 = de.karolski.teeter_totter.bind.to_bindable.call(null, cljs.core.first.call(null, more__154728));
        var G__154748 = cljs.core.next.call(null, more__154728);
        var G__154749 = unsubs__154731;
        source__154726 = G__154746;
        target__154727 = G__154747;
        more__154728 = G__154748;
        unsubs__154729 = G__154749;
        continue
      }else {
        if(void 0 === de.karolski.teeter_totter.bind.t154732) {
          de.karolski.teeter_totter.bind.t154732 = function(unsub, unsubs, source, more, target, first_source, bind, meta154733) {
            this.unsub = unsub;
            this.unsubs = unsubs;
            this.source = source;
            this.more = more;
            this.target = target;
            this.first_source = first_source;
            this.bind = bind;
            this.meta154733 = meta154733;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216
          };
          de.karolski.teeter_totter.bind.t154732.cljs$lang$type = true;
          de.karolski.teeter_totter.bind.t154732.cljs$lang$ctorPrSeq = function(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731) {
            return function(this__2346__auto__) {
              return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154732")
            }
          }(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731);
          de.karolski.teeter_totter.bind.t154732.prototype.cljs$core$IFn$ = true;
          de.karolski.teeter_totter.bind.t154732.prototype.cljs$core$IFn$invoke$arity$1 = function(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731) {
            return function(this$) {
              var this__154735 = this;
              var G__154736__154737 = cljs.core.seq.call(null, this__154735.unsubs);
              if(G__154736__154737) {
                var f__154738 = cljs.core.first.call(null, G__154736__154737);
                var G__154736__154739 = G__154736__154737;
                while(true) {
                  f__154738.call(null);
                  var temp__4011__auto____154740 = cljs.core.next.call(null, G__154736__154739);
                  if(temp__4011__auto____154740) {
                    var G__154736__154741 = temp__4011__auto____154740;
                    var G__154750 = cljs.core.first.call(null, G__154736__154741);
                    var G__154751 = G__154736__154741;
                    f__154738 = G__154750;
                    G__154736__154739 = G__154751;
                    continue
                  }else {
                    return null
                  }
                  break
                }
              }else {
                return null
              }
            }
          }(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731);
          de.karolski.teeter_totter.bind.t154732.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
          de.karolski.teeter_totter.bind.t154732.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731) {
            return function(this$, handler) {
              var this__154742 = this;
              return de.karolski.teeter_totter.bind.subscribe.call(null, this__154742.target, handler)
            }
          }(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731);
          de.karolski.teeter_totter.bind.t154732.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731) {
            return function(this$, v) {
              var this__154743 = this;
              return de.karolski.teeter_totter.bind.notify.call(null, this__154743.first_source, v)
            }
          }(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731);
          de.karolski.teeter_totter.bind.t154732.prototype.cljs$core$IMeta$_meta$arity$1 = function(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731) {
            return function(_154734) {
              var this__154744 = this;
              return this__154744.meta154733
            }
          }(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731);
          de.karolski.teeter_totter.bind.t154732.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731) {
            return function(_154734, meta154733) {
              var this__154745 = this;
              return new de.karolski.teeter_totter.bind.t154732(this__154745.unsub, this__154745.unsubs, this__154745.source, this__154745.more, this__154745.target, this__154745.first_source, this__154745.bind, meta154733)
            }
          }(source__154726, target__154727, more__154728, unsubs__154729, unsub__154730, unsubs__154731);
          de.karolski.teeter_totter.bind.t154732
        }else {
        }
        return new de.karolski.teeter_totter.bind.t154732(unsub__154730, unsubs__154731, source__154726, more__154728, target__154727, first_source, bind, null)
      }
      break
    }
  };
  var bind = function(first_source, target, var_args) {
    var more = null;
    if(goog.isDef(var_args)) {
      more = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return bind__delegate.call(this, first_source, target, more)
  };
  bind.cljs$lang$maxFixedArity = 2;
  bind.cljs$lang$applyTo = function(arglist__154752) {
    var first_source = cljs.core.first(arglist__154752);
    var target = cljs.core.first(cljs.core.next(arglist__154752));
    var more = cljs.core.rest(cljs.core.next(arglist__154752));
    return bind__delegate(first_source, target, more)
  };
  bind.cljs$lang$arity$variadic = bind__delegate;
  return bind
}();
de.karolski.teeter_totter.bind.funnel = function() {
  var funnel__delegate = function(bindables) {
    var inputs__154801 = cljs.core.map.call(null, de.karolski.teeter_totter.bind.to_bindable, bindables);
    var invals__154802 = cljs.core.atom.call(null, cljs.core.vec.call(null, cljs.core.repeat.call(null, cljs.core.count.call(null, inputs__154801), null)));
    var handler__154803 = function(i) {
      return function(v) {
        return cljs.core.swap_BANG_.call(null, invals__154802, cljs.core.assoc, i, v)
      }
    };
    var G__154804__154805 = cljs.core.seq.call(null, cljs.core.map_indexed.call(null, cljs.core.vector, inputs__154801));
    if(G__154804__154805) {
      var G__154807__154809 = cljs.core.first.call(null, G__154804__154805);
      var vec__154808__154810 = G__154807__154809;
      var i__154811 = cljs.core.nth.call(null, vec__154808__154810, 0, null);
      var input__154812 = cljs.core.nth.call(null, vec__154808__154810, 1, null);
      var G__154804__154813 = G__154804__154805;
      var G__154807__154814 = G__154807__154809;
      var G__154804__154815 = G__154804__154813;
      while(true) {
        var vec__154816__154817 = G__154807__154814;
        var i__154818 = cljs.core.nth.call(null, vec__154816__154817, 0, null);
        var input__154819 = cljs.core.nth.call(null, vec__154816__154817, 1, null);
        var G__154804__154820 = G__154804__154815;
        de.karolski.teeter_totter.bind.subscribe.call(null, input__154819, handler__154803.call(null, i__154818));
        var temp__4011__auto____154821 = cljs.core.next.call(null, G__154804__154820);
        if(temp__4011__auto____154821) {
          var G__154804__154822 = temp__4011__auto____154821;
          var G__154849 = cljs.core.first.call(null, G__154804__154822);
          var G__154850 = G__154804__154822;
          G__154807__154814 = G__154849;
          G__154804__154815 = G__154850;
          continue
        }else {
        }
        break
      }
    }else {
    }
    if(void 0 === de.karolski.teeter_totter.bind.t154823) {
      de.karolski.teeter_totter.bind.t154823 = function(handler, invals, inputs, bindables, funnel, meta154824) {
        this.handler = handler;
        this.invals = invals;
        this.inputs = inputs;
        this.bindables = bindables;
        this.funnel = funnel;
        this.meta154824 = meta154824;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t154823.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t154823.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154823")
      };
      de.karolski.teeter_totter.bind.t154823.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t154823.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__154826 = this;
        return de.karolski.teeter_totter.bind.subscribe.call(null, this__154826.invals, handler)
      };
      de.karolski.teeter_totter.bind.t154823.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, vs) {
        var this__154827 = this;
        var G__154828__154829 = cljs.core.seq.call(null, cljs.core.map.call(null, cljs.core.vector, this__154827.inputs, vs));
        if(G__154828__154829) {
          var G__154831__154833 = cljs.core.first.call(null, G__154828__154829);
          var vec__154832__154834 = G__154831__154833;
          var input__154835 = cljs.core.nth.call(null, vec__154832__154834, 0, null);
          var v__154836 = cljs.core.nth.call(null, vec__154832__154834, 1, null);
          var G__154828__154837 = G__154828__154829;
          var G__154831__154838 = G__154831__154833;
          var G__154828__154839 = G__154828__154837;
          while(true) {
            var vec__154840__154841 = G__154831__154838;
            var input__154842 = cljs.core.nth.call(null, vec__154840__154841, 0, null);
            var v__154843 = cljs.core.nth.call(null, vec__154840__154841, 1, null);
            var G__154828__154844 = G__154828__154839;
            de.karolski.teeter_totter.bind.notify.call(null, input__154842, v__154843);
            var temp__4011__auto____154845 = cljs.core.next.call(null, G__154828__154844);
            if(temp__4011__auto____154845) {
              var G__154828__154846 = temp__4011__auto____154845;
              var G__154851 = cljs.core.first.call(null, G__154828__154846);
              var G__154852 = G__154828__154846;
              G__154831__154838 = G__154851;
              G__154828__154839 = G__154852;
              continue
            }else {
              return null
            }
            break
          }
        }else {
          return null
        }
      };
      de.karolski.teeter_totter.bind.t154823.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154825) {
        var this__154847 = this;
        return this__154847.meta154824
      };
      de.karolski.teeter_totter.bind.t154823.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154825, meta154824) {
        var this__154848 = this;
        return new de.karolski.teeter_totter.bind.t154823(this__154848.handler, this__154848.invals, this__154848.inputs, this__154848.bindables, this__154848.funnel, meta154824)
      };
      de.karolski.teeter_totter.bind.t154823
    }else {
    }
    return new de.karolski.teeter_totter.bind.t154823(handler__154803, invals__154802, inputs__154801, bindables, funnel, null)
  };
  var funnel = function(var_args) {
    var bindables = null;
    if(goog.isDef(var_args)) {
      bindables = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return funnel__delegate.call(this, bindables)
  };
  funnel.cljs$lang$maxFixedArity = 0;
  funnel.cljs$lang$applyTo = function(arglist__154853) {
    var bindables = cljs.core.seq(arglist__154853);
    return funnel__delegate(bindables)
  };
  funnel.cljs$lang$arity$variadic = funnel__delegate;
  return funnel
}();
cljs.core.Atom.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
cljs.core.Atom.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
  var key__154854 = cljs.core.keyword.call(null, cljs.core.gensym.call(null, "bindable-atom-watcher"));
  cljs.core.add_watch.call(null, this$, key__154854, function bindable_atom_watcher(k, r, o, n) {
    if(cljs.core._EQ_.call(null, o, n)) {
      return null
    }else {
      return handler.call(null, n)
    }
  });
  return function() {
    return cljs.core.remove_watch.call(null, this$, key__154854)
  }
};
cljs.core.Atom.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
  return cljs.core.reset_BANG_.call(null, this$, v)
};
de.karolski.teeter_totter.bind.b_swap_BANG_ = function() {
  var b_swap_BANG___delegate = function(atom, f, args) {
    if(void 0 === de.karolski.teeter_totter.bind.t154862) {
      de.karolski.teeter_totter.bind.t154862 = function(args, f, atom, b_swap_BANG_, meta154863) {
        this.args = args;
        this.f = f;
        this.atom = atom;
        this.b_swap_BANG_ = b_swap_BANG_;
        this.meta154863 = meta154863;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t154862.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t154862.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154862")
      };
      de.karolski.teeter_totter.bind.t154862.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t154862.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__154865 = this;
        return de.karolski.teeter_totter.bind.subscribe.call(null, this__154865.atom, handler)
      };
      de.karolski.teeter_totter.bind.t154862.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
        var this__154866 = this;
        return cljs.core.apply.call(null, cljs.core.swap_BANG_, this__154866.atom, this__154866.f, v, this__154866.args)
      };
      de.karolski.teeter_totter.bind.t154862.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154864) {
        var this__154867 = this;
        return this__154867.meta154863
      };
      de.karolski.teeter_totter.bind.t154862.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154864, meta154863) {
        var this__154868 = this;
        return new de.karolski.teeter_totter.bind.t154862(this__154868.args, this__154868.f, this__154868.atom, this__154868.b_swap_BANG_, meta154863)
      };
      de.karolski.teeter_totter.bind.t154862
    }else {
    }
    return new de.karolski.teeter_totter.bind.t154862(args, f, atom, b_swap_BANG_, null)
  };
  var b_swap_BANG_ = function(atom, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 2), 0)
    }
    return b_swap_BANG___delegate.call(this, atom, f, args)
  };
  b_swap_BANG_.cljs$lang$maxFixedArity = 2;
  b_swap_BANG_.cljs$lang$applyTo = function(arglist__154869) {
    var atom = cljs.core.first(arglist__154869);
    var f = cljs.core.first(cljs.core.next(arglist__154869));
    var args = cljs.core.rest(cljs.core.next(arglist__154869));
    return b_swap_BANG___delegate(atom, f, args)
  };
  b_swap_BANG_.cljs$lang$arity$variadic = b_swap_BANG___delegate;
  return b_swap_BANG_
}();
de.karolski.teeter_totter.bind.b_send_STAR_ = function() {
  var b_send_STAR___delegate = function(send_fn, agent, f, args) {
    if(void 0 === de.karolski.teeter_totter.bind.t154877) {
      de.karolski.teeter_totter.bind.t154877 = function(args, f, agent, send_fn, b_send_STAR_, meta154878) {
        this.args = args;
        this.f = f;
        this.agent = agent;
        this.send_fn = send_fn;
        this.b_send_STAR_ = b_send_STAR_;
        this.meta154878 = meta154878;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t154877.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t154877.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154877")
      };
      de.karolski.teeter_totter.bind.t154877.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t154877.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__154880 = this;
        return de.karolski.teeter_totter.bind.subscribe.call(null, this__154880.agent, handler)
      };
      de.karolski.teeter_totter.bind.t154877.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
        var this__154881 = this;
        return cljs.core.apply.call(null, this__154881.send_fn, this__154881.agent, this__154881.f, v, this__154881.args)
      };
      de.karolski.teeter_totter.bind.t154877.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154879) {
        var this__154882 = this;
        return this__154882.meta154878
      };
      de.karolski.teeter_totter.bind.t154877.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154879, meta154878) {
        var this__154883 = this;
        return new de.karolski.teeter_totter.bind.t154877(this__154883.args, this__154883.f, this__154883.agent, this__154883.send_fn, this__154883.b_send_STAR_, meta154878)
      };
      de.karolski.teeter_totter.bind.t154877
    }else {
    }
    return new de.karolski.teeter_totter.bind.t154877(args, f, agent, send_fn, b_send_STAR_, null)
  };
  var b_send_STAR_ = function(send_fn, agent, f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 3), 0)
    }
    return b_send_STAR___delegate.call(this, send_fn, agent, f, args)
  };
  b_send_STAR_.cljs$lang$maxFixedArity = 3;
  b_send_STAR_.cljs$lang$applyTo = function(arglist__154884) {
    var send_fn = cljs.core.first(arglist__154884);
    var agent = cljs.core.first(cljs.core.next(arglist__154884));
    var f = cljs.core.first(cljs.core.next(cljs.core.next(arglist__154884)));
    var args = cljs.core.rest(cljs.core.next(cljs.core.next(arglist__154884)));
    return b_send_STAR___delegate(send_fn, agent, f, args)
  };
  b_send_STAR_.cljs$lang$arity$variadic = b_send_STAR___delegate;
  return b_send_STAR_
}();
de.karolski.teeter_totter.bind.property = function property(target, property_kw) {
  if(void 0 === de.karolski.teeter_totter.bind.t154893) {
    de.karolski.teeter_totter.bind.t154893 = function(property_kw, target, property, meta154894) {
      this.property_kw = property_kw;
      this.target = target;
      this.property = property;
      this.meta154894 = meta154894;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    de.karolski.teeter_totter.bind.t154893.cljs$lang$type = true;
    de.karolski.teeter_totter.bind.t154893.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
      return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154893")
    };
    de.karolski.teeter_totter.bind.t154893.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
    de.karolski.teeter_totter.bind.t154893.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
      var this__154896 = this;
      var fw__154897 = de.karolski.teeter_totter.core.framework.call(null);
      de.karolski.teeter_totter.core._add_listener.call(null, fw__154897, this__154896.target, this__154896.property_kw, handler);
      return function() {
        return de.karolski.teeter_totter.core._remove_listener.call(null, fw__154897, this__154896.target, this__154896.property_kw, handler)
      }
    };
    de.karolski.teeter_totter.bind.t154893.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
      var this__154898 = this;
      return de.karolski.teeter_totter.core.config_BANG_.call(null, this__154898.target, this__154898.property_kw, v)
    };
    de.karolski.teeter_totter.bind.t154893.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154895) {
      var this__154899 = this;
      return this__154899.meta154894
    };
    de.karolski.teeter_totter.bind.t154893.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154895, meta154894) {
      var this__154900 = this;
      return new de.karolski.teeter_totter.bind.t154893(this__154900.property_kw, this__154900.target, this__154900.property, meta154894)
    };
    de.karolski.teeter_totter.bind.t154893
  }else {
  }
  return new de.karolski.teeter_totter.bind.t154893(property_kw, target, property, null)
};
de.karolski.teeter_totter.bind.selection = function() {
  var selection = null;
  var selection__1 = function(widget) {
    return selection.call(null, widget, cljs.core.ObjMap.EMPTY)
  };
  var selection__2 = function(widget, options) {
    if(void 0 === de.karolski.teeter_totter.bind.t154908) {
      de.karolski.teeter_totter.bind.t154908 = function(options, widget, selection, meta154909) {
        this.options = options;
        this.widget = widget;
        this.selection = selection;
        this.meta154909 = meta154909;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t154908.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t154908.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154908")
      };
      de.karolski.teeter_totter.bind.t154908.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t154908.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__154911 = this;
        return ssc.listen.call(null, this__154911.widget, "\ufdd0'selection", function(_) {
          return handler.call(null, ssc.selection.call(null, this__154911.widget, this__154911.options))
        })
      };
      de.karolski.teeter_totter.bind.t154908.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
        var this__154912 = this;
        return ssc.selection_BANG_.call(null, this__154912.widget, this__154912.options, v)
      };
      de.karolski.teeter_totter.bind.t154908.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154910) {
        var this__154913 = this;
        return this__154913.meta154909
      };
      de.karolski.teeter_totter.bind.t154908.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154910, meta154909) {
        var this__154914 = this;
        return new de.karolski.teeter_totter.bind.t154908(this__154914.options, this__154914.widget, this__154914.selection, meta154909)
      };
      de.karolski.teeter_totter.bind.t154908
    }else {
    }
    return new de.karolski.teeter_totter.bind.t154908(options, widget, selection, null)
  };
  selection = function(widget, options) {
    switch(arguments.length) {
      case 1:
        return selection__1.call(this, widget);
      case 2:
        return selection__2.call(this, widget, options)
    }
    throw"Invalid arity: " + arguments.length;
  };
  selection.cljs$lang$arity$1 = selection__1;
  selection.cljs$lang$arity$2 = selection__2;
  return selection
}();
de.karolski.teeter_totter.bind.value = function value(widget) {
  if(void 0 === de.karolski.teeter_totter.bind.t154922) {
    de.karolski.teeter_totter.bind.t154922 = function(widget, value, meta154923) {
      this.widget = widget;
      this.value = value;
      this.meta154923 = meta154923;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    de.karolski.teeter_totter.bind.t154922.cljs$lang$type = true;
    de.karolski.teeter_totter.bind.t154922.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
      return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154922")
    };
    de.karolski.teeter_totter.bind.t154922.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
    de.karolski.teeter_totter.bind.t154922.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
      var this__154925 = this;
      throw Error("Can't subscribe to value");
    };
    de.karolski.teeter_totter.bind.t154922.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
      var this__154926 = this;
      return ssc.value_BANG_.call(null, this__154926.widget, v)
    };
    de.karolski.teeter_totter.bind.t154922.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154924) {
      var this__154927 = this;
      return this__154927.meta154923
    };
    de.karolski.teeter_totter.bind.t154922.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154924, meta154923) {
      var this__154928 = this;
      return new de.karolski.teeter_totter.bind.t154922(this__154928.widget, this__154928.value, meta154923)
    };
    de.karolski.teeter_totter.bind.t154922
  }else {
  }
  return new de.karolski.teeter_totter.bind.t154922(widget, value, null)
};
de.karolski.teeter_totter.bind.transform = function() {
  var transform__delegate = function(f, args) {
    var state__154944 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'handlers", "\ufdd0'value"], {"\ufdd0'handlers":cljs.core.PersistentVector.EMPTY, "\ufdd0'value":null}));
    if(void 0 === de.karolski.teeter_totter.bind.t154945) {
      de.karolski.teeter_totter.bind.t154945 = function(state, args, f, transform, meta154946) {
        this.state = state;
        this.args = args;
        this.f = f;
        this.transform = transform;
        this.meta154946 = meta154946;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t154945.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t154945.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154945")
      };
      de.karolski.teeter_totter.bind.t154945.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t154945.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__154948 = this;
        cljs.core.swap_BANG_.call(null, this__154948.state, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'handlers"], true), cljs.core.conj, handler);
        return function() {
          return cljs.core.swap_BANG_.call(null, this__154948.state, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'handlers"], true), cljs.core.partial.call(null, de.karolski.teeter_totter.bind.remove_handler, handler))
        }
      };
      de.karolski.teeter_totter.bind.t154945.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
        var this__154949 = this;
        var new_value__154950 = (new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__154949.state, cljs.core.assoc, "\ufdd0'value", cljs.core.apply.call(null, this__154949.f, v, this__154949.args)));
        var G__154951__154952 = cljs.core.seq.call(null, (new cljs.core.Keyword("\ufdd0'handlers")).call(null, cljs.core.deref.call(null, this__154949.state)));
        if(G__154951__154952) {
          var h__154953 = cljs.core.first.call(null, G__154951__154952);
          var G__154951__154954 = G__154951__154952;
          while(true) {
            h__154953.call(null, new_value__154950);
            var temp__4011__auto____154955 = cljs.core.next.call(null, G__154951__154954);
            if(temp__4011__auto____154955) {
              var G__154951__154956 = temp__4011__auto____154955;
              var G__154959 = cljs.core.first.call(null, G__154951__154956);
              var G__154960 = G__154951__154956;
              h__154953 = G__154959;
              G__154951__154954 = G__154960;
              continue
            }else {
              return null
            }
            break
          }
        }else {
          return null
        }
      };
      de.karolski.teeter_totter.bind.t154945.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154947) {
        var this__154957 = this;
        return this__154957.meta154946
      };
      de.karolski.teeter_totter.bind.t154945.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154947, meta154946) {
        var this__154958 = this;
        return new de.karolski.teeter_totter.bind.t154945(this__154958.state, this__154958.args, this__154958.f, this__154958.transform, meta154946)
      };
      de.karolski.teeter_totter.bind.t154945
    }else {
    }
    return new de.karolski.teeter_totter.bind.t154945(state__154944, args, f, transform, null)
  };
  var transform = function(f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return transform__delegate.call(this, f, args)
  };
  transform.cljs$lang$maxFixedArity = 1;
  transform.cljs$lang$applyTo = function(arglist__154961) {
    var f = cljs.core.first(arglist__154961);
    var args = cljs.core.rest(arglist__154961);
    return transform__delegate(f, args)
  };
  transform.cljs$lang$arity$variadic = transform__delegate;
  return transform
}();
de.karolski.teeter_totter.bind.b_do_STAR_ = function() {
  var b_do_STAR___delegate = function(f, args) {
    if(void 0 === de.karolski.teeter_totter.bind.t154969) {
      de.karolski.teeter_totter.bind.t154969 = function(args, f, b_do_STAR_, meta154970) {
        this.args = args;
        this.f = f;
        this.b_do_STAR_ = b_do_STAR_;
        this.meta154970 = meta154970;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t154969.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t154969.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154969")
      };
      de.karolski.teeter_totter.bind.t154969.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t154969.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__154972 = this;
        throw new Error("Can't subscribe to b-do*");
      };
      de.karolski.teeter_totter.bind.t154969.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
        var this__154973 = this;
        return cljs.core.apply.call(null, this__154973.f, v, this__154973.args)
      };
      de.karolski.teeter_totter.bind.t154969.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154971) {
        var this__154974 = this;
        return this__154974.meta154970
      };
      de.karolski.teeter_totter.bind.t154969.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154971, meta154970) {
        var this__154975 = this;
        return new de.karolski.teeter_totter.bind.t154969(this__154975.args, this__154975.f, this__154975.b_do_STAR_, meta154970)
      };
      de.karolski.teeter_totter.bind.t154969
    }else {
    }
    return new de.karolski.teeter_totter.bind.t154969(args, f, b_do_STAR_, null)
  };
  var b_do_STAR_ = function(f, var_args) {
    var args = null;
    if(goog.isDef(var_args)) {
      args = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
    }
    return b_do_STAR___delegate.call(this, f, args)
  };
  b_do_STAR_.cljs$lang$maxFixedArity = 1;
  b_do_STAR_.cljs$lang$applyTo = function(arglist__154976) {
    var f = cljs.core.first(arglist__154976);
    var args = cljs.core.rest(arglist__154976);
    return b_do_STAR___delegate(f, args)
  };
  b_do_STAR_.cljs$lang$arity$variadic = b_do_STAR___delegate;
  return b_do_STAR_
}();
de.karolski.teeter_totter.bind.filter = function filter(pred) {
  var state__154991 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'handlers", "\ufdd0'value"], {"\ufdd0'handlers":cljs.core.PersistentVector.EMPTY, "\ufdd0'value":null}));
  if(void 0 === de.karolski.teeter_totter.bind.t154992) {
    de.karolski.teeter_totter.bind.t154992 = function(state, pred, filter, meta154993) {
      this.state = state;
      this.pred = pred;
      this.filter = filter;
      this.meta154993 = meta154993;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    de.karolski.teeter_totter.bind.t154992.cljs$lang$type = true;
    de.karolski.teeter_totter.bind.t154992.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
      return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t154992")
    };
    de.karolski.teeter_totter.bind.t154992.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
    de.karolski.teeter_totter.bind.t154992.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
      var this__154995 = this;
      cljs.core.swap_BANG_.call(null, this__154995.state, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'handlers"], true), cljs.core.conj, handler);
      return function() {
        return cljs.core.swap_BANG_.call(null, this__154995.state, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'handlers"], true), cljs.core.partial.call(null, de.karolski.teeter_totter.bind.remove_handler, handler))
      }
    };
    de.karolski.teeter_totter.bind.t154992.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
      var this__154996 = this;
      if(cljs.core.truth_(this__154996.pred.call(null, v))) {
        cljs.core.swap_BANG_.call(null, this__154996.state, cljs.core.assoc, "\ufdd0'value", v);
        var G__154997__154998 = cljs.core.seq.call(null, (new cljs.core.Keyword("\ufdd0'handlers")).call(null, cljs.core.deref.call(null, this__154996.state)));
        if(G__154997__154998) {
          var h__154999 = cljs.core.first.call(null, G__154997__154998);
          var G__154997__155000 = G__154997__154998;
          while(true) {
            h__154999.call(null, v);
            var temp__4011__auto____155001 = cljs.core.next.call(null, G__154997__155000);
            if(temp__4011__auto____155001) {
              var G__154997__155002 = temp__4011__auto____155001;
              var G__155005 = cljs.core.first.call(null, G__154997__155002);
              var G__155006 = G__154997__155002;
              h__154999 = G__155005;
              G__154997__155000 = G__155006;
              continue
            }else {
              return null
            }
            break
          }
        }else {
          return null
        }
      }else {
        return null
      }
    };
    de.karolski.teeter_totter.bind.t154992.prototype.cljs$core$IMeta$_meta$arity$1 = function(_154994) {
      var this__155003 = this;
      return this__155003.meta154993
    };
    de.karolski.teeter_totter.bind.t154992.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_154994, meta154993) {
      var this__155004 = this;
      return new de.karolski.teeter_totter.bind.t154992(this__155004.state, this__155004.pred, this__155004.filter, meta154993)
    };
    de.karolski.teeter_totter.bind.t154992
  }else {
  }
  return new de.karolski.teeter_totter.bind.t154992(state__154991, pred, filter, null)
};
de.karolski.teeter_totter.bind.some = function some(pred) {
  var state__155022 = cljs.core.atom.call(null, cljs.core.ObjMap.fromObject(["\ufdd0'handlers", "\ufdd0'value"], {"\ufdd0'handlers":cljs.core.PersistentVector.EMPTY, "\ufdd0'value":null}));
  if(void 0 === de.karolski.teeter_totter.bind.t155023) {
    de.karolski.teeter_totter.bind.t155023 = function(state, pred, some, meta155024) {
      this.state = state;
      this.pred = pred;
      this.some = some;
      this.meta155024 = meta155024;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    de.karolski.teeter_totter.bind.t155023.cljs$lang$type = true;
    de.karolski.teeter_totter.bind.t155023.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
      return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t155023")
    };
    de.karolski.teeter_totter.bind.t155023.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
    de.karolski.teeter_totter.bind.t155023.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
      var this__155026 = this;
      cljs.core.swap_BANG_.call(null, this__155026.state, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'handlers"], true), cljs.core.conj, handler);
      return function() {
        return cljs.core.swap_BANG_.call(null, this__155026.state, cljs.core.update_in, cljs.core.PersistentVector.fromArray(["\ufdd0'handlers"], true), cljs.core.partial.call(null, de.karolski.teeter_totter.bind.remove_handler, handler))
      }
    };
    de.karolski.teeter_totter.bind.t155023.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
      var this__155027 = this;
      var new_value__155028 = (new cljs.core.Keyword("\ufdd0'value")).call(null, cljs.core.swap_BANG_.call(null, this__155027.state, cljs.core.assoc, "\ufdd0'value", this__155027.pred.call(null, v)));
      if(cljs.core.truth_(new_value__155028)) {
        var G__155029__155030 = cljs.core.seq.call(null, (new cljs.core.Keyword("\ufdd0'handlers")).call(null, cljs.core.deref.call(null, this__155027.state)));
        if(G__155029__155030) {
          var h__155031 = cljs.core.first.call(null, G__155029__155030);
          var G__155029__155032 = G__155029__155030;
          while(true) {
            h__155031.call(null, new_value__155028);
            var temp__4011__auto____155033 = cljs.core.next.call(null, G__155029__155032);
            if(temp__4011__auto____155033) {
              var G__155029__155034 = temp__4011__auto____155033;
              var G__155037 = cljs.core.first.call(null, G__155029__155034);
              var G__155038 = G__155029__155034;
              h__155031 = G__155037;
              G__155029__155032 = G__155038;
              continue
            }else {
              return null
            }
            break
          }
        }else {
          return null
        }
      }else {
        return null
      }
    };
    de.karolski.teeter_totter.bind.t155023.prototype.cljs$core$IMeta$_meta$arity$1 = function(_155025) {
      var this__155035 = this;
      return this__155035.meta155024
    };
    de.karolski.teeter_totter.bind.t155023.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_155025, meta155024) {
      var this__155036 = this;
      return new de.karolski.teeter_totter.bind.t155023(this__155036.state, this__155036.pred, this__155036.some, meta155024)
    };
    de.karolski.teeter_totter.bind.t155023
  }else {
  }
  return new de.karolski.teeter_totter.bind.t155023(state__155022, pred, some, null)
};
de.karolski.teeter_totter.bind.tee = function() {
  var tee__delegate = function(bindables) {
    if(void 0 === de.karolski.teeter_totter.bind.t155052) {
      de.karolski.teeter_totter.bind.t155052 = function(bindables, tee, meta155053) {
        this.bindables = bindables;
        this.tee = tee;
        this.meta155053 = meta155053;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216
      };
      de.karolski.teeter_totter.bind.t155052.cljs$lang$type = true;
      de.karolski.teeter_totter.bind.t155052.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
        return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t155052")
      };
      de.karolski.teeter_totter.bind.t155052.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
      de.karolski.teeter_totter.bind.t155052.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
        var this__155055 = this;
        throw new Error("tee bindables don't support subscription");
      };
      de.karolski.teeter_totter.bind.t155052.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
        var this__155056 = this;
        var G__155057__155058 = cljs.core.seq.call(null, this__155056.bindables);
        if(G__155057__155058) {
          var b__155059 = cljs.core.first.call(null, G__155057__155058);
          var G__155057__155060 = G__155057__155058;
          while(true) {
            de.karolski.teeter_totter.bind.notify.call(null, b__155059, v);
            var temp__4011__auto____155061 = cljs.core.next.call(null, G__155057__155060);
            if(temp__4011__auto____155061) {
              var G__155057__155062 = temp__4011__auto____155061;
              var G__155065 = cljs.core.first.call(null, G__155057__155062);
              var G__155066 = G__155057__155062;
              b__155059 = G__155065;
              G__155057__155060 = G__155066;
              continue
            }else {
              return null
            }
            break
          }
        }else {
          return null
        }
      };
      de.karolski.teeter_totter.bind.t155052.prototype.cljs$core$IMeta$_meta$arity$1 = function(_155054) {
        var this__155063 = this;
        return this__155063.meta155053
      };
      de.karolski.teeter_totter.bind.t155052.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_155054, meta155053) {
        var this__155064 = this;
        return new de.karolski.teeter_totter.bind.t155052(this__155064.bindables, this__155064.tee, meta155053)
      };
      de.karolski.teeter_totter.bind.t155052
    }else {
    }
    return new de.karolski.teeter_totter.bind.t155052(bindables, tee, null)
  };
  var tee = function(var_args) {
    var bindables = null;
    if(goog.isDef(var_args)) {
      bindables = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
    }
    return tee__delegate.call(this, bindables)
  };
  tee.cljs$lang$maxFixedArity = 0;
  tee.cljs$lang$applyTo = function(arglist__155067) {
    var bindables = cljs.core.seq(arglist__155067);
    return tee__delegate(bindables)
  };
  tee.cljs$lang$arity$variadic = tee__delegate;
  return tee
}();
de.karolski.teeter_totter.bind.notify_when_STAR_ = function notify_when_STAR_(schedule_fn) {
  var handlers__155082 = cljs.core.atom.call(null, cljs.core.PersistentVector.EMPTY);
  if(void 0 === de.karolski.teeter_totter.bind.t155083) {
    de.karolski.teeter_totter.bind.t155083 = function(handlers, schedule_fn, notify_when_STAR_, meta155084) {
      this.handlers = handlers;
      this.schedule_fn = schedule_fn;
      this.notify_when_STAR_ = notify_when_STAR_;
      this.meta155084 = meta155084;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216
    };
    de.karolski.teeter_totter.bind.t155083.cljs$lang$type = true;
    de.karolski.teeter_totter.bind.t155083.cljs$lang$ctorPrSeq = function(this__2346__auto__) {
      return cljs.core.list.call(null, "de.karolski.teeter-totter.bind/t155083")
    };
    de.karolski.teeter_totter.bind.t155083.prototype.de$karolski$teeter_totter$bind$Bindable$ = true;
    de.karolski.teeter_totter.bind.t155083.prototype.de$karolski$teeter_totter$bind$Bindable$subscribe$arity$2 = function(this$, handler) {
      var this__155086 = this;
      cljs.core.swap_BANG_.call(null, this__155086.handlers, cljs.core.conj, handler);
      return function() {
        return cljs.core.swap_BANG_.call(null, this__155086.handlers, de.karolski.teeter_totter.bind.remove_handler, handler)
      }
    };
    de.karolski.teeter_totter.bind.t155083.prototype.de$karolski$teeter_totter$bind$Bindable$notify$arity$2 = function(this$, v) {
      var this__155087 = this;
      return this__155087.schedule_fn.call(null, function() {
        var G__155088__155089 = cljs.core.seq.call(null, cljs.core.deref.call(null, this__155087.handlers));
        if(G__155088__155089) {
          var h__155090 = cljs.core.first.call(null, G__155088__155089);
          var G__155088__155091 = G__155088__155089;
          while(true) {
            h__155090.call(null, v);
            var temp__4011__auto____155092 = cljs.core.next.call(null, G__155088__155091);
            if(temp__4011__auto____155092) {
              var G__155088__155093 = temp__4011__auto____155092;
              var G__155096 = cljs.core.first.call(null, G__155088__155093);
              var G__155097 = G__155088__155093;
              h__155090 = G__155096;
              G__155088__155091 = G__155097;
              continue
            }else {
              return null
            }
            break
          }
        }else {
          return null
        }
      })
    };
    de.karolski.teeter_totter.bind.t155083.prototype.cljs$core$IMeta$_meta$arity$1 = function(_155085) {
      var this__155094 = this;
      return this__155094.meta155084
    };
    de.karolski.teeter_totter.bind.t155083.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_155085, meta155084) {
      var this__155095 = this;
      return new de.karolski.teeter_totter.bind.t155083(this__155095.handlers, this__155095.schedule_fn, this__155095.notify_when_STAR_, meta155084)
    };
    de.karolski.teeter_totter.bind.t155083
  }else {
  }
  return new de.karolski.teeter_totter.bind.t155083(handlers__155082, schedule_fn, notify_when_STAR_, null)
};
de.karolski.teeter_totter.bind.notify_later = function notify_later() {
  return de.karolski.teeter_totter.bind.notify_when_STAR_.call(null, invoke.invoke_later_STAR_)
};
de.karolski.teeter_totter.bind.notify_soon = function notify_soon() {
  return de.karolski.teeter_totter.bind.notify_when_STAR_.call(null, invoke.invoke_soon_STAR_)
};
de.karolski.teeter_totter.bind.notify_now = function notify_now() {
  return de.karolski.teeter_totter.bind.notify_when_STAR_.call(null, invoke.invoke_now_STAR_)
};
goog.provide("de.karolski.teeter_totter.frameworks.linb");
goog.require("cljs.core");
goog.require("de.karolski.teeter_totter.bind");
goog.require("de.karolski.teeter_totter.core");
goog.require("de.karolski.teeter_totter.selector");
goog.require("de.karolski.teeter_totter.util");
goog.require("de.karolski.teeter_totter.util");
goog.require("de.karolski.teeter_totter.bind");
goog.require("de.karolski.teeter_totter.core");
goog.require("de.karolski.teeter_totter.selector");
goog.require("de.karolski.teeter_totter.util");
goog.require("de.karolski.teeter_totter.bind");
goog.require("de.karolski.teeter_totter.core");
de.karolski.teeter_totter.frameworks.linb.Framework = function() {
};
de.karolski.teeter_totter.frameworks.linb.Framework.cljs$lang$type = true;
de.karolski.teeter_totter.frameworks.linb.Framework.cljs$lang$ctorPrSeq = function(this__2347__auto__) {
  return cljs.core.list.call(null, "de.karolski.teeter-totter.frameworks.linb/Framework")
};
de.karolski.teeter_totter.frameworks.linb.Framework;
de.karolski.teeter_totter.frameworks.linb.property_kw__GT_property_name = cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'title", "\ufdd0'value"], {"\ufdd0'text":"value", "\ufdd0'title":"caption", "\ufdd0'value":"value"});
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$PropertyChangeManager$ = true;
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$PropertyChangeManager$_add_listener$arity$4 = function(framework, widget, option_kw, handler) {
  if(cljs.core.not.call(null, widget.de$karolski$teeter_totter$frameworks$linb$_add_listener__listener_map)) {
    var wrapped__7907__auto____154528 = widget.afterPropertyChanged;
    widget.afterPropertyChanged = function() {
      var G__154550__delegate = function(args__7908__auto__) {
        var vec__154529__154530 = cljs.core.concat.call(null, args__7908__auto__, cljs.core.PersistentVector.fromArray([function() {
          var G__154551__delegate = function(inst__7909__auto__, args2__7910__auto__) {
            return wrapped__7907__auto____154528.apply(inst__7909__auto__, de.karolski.teeter_totter.util.clj__GT_js.call(null, args2__7910__auto__))
          };
          var G__154551 = function(inst__7909__auto__, var_args) {
            var args2__7910__auto__ = null;
            if(goog.isDef(var_args)) {
              args2__7910__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 1), 0)
            }
            return G__154551__delegate.call(this, inst__7909__auto__, args2__7910__auto__)
          };
          G__154551.cljs$lang$maxFixedArity = 1;
          G__154551.cljs$lang$applyTo = function(arglist__154552) {
            var inst__7909__auto__ = cljs.core.first(arglist__154552);
            var args2__7910__auto__ = cljs.core.rest(arglist__154552);
            return G__154551__delegate(inst__7909__auto__, args2__7910__auto__)
          };
          G__154551.cljs$lang$arity$variadic = G__154551__delegate;
          return G__154551
        }()], true));
        var args__154531 = cljs.core.nthnext.call(null, vec__154529__154530, 0);
        var oldf__154532 = cljs.core.last.call(null, args__154531);
        var args__154533 = cljs.core.butlast.call(null, args__154531);
        var this__154534 = this;
        if(cljs.core.fn_QMARK_.call(null, cljs.core.first.call(null, args__154533))) {
          var f__154535 = cljs.core.first.call(null, args__154533);
          return oldf__154532.call(null, this__154534, function(profile, opt_name, value, old_value) {
            f__154535.call(null, profile, opt_name, value, old_value);
            var temp__4009__auto____154536 = cljs.core.get_in.call(null, cljs.core.deref.call(null, profile.boxing().de$karolski$teeter_totter$frameworks$linb$_add_listener__listener_map), cljs.core.PersistentVector.fromArray([opt_name], true));
            if(cljs.core.truth_(temp__4009__auto____154536)) {
              var handlers__154537 = temp__4009__auto____154536;
              var G__154538__154539 = cljs.core.seq.call(null, handlers__154537);
              if(G__154538__154539) {
                var handler__154540 = cljs.core.first.call(null, G__154538__154539);
                var G__154538__154541 = G__154538__154539;
                while(true) {
                  handler__154540.call(null, value);
                  var temp__4011__auto____154542 = cljs.core.next.call(null, G__154538__154541);
                  if(temp__4011__auto____154542) {
                    var G__154538__154543 = temp__4011__auto____154542;
                    var G__154553 = cljs.core.first.call(null, G__154538__154543);
                    var G__154554 = G__154538__154543;
                    handler__154540 = G__154553;
                    G__154538__154541 = G__154554;
                    continue
                  }else {
                    return null
                  }
                  break
                }
              }else {
                return null
              }
            }else {
              return null
            }
          })
        }else {
          return cljs.core.apply.call(null, oldf__154532, this__154534, args__154533)
        }
      };
      var G__154550 = function(var_args) {
        var args__7908__auto__ = null;
        if(goog.isDef(var_args)) {
          args__7908__auto__ = cljs.core.array_seq(Array.prototype.slice.call(arguments, 0), 0)
        }
        return G__154550__delegate.call(this, args__7908__auto__)
      };
      G__154550.cljs$lang$maxFixedArity = 0;
      G__154550.cljs$lang$applyTo = function(arglist__154555) {
        var args__7908__auto__ = cljs.core.seq(arglist__154555);
        return G__154550__delegate(args__7908__auto__)
      };
      G__154550.cljs$lang$arity$variadic = G__154550__delegate;
      return G__154550
    }();
    widget.de$karolski$teeter_totter$frameworks$linb$_add_listener__listener_map = cljs.core.atom.call(null, cljs.core.ObjMap.EMPTY)
  }else {
  }
  return cljs.core.swap_BANG_.call(null, widget.de$karolski$teeter_totter$frameworks$linb$_add_listener__listener_map, function(m) {
    return cljs.core.update_in.call(null, m, cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.frameworks.linb.property_kw__GT_property_name.call(null, option_kw)], true), function(p1__154526_SHARP_) {
      return cljs.core.concat.call(null, p1__154526_SHARP_, cljs.core.PersistentVector.fromArray([handler], true))
    })
  })
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$PropertyChangeManager$_remove_listener$arity$4 = function(framework, widget, option_kw, handler) {
  return cljs.core.swap_BANG_.call(null, widget.de$karolski$teeter_totter$frameworks$linb$_add_listener__listener_map, function(v) {
    return cljs.core.update_in.call(null, v, cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.frameworks.linb.property_kw__GT_property_name.call(null, option_kw)], true), function(p1__154527_SHARP_) {
      return cljs.core.remove.call(null, cljs.core.PersistentHashSet.fromArray([handler]), p1__154527_SHARP_)
    })
  })
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$APanelFactory$ = true;
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$APanelFactory$_panel$arity$2 = function(_, argmap) {
  var G__154544__154545 = new linb.UI.Block;
  de.karolski.teeter_totter.core.config_BANG_.call(null, G__154544__154545, "\ufdd0'border-type", "none");
  de.karolski.teeter_totter.core.config_BANG_.call(null, G__154544__154545, "\ufdd0'selectable?", false);
  de.karolski.teeter_totter.core.config_BANG_.call(null, G__154544__154545, "\ufdd0'dock", "\ufdd0'fill");
  return G__154544__154545
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AEventBinder$ = true;
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$4 = function(_, obj, event_kw, cb) {
  return de.karolski.teeter_totter.core._bind_event.call(null, obj, event_kw, cb)
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$ = true;
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_dialog$arity$2 = function(_, argmap) {
  return new linb.UI.Dialog
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_button$arity$2 = function(_, argmap) {
  var G__154546__154547 = new linb.UI.Button;
  de.karolski.teeter_totter.core.config_BANG_.call(null, G__154546__154547, "\ufdd0'selectable?", false);
  return G__154546__154547
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_label$arity$2 = function(_, argmap) {
  var G__154548__154549 = new linb.UI.Label;
  de.karolski.teeter_totter.core.config_BANG_.call(null, G__154548__154549, "\ufdd0'selectable?", false);
  return G__154548__154549
};
de.karolski.teeter_totter.frameworks.linb.Framework.prototype.de$karolski$teeter_totter$core$AWidgetFactory$_text$arity$2 = function(_, argmap) {
  return new linb.UI.Input
};
linb.UI.Button.prototype.de$karolski$teeter_totter$core$AEventBinder$ = true;
linb.UI.Button.prototype.de$karolski$teeter_totter$core$AEventBinder$_bind_event$arity$3 = function(btn, event_kw, cb) {
  if(cljs.core._EQ_.call(null, event_kw, "\ufdd0'action")) {
    return btn.onClick(cb)
  }else {
    return null
  }
};
de.karolski.teeter_totter.frameworks.linb._PLUS_linb_ui_opt_map_PLUS_ = cljs.core.ObjMap.fromObject(["\ufdd0'items", "\ufdd0'margin", "\ufdd0'selectable?", "\ufdd0'listen", "\ufdd0'visible?", "\ufdd0'dock", "\ufdd0'orientation", "\ufdd0'id", "\ufdd0'height"], {"\ufdd0'items":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154577_SHARP_) {
  return de.karolski.teeter_totter.util.children.call(null, p1__154577_SHARP_)
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154579_SHARP_, p2__154578_SHARP_) {
  var G__154594__154595 = cljs.core.seq.call(null, p2__154578_SHARP_);
  if(G__154594__154595) {
    var item__154596 = cljs.core.first.call(null, G__154594__154595);
    var G__154594__154597 = G__154594__154595;
    while(true) {
      var G__154598__154599 = item__154596;
      G__154598__154599.setDock("left");
      G__154598__154599;
      p1__154579_SHARP_.append(item__154596);
      var temp__4011__auto____154600 = cljs.core.next.call(null, G__154594__154597);
      if(temp__4011__auto____154600) {
        var G__154594__154601 = temp__4011__auto____154600;
        var G__154626 = cljs.core.first.call(null, G__154594__154601);
        var G__154627 = G__154594__154601;
        item__154596 = G__154626;
        G__154594__154597 = G__154627;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
}], true), "\ufdd0'margin":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154561_SHARP_) {
  return de.karolski.teeter_totter.util.keywordize_map_keys.call(null, cljs.core.js__GT_clj.call(null, p1__154561_SHARP_.getDockMargin()))
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154562_SHARP_, p2__154563_SHARP_) {
  return p1__154562_SHARP_.setDockMargin(de.karolski.teeter_totter.core.jsObj.call(null, de.karolski.teeter_totter.util.stringify_map_keys.call(null, cljs.core.merge.call(null, de.karolski.teeter_totter.core.config.call(null, p1__154562_SHARP_, "\ufdd0'margin"), p2__154563_SHARP_))))
}], true), "\ufdd0'selectable?":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154566_SHARP_) {
  return p1__154566_SHARP_.getSelectable()
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154567_SHARP_, p2__154568_SHARP_) {
  return p1__154567_SHARP_.setSelectable(p2__154568_SHARP_)
}], true), "\ufdd0'listen":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(_) {
  throw new Error("Not implemented");
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154564_SHARP_, p2__154565_SHARP_) {
  return cljs.core.apply.call(null, de.karolski.teeter_totter.core.listen, p1__154564_SHARP_, p2__154565_SHARP_)
}], true), "\ufdd0'visible?":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154559_SHARP_) {
  return p1__154559_SHARP_.hide()
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154560_SHARP_) {
  return p1__154560_SHARP_.show()
}], true), "\ufdd0'dock":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154572_SHARP_) {
  return p1__154572_SHARP_.getDock()
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154573_SHARP_, p2__154574_SHARP_) {
  return p1__154573_SHARP_.setDock(cljs.core.name.call(null, p2__154574_SHARP_))
}], true), "\ufdd0'orientation":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(_) {
  throw new Error("Not implemented");
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154576_SHARP_, p2__154575_SHARP_) {
  if(cljs.core._EQ_.call(null, p2__154575_SHARP_, "\ufdd0'horizontal")) {
    var G__154614__154615 = cljs.core.seq.call(null, de.karolski.teeter_totter.core.config.call(null, p1__154576_SHARP_, "\ufdd0'items"));
    if(G__154614__154615) {
      var item__154616 = cljs.core.first.call(null, G__154614__154615);
      var G__154614__154617 = G__154614__154615;
      while(true) {
        item__154616.setDock("left");
        var temp__4011__auto____154618 = cljs.core.next.call(null, G__154614__154617);
        if(temp__4011__auto____154618) {
          var G__154614__154619 = temp__4011__auto____154618;
          var G__154628 = cljs.core.first.call(null, G__154614__154619);
          var G__154629 = G__154614__154619;
          item__154616 = G__154628;
          G__154614__154617 = G__154629;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }else {
    var G__154620__154621 = cljs.core.seq.call(null, de.karolski.teeter_totter.core.config.call(null, p1__154576_SHARP_, "\ufdd0'items"));
    if(G__154620__154621) {
      var item__154622 = cljs.core.first.call(null, G__154620__154621);
      var G__154620__154623 = G__154620__154621;
      while(true) {
        item__154622.setDock("top");
        var temp__4011__auto____154624 = cljs.core.next.call(null, G__154620__154623);
        if(temp__4011__auto____154624) {
          var G__154620__154625 = temp__4011__auto____154624;
          var G__154630 = cljs.core.first.call(null, G__154620__154625);
          var G__154631 = G__154620__154625;
          item__154622 = G__154630;
          G__154620__154623 = G__154631;
          continue
        }else {
          return null
        }
        break
      }
    }else {
      return null
    }
  }
}], true), "\ufdd0'id":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154556_SHARP_) {
  return p1__154556_SHARP_.getAlias()
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154557_SHARP_, p2__154558_SHARP_) {
  return p1__154557_SHARP_.setAlias(p2__154558_SHARP_)
}], true), "\ufdd0'height":cljs.core.PersistentVector.fromArray([function _PLUS_linb_ui_opt_map_PLUS_(p1__154569_SHARP_) {
  return p1__154569_SHARP_.getHeight()
}, function _PLUS_linb_ui_opt_map_PLUS_(p1__154570_SHARP_, p2__154571_SHARP_) {
  return p1__154570_SHARP_.setHeight(p2__154571_SHARP_)
}], true)});
de.karolski.teeter_totter.frameworks.linb._PLUS_linb_button_opt_map_PLUS_ = cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.linb._PLUS_linb_ui_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'text", "\ufdd0'value"], {"\ufdd0'text":cljs.core.PersistentVector.fromArray([function(p1__154580_SHARP_) {
  return p1__154580_SHARP_.getCaption()
}, function(p1__154581_SHARP_, p2__154582_SHARP_) {
  return p1__154581_SHARP_.setCaption(p2__154582_SHARP_)
}], true), "\ufdd0'value":cljs.core.PersistentVector.fromArray([function(p1__154583_SHARP_) {
  return p1__154583_SHARP_.getValue()
}, function(p1__154584_SHARP_, p2__154585_SHARP_) {
  return p1__154584_SHARP_.setValue(p2__154585_SHARP_)
}], true)}));
de.karolski.teeter_totter.frameworks.linb._PLUS_linb_label_opt_map_PLUS_ = de.karolski.teeter_totter.frameworks.linb._PLUS_linb_button_opt_map_PLUS_;
linb.UI.Input.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.Input.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.linb._PLUS_linb_ui_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'text"], {"\ufdd0'text":cljs.core.PersistentVector.fromArray([function(p1__154641_SHARP_) {
    return p1__154641_SHARP_.getValue()
  }, function(p1__154642_SHARP_, p2__154643_SHARP_) {
    return p1__154642_SHARP_.setValue(p2__154643_SHARP_)
  }], true)}))
};
linb.UI.Dialog.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.Dialog.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.linb._PLUS_linb_ui_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'title"], {"\ufdd0'title":cljs.core.PersistentVector.fromArray([function(p1__154635_SHARP_) {
    return p1__154635_SHARP_.getCaption()
  }, function(p1__154636_SHARP_, p2__154637_SHARP_) {
    return p1__154636_SHARP_.setCaption(p2__154637_SHARP_)
  }], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'modal?"], {"\ufdd0'modal?":cljs.core.PersistentVector.fromArray([function() {
    throw new Error("Not implemented");
  }, function() {
    throw new Error("Not implemented");
  }], true)}), cljs.core.ObjMap.fromObject(["\ufdd0'content"], {"\ufdd0'content":cljs.core.PersistentVector.fromArray([function(p1__154638_SHARP_) {
    return cljs.core.first.call(null, p1__154638_SHARP_.getChildren())
  }, function(p1__154639_SHARP_, p2__154640_SHARP_) {
    return p1__154639_SHARP_.append(p2__154640_SHARP_)
  }], true)}))
};
linb.UI.Block.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.Block.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return cljs.core.merge.call(null, de.karolski.teeter_totter.frameworks.linb._PLUS_linb_label_opt_map_PLUS_, cljs.core.ObjMap.fromObject(["\ufdd0'border-type"], {"\ufdd0'border-type":cljs.core.PersistentVector.fromArray([function(p1__154632_SHARP_) {
    return p1__154632_SHARP_.getBorderType()
  }, function(p1__154633_SHARP_, p2__154634_SHARP_) {
    return p1__154633_SHARP_.setBorderType(cljs.core.name.call(null, p2__154634_SHARP_))
  }], true)}))
};
linb.UI.CheckBox.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.CheckBox.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.linb._PLUS_linb_button_opt_map_PLUS_
};
linb.UI.Label.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.Label.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.linb._PLUS_linb_label_opt_map_PLUS_
};
linb.UI.Button.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.Button.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.linb._PLUS_linb_button_opt_map_PLUS_
};
linb.UI.prototype.de$karolski$teeter_totter$core$AConfigurableMap$ = true;
linb.UI.prototype.de$karolski$teeter_totter$core$AConfigurableMap$_config_map$arity$1 = function(c) {
  return de.karolski.teeter_totter.frameworks.linb._PLUS_linb_ui_opt_map_PLUS_
};
linb.UI.prototype.de$karolski$teeter_totter$selector$ASelectable$ = true;
linb.UI.prototype.de$karolski$teeter_totter$selector$ASelectable$id_of_STAR_$arity$1 = function(this$) {
  return this$.getAlias()
};
linb.UI.prototype.de$karolski$teeter_totter$selector$ASelectable$id_of_BANG__STAR_$arity$2 = function(this$, id) {
  return this$.setAlias(id)
};
linb.UI.prototype.de$karolski$teeter_totter$selector$ASelectable$class_of_STAR_$arity$1 = function(this$) {
  return de.karolski.teeter_totter.util.class_of.call(null, this$)
};
linb.UI.prototype.de$karolski$teeter_totter$selector$ASelectable$class_of_BANG__STAR_$arity$2 = function(this$, classes) {
  throw Error("Unsupported operation!");
};
linb.UI.prototype.de$karolski$teeter_totter$util$AInstance$ = true;
linb.UI.prototype.de$karolski$teeter_totter$util$AInstance$class_of_STAR_$arity$1 = function(this$) {
  return de.karolski.teeter_totter.util.class_for_name.call(null, this$.KEY)
};
linb.UI.prototype.de$karolski$teeter_totter$core$AConfigurable$ = true;
linb.UI.prototype.de$karolski$teeter_totter$core$AConfigurable$_config$arity$2 = function(c, key) {
  return cljs.core.get_in.call(null, de.karolski.teeter_totter.core.config_map.call(null, c), cljs.core.PersistentVector.fromArray([key, 0], true)).call(null, c)
};
linb.UI.prototype.de$karolski$teeter_totter$core$AConfigurable$_config_BANG_$arity$3 = function(c, key, val) {
  return cljs.core.get_in.call(null, de.karolski.teeter_totter.core.config_map.call(null, c), cljs.core.PersistentVector.fromArray([key, 1], true)).call(null, c, val)
};
linb.UI.Label.prototype.de$karolski$teeter_totter$bind$ToBindable$ = true;
linb.UI.Label.prototype.de$karolski$teeter_totter$bind$ToBindable$to_bindable_STAR_$arity$1 = function(this$) {
  return de.karolski.teeter_totter.bind.property.call(null, this$, "\ufdd0'text")
};
linb.UI.Button.prototype.de$karolski$teeter_totter$bind$ToBindable$ = true;
linb.UI.Button.prototype.de$karolski$teeter_totter$bind$ToBindable$to_bindable_STAR_$arity$1 = function(this$) {
  return de.karolski.teeter_totter.bind.selection.call(null, this$)
};
linb.UI.prototype.de$karolski$teeter_totter$util$Children$ = true;
linb.UI.prototype.de$karolski$teeter_totter$util$Children$children$arity$1 = function(this$) {
  return cljs.core.map.call(null, function(i) {
    return i._cacheInstance
  }, this$.getChildren().get())
};
linb.UI.prototype.de$karolski$teeter_totter$util$ASimpleNameable$ = true;
linb.UI.prototype.de$karolski$teeter_totter$util$ASimpleNameable$get_simple_name$arity$1 = function(this$) {
  return cljs.core.second.call(null, clojure.string.split.call(null, this$.key, /\./, 2))
};
de.karolski.teeter_totter.frameworks.linb.inherit_protocols = function inherit_protocols(sub, b) {
  var G__154651__154652 = cljs.core.seq.call(null, cljs.core.reverse.call(null, cljs.core.js_keys.call(null, b.prototype)));
  if(G__154651__154652) {
    var key__154653 = cljs.core.first.call(null, G__154651__154652);
    var G__154651__154654 = G__154651__154652;
    while(true) {
      de.karolski.teeter_totter.core.debug.call(null, key__154653 + " = " + _.str.startWith.call(null, key__154653, "de$karolski$teeter_totter"));
      if(cljs.core.truth_(function() {
        var and__3860__auto____154655 = _.str.startWith.call(null, key__154653, "de$karolski$teeter_totter");
        if(cljs.core.truth_(and__3860__auto____154655)) {
          return cljs.core.not.call(null, sub.prototype[key__154653])
        }else {
          return and__3860__auto____154655
        }
      }())) {
        sub.prototype[key__154653] = b.prototype[key__154653]
      }else {
      }
      var temp__4011__auto____154656 = cljs.core.next.call(null, G__154651__154654);
      if(temp__4011__auto____154656) {
        var G__154651__154657 = temp__4011__auto____154656;
        var G__154658 = cljs.core.first.call(null, G__154651__154657);
        var G__154659 = G__154651__154657;
        key__154653 = G__154658;
        G__154651__154654 = G__154659;
        continue
      }else {
        return null
      }
      break
    }
  }else {
    return null
  }
};
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Widget, linb.UI);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Button, linb.UI.Widget);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Dialog, linb.UI.Widget);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Input, linb.UI.Widget);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Label, linb.UI.Widget);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Block, linb.UI.Widget);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Panel, linb.UI);
de.karolski.teeter_totter.frameworks.linb.inherit_protocols.call(null, linb.UI.Pane, linb.UI);
goog.provide("de.karolski.teeter_totter.example");
goog.require("cljs.core");
goog.require("de.karolski.teeter_totter.frameworks.linb");
goog.require("de.karolski.teeter_totter.frameworks.google");
goog.require("de.karolski.teeter_totter.bind");
goog.require("de.karolski.teeter_totter.core");
de.karolski.teeter_totter.example.example1 = function example1() {
  var dlg__155099 = de.karolski.teeter_totter.core.dialog.call(null, "\ufdd0'id", "\ufdd0'dialog", "\ufdd0'title", "Hello There2!", "\ufdd0'content", de.karolski.teeter_totter.core.vertical_panel.call(null, "\ufdd0'id", "\ufdd0'vpanel", "\ufdd0'items", cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.core.horizontal_panel.call(null, "\ufdd0'height", 30, "\ufdd0'margin", cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":5}), "\ufdd0'items", cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.core.label.call(null, 
  "\ufdd0'text", "Name"), de.karolski.teeter_totter.core.text.call(null, "\ufdd0'id", "\ufdd0'name", "\ufdd0'text", "Joe Smith")], true)), de.karolski.teeter_totter.core.horizontal_panel.call(null, "\ufdd0'height", 30, "\ufdd0'margin", cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":5}), "\ufdd0'items", cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.core.label.call(null, "\ufdd0'text", "E-Mail"), de.karolski.teeter_totter.core.text.call(null, "\ufdd0'text", "Joe.Smith@template.com")], 
  true)), de.karolski.teeter_totter.core.horizontal_panel.call(null, "\ufdd0'height", 30, "\ufdd0'margin", cljs.core.ObjMap.fromObject(["\ufdd0'top"], {"\ufdd0'top":5}), "\ufdd0'items", cljs.core.PersistentVector.fromArray([de.karolski.teeter_totter.core.button.call(null, "\ufdd0'text", "Push me!", "\ufdd0'tooltip", "Not implemented", "\ufdd0'color", "green", "\ufdd0'listen", cljs.core.PersistentVector.fromArray(["\ufdd0'action", function(e) {
    return de.karolski.teeter_totter.core.debug.call(null, "Button clicked!")
  }], true))], true))], true)));
  de.karolski.teeter_totter.core.config_BANG_.call(null, dlg__155099, "\ufdd0'visible?", true);
  return de.karolski.teeter_totter.core.debug.call(null, "Selecting: ", de.karolski.teeter_totter.core.config.call(null, de.karolski.teeter_totter.core.select.call(null, dlg__155099, cljs.core.PersistentVector.fromArray(["\ufdd0'#dialog"], true)), "\ufdd0'id"))
};
de.karolski.teeter_totter.example.main = function main() {
  de.karolski.teeter_totter.core.set_framework_BANG_.call(null, new de.karolski.teeter_totter.frameworks.linb.Framework);
  de.karolski.teeter_totter.core.setup_environment.call(null, "\ufdd0'debug?", true);
  de.karolski.teeter_totter.core.setup_connection.call(null);
  return de.karolski.teeter_totter.example.example1.call(null)
};
goog.exportSymbol("de.karolski.teeter_totter.example.main", de.karolski.teeter_totter.example.main);
